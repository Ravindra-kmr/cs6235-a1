class jdk.internal.module.ModuleBootstrap$Counters extends java.lang.Object
{
    private static final boolean PUBLISH_COUNTERS;
    private static final boolean PRINT_COUNTERS;
    private static java.util.Map counters;

    void <init>()
    {
        jdk.internal.module.ModuleBootstrap$Counters this;

        this := @this: jdk.internal.module.ModuleBootstrap$Counters;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;

        nop;
    }

    static void add(java.lang.String, long)
    {
        long $stack5, start, $stack6, $stack10;
        java.lang.Long $stack7;
        java.util.Map $stack4;
        java.lang.Object $stack8;
        java.lang.String name, $stack11;
        boolean $stack3, $stack9;

        name := @parameter0: java.lang.String;

        start := @parameter1: long;

        $stack3 = <jdk.internal.module.ModuleBootstrap$Counters: boolean PUBLISH_COUNTERS>;

        if $stack3 != 0 goto label1;

        $stack9 = <jdk.internal.module.ModuleBootstrap$Counters: boolean PRINT_COUNTERS>;

        if $stack9 == 0 goto label2;

     label1:
        $stack4 = <jdk.internal.module.ModuleBootstrap$Counters: java.util.Map counters>;

        $stack11 = name;

        $stack5 = staticinvoke <java.lang.System: long nanoTime()>();

        $stack10 = start;

        $stack6 = $stack5 - $stack10;

        $stack7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack6);

        $stack8 = interfaceinvoke $stack4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack11, $stack7);

     label2:
        return;

        nop;
    }

    static void publish()
    {
        long $stack14, value;
        bottom_type $stack9, $stack17;
        java.lang.Long $stack13;
        java.util.Map $stack6;
        java.lang.String name, $stack23;
        boolean $stack5, $stack15, $stack16, $stack25, $stack9#3, $stack9#4;
        java.io.PrintStream $stack19;
        jdk.internal.perf.PerfCounter $stack24;
        java.util.Map$Entry e;
        java.util.Iterator $stack8, l0, $stack17#1, $stack17#2;
        java.util.Set $stack7;
        java.lang.Object $stack10, $stack11, $stack12;
        java.lang.StringBuilder $stack18, $stack20, $stack21, $stack22;

        $stack5 = <jdk.internal.module.ModuleBootstrap$Counters: boolean PUBLISH_COUNTERS>;

        if $stack5 != 0 goto label1;

        $stack25 = <jdk.internal.module.ModuleBootstrap$Counters: boolean PRINT_COUNTERS>;

        if $stack25 == 0 goto label5;

     label1:
        $stack6 = <jdk.internal.module.ModuleBootstrap$Counters: java.util.Map counters>;

        $stack7 = interfaceinvoke $stack6.<java.util.Map: java.util.Set entrySet()>();

        $stack8 = interfaceinvoke $stack7.<java.util.Set: java.util.Iterator iterator()>();

        l0 = $stack8;

     label2:
        $stack17#1 = l0;

        $stack17#2 = $stack17#1;

        $stack9#3 = interfaceinvoke $stack17#2.<java.util.Iterator: boolean hasNext()>();

        $stack9#4 = $stack9#3;

        if $stack9#4 == 0 goto label5;

        $stack10 = interfaceinvoke l0.<java.util.Iterator: java.lang.Object next()>();

        e = (java.util.Map$Entry) $stack10;

        $stack11 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>();

        name = (java.lang.String) $stack11;

        $stack12 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>();

        $stack13 = (java.lang.Long) $stack12;

        $stack14 = virtualinvoke $stack13.<java.lang.Long: long longValue()>();

        value = $stack14;

        $stack15 = <jdk.internal.module.ModuleBootstrap$Counters: boolean PUBLISH_COUNTERS>;

        if $stack15 == 0 goto label3;

        $stack24 = staticinvoke <jdk.internal.perf.PerfCounter: jdk.internal.perf.PerfCounter newPerfCounter(java.lang.String)>(name);

        virtualinvoke $stack24.<jdk.internal.perf.PerfCounter: void set(long)>(value);

     label3:
        $stack16 = <jdk.internal.module.ModuleBootstrap$Counters: boolean PRINT_COUNTERS>;

        if $stack16 == 0 goto label4;

        $stack19 = <java.lang.System: java.io.PrintStream out>;

        $stack18 = new java.lang.StringBuilder;

        specialinvoke $stack18.<java.lang.StringBuilder: void <init>()>();

        $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(value);

        $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack19.<java.io.PrintStream: void println(java.lang.String)>($stack23);

     label4:
        goto label2;

     label5:
        return;
    }

    static void <clinit>()
    {
        java.util.LinkedHashMap $stack3;
        java.lang.String $stack1, s;
        boolean $stack2;

        $stack1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("jdk.module.boot.usePerfData");

        s = $stack1;

        if s != null goto label1;

        <jdk.internal.module.ModuleBootstrap$Counters: boolean PUBLISH_COUNTERS> = 0;

        <jdk.internal.module.ModuleBootstrap$Counters: boolean PRINT_COUNTERS> = 0;

        goto label2;

     label1:
        <jdk.internal.module.ModuleBootstrap$Counters: boolean PUBLISH_COUNTERS> = 1;

        $stack2 = virtualinvoke s.<java.lang.String: boolean equals(java.lang.Object)>("debug");

        <jdk.internal.module.ModuleBootstrap$Counters: boolean PRINT_COUNTERS> = $stack2;

        $stack3 = new java.util.LinkedHashMap;

        specialinvoke $stack3.<java.util.LinkedHashMap: void <init>()>();

        <jdk.internal.module.ModuleBootstrap$Counters: java.util.Map counters> = $stack3;

     label2:
        return;
    }
}
