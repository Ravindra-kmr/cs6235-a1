class jdk.internal.jimage.ImageBufferCache$2 extends java.lang.Object implements java.util.Comparator
{

    void <init>()
    {
        jdk.internal.jimage.ImageBufferCache$2 this;

        this := @this: jdk.internal.jimage.ImageBufferCache$2;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;

        nop;
    }

    public int compare(jdk.internal.jimage.ImageBufferCache$BufferReference, jdk.internal.jimage.ImageBufferCache$BufferReference)
    {
        jdk.internal.jimage.ImageBufferCache$2 this;
        byte $stack4#1, $stack3#3;
        bottom_type $stack3, $stack4, $stack5;
        jdk.internal.jimage.ImageBufferCache$BufferReference br2, br1, $stack6, $stack7;
        int $stack4#2, $stack3#4, $stack3#5, $stack5#6, $stack5#7;

        this := @this: jdk.internal.jimage.ImageBufferCache$2;

        br1 := @parameter0: jdk.internal.jimage.ImageBufferCache$BufferReference;

        br2 := @parameter1: jdk.internal.jimage.ImageBufferCache$BufferReference;

        if br2 != null goto label1;

        $stack4#1 = 0;

        $stack4#2 = $stack4#1;

        goto label2;

     label1:
        $stack4#2 = br2.<jdk.internal.jimage.ImageBufferCache$BufferReference: int capacity>;

     label2:
        $stack6 = br1;

        if $stack6 != null goto label3;

        $stack3#3 = 0;

        $stack3#4 = $stack3#3;

        goto label4;

     label3:
        $stack7 = br1;

        $stack3#5 = $stack7.<jdk.internal.jimage.ImageBufferCache$BufferReference: int capacity>;

        $stack3#4 = $stack3#5;

     label4:
        $stack5#6 = staticinvoke <java.lang.Integer: int compare(int,int)>($stack4#2, $stack3#4);

        $stack5#7 = $stack5#6;

        return $stack5#7;

        nop;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        jdk.internal.jimage.ImageBufferCache$BufferReference $stack3, $stack4;
        int $stack5;
        java.lang.Object l1, l2;
        jdk.internal.jimage.ImageBufferCache$2 this;

        this := @this: jdk.internal.jimage.ImageBufferCache$2;

        l1 := @parameter0: java.lang.Object;

        l2 := @parameter1: java.lang.Object;

        $stack4 = (jdk.internal.jimage.ImageBufferCache$BufferReference) l1;

        $stack3 = (jdk.internal.jimage.ImageBufferCache$BufferReference) l2;

        $stack5 = virtualinvoke this.<jdk.internal.jimage.ImageBufferCache$2: int compare(jdk.internal.jimage.ImageBufferCache$BufferReference,jdk.internal.jimage.ImageBufferCache$BufferReference)>($stack4, $stack3);

        return $stack5;

        nop;
    }
}
