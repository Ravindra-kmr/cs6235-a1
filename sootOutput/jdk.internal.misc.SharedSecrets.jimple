public class jdk.internal.misc.SharedSecrets extends java.lang.Object
{
    private static final jdk.internal.misc.Unsafe unsafe;
    private static jdk.internal.misc.JavaUtilJarAccess javaUtilJarAccess;
    private static jdk.internal.misc.JavaLangAccess javaLangAccess;
    private static jdk.internal.misc.JavaLangModuleAccess javaLangModuleAccess;
    private static jdk.internal.misc.JavaLangInvokeAccess javaLangInvokeAccess;
    private static jdk.internal.misc.JavaLangRefAccess javaLangRefAccess;
    private static jdk.internal.misc.JavaIOAccess javaIOAccess;
    private static jdk.internal.misc.JavaNetInetAddressAccess javaNetInetAddressAccess;
    private static jdk.internal.misc.JavaNetHttpCookieAccess javaNetHttpCookieAccess;
    private static jdk.internal.misc.JavaNetSocketAccess javaNetSocketAccess;
    private static jdk.internal.misc.JavaNetUriAccess javaNetUriAccess;
    private static jdk.internal.misc.JavaNetURLAccess javaNetURLAccess;
    private static jdk.internal.misc.JavaNetURLClassLoaderAccess javaNetURLClassLoaderAccess;
    private static jdk.internal.misc.JavaNioAccess javaNioAccess;
    private static jdk.internal.misc.JavaIOFileDescriptorAccess javaIOFileDescriptorAccess;
    private static jdk.internal.misc.JavaIOFilePermissionAccess javaIOFilePermissionAccess;
    private static jdk.internal.misc.JavaSecurityAccess javaSecurityAccess;
    private static jdk.internal.misc.JavaUtilZipFileAccess javaUtilZipFileAccess;
    private static jdk.internal.misc.JavaUtilResourceBundleAccess javaUtilResourceBundleAccess;
    private static jdk.internal.misc.JavaAWTAccess javaAWTAccess;
    private static jdk.internal.misc.JavaAWTFontAccess javaAWTFontAccess;
    private static jdk.internal.misc.JavaBeansAccess javaBeansAccess;
    private static jdk.internal.misc.JavaObjectInputStreamReadString javaObjectInputStreamReadString;
    private static jdk.internal.misc.JavaObjectInputStreamAccess javaObjectInputStreamAccess;
    private static jdk.internal.misc.JavaObjectInputFilterAccess javaObjectInputFilterAccess;
    private static jdk.internal.misc.JavaIORandomAccessFileAccess javaIORandomAccessFileAccess;
    private static jdk.internal.misc.JavaSecuritySignatureAccess javaSecuritySignatureAccess;
    private static jdk.internal.misc.JavaxCryptoSealedObjectAccess javaxCryptoSealedObjectAccess;

    public void <init>()
    {
        jdk.internal.misc.SharedSecrets this;

        this := @this: jdk.internal.misc.SharedSecrets;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;

        nop;
    }

    public static jdk.internal.misc.JavaUtilJarAccess javaUtilJarAccess()
    {
        jdk.internal.misc.JavaUtilJarAccess $stack0, $stack1;
        jdk.internal.misc.Unsafe $stack2;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaUtilJarAccess javaUtilJarAccess>;

        if $stack0 != null goto label1;

        $stack2 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $stack2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/util/jar/JarFile;");

     label1:
        $stack1 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaUtilJarAccess javaUtilJarAccess>;

        return $stack1;
    }

    public static void setJavaUtilJarAccess(jdk.internal.misc.JavaUtilJarAccess)
    {
        jdk.internal.misc.JavaUtilJarAccess access;

        access := @parameter0: jdk.internal.misc.JavaUtilJarAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaUtilJarAccess javaUtilJarAccess> = access;

        return;

        nop;
    }

    public static void setJavaLangAccess(jdk.internal.misc.JavaLangAccess)
    {
        jdk.internal.misc.JavaLangAccess jla;

        jla := @parameter0: jdk.internal.misc.JavaLangAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaLangAccess javaLangAccess> = jla;

        return;

        nop;
    }

    public static jdk.internal.misc.JavaLangAccess getJavaLangAccess()
    {
        jdk.internal.misc.JavaLangAccess $stack0;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaLangAccess javaLangAccess>;

        return $stack0;
    }

    public static void setJavaLangInvokeAccess(jdk.internal.misc.JavaLangInvokeAccess)
    {
        jdk.internal.misc.JavaLangInvokeAccess jlia;

        jlia := @parameter0: jdk.internal.misc.JavaLangInvokeAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaLangInvokeAccess javaLangInvokeAccess> = jlia;

        return;

        nop;
    }

    public static jdk.internal.misc.JavaLangInvokeAccess getJavaLangInvokeAccess()
    {
        jdk.internal.misc.Unsafe $stack4;
        bottom_type $stack2, c;
        java.lang.Class $stack3, c#1;
        java.lang.ClassNotFoundException $stack5, c#2;
        jdk.internal.misc.JavaLangInvokeAccess $stack1, $stack2#3, $stack2#4;

        $stack1 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaLangInvokeAccess javaLangInvokeAccess>;

        if $stack1 != null goto label4;

     label1:
        $stack3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.lang.invoke.MethodHandleImpl");

        c#1 = $stack3;

        $stack4 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $stack4.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(c#1);

     label2:
        goto label4;

     label3:
        $stack5 := @caughtexception;

        c#2 = $stack5;

     label4:
        $stack2#3 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaLangInvokeAccess javaLangInvokeAccess>;

        $stack2#4 = $stack2#3;

        return $stack2#4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static void setJavaLangModuleAccess(jdk.internal.misc.JavaLangModuleAccess)
    {
        jdk.internal.misc.JavaLangModuleAccess jlrma;

        jlrma := @parameter0: jdk.internal.misc.JavaLangModuleAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaLangModuleAccess javaLangModuleAccess> = jlrma;

        return;

        nop;
    }

    public static jdk.internal.misc.JavaLangModuleAccess getJavaLangModuleAccess()
    {
        jdk.internal.misc.Unsafe $stack2;
        jdk.internal.misc.JavaLangModuleAccess $stack0, $stack1;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaLangModuleAccess javaLangModuleAccess>;

        if $stack0 != null goto label1;

        $stack2 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $stack2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/lang/module/ModuleDescriptor;");

     label1:
        $stack1 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaLangModuleAccess javaLangModuleAccess>;

        return $stack1;
    }

    public static void setJavaLangRefAccess(jdk.internal.misc.JavaLangRefAccess)
    {
        jdk.internal.misc.JavaLangRefAccess jlra;

        jlra := @parameter0: jdk.internal.misc.JavaLangRefAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaLangRefAccess javaLangRefAccess> = jlra;

        return;

        nop;
    }

    public static jdk.internal.misc.JavaLangRefAccess getJavaLangRefAccess()
    {
        jdk.internal.misc.JavaLangRefAccess $stack0;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaLangRefAccess javaLangRefAccess>;

        return $stack0;
    }

    public static void setJavaNetUriAccess(jdk.internal.misc.JavaNetUriAccess)
    {
        jdk.internal.misc.JavaNetUriAccess jnua;

        jnua := @parameter0: jdk.internal.misc.JavaNetUriAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaNetUriAccess javaNetUriAccess> = jnua;

        return;

        nop;
    }

    public static jdk.internal.misc.JavaNetUriAccess getJavaNetUriAccess()
    {
        jdk.internal.misc.Unsafe $stack2;
        jdk.internal.misc.JavaNetUriAccess $stack0, $stack1;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaNetUriAccess javaNetUriAccess>;

        if $stack0 != null goto label1;

        $stack2 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $stack2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/net/URI;");

     label1:
        $stack1 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaNetUriAccess javaNetUriAccess>;

        return $stack1;
    }

    public static void setJavaNetURLAccess(jdk.internal.misc.JavaNetURLAccess)
    {
        jdk.internal.misc.JavaNetURLAccess jnua;

        jnua := @parameter0: jdk.internal.misc.JavaNetURLAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaNetURLAccess javaNetURLAccess> = jnua;

        return;

        nop;
    }

    public static jdk.internal.misc.JavaNetURLAccess getJavaNetURLAccess()
    {
        jdk.internal.misc.Unsafe $stack2;
        jdk.internal.misc.JavaNetURLAccess $stack0, $stack1;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaNetURLAccess javaNetURLAccess>;

        if $stack0 != null goto label1;

        $stack2 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $stack2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/net/URL;");

     label1:
        $stack1 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaNetURLAccess javaNetURLAccess>;

        return $stack1;
    }

    public static void setJavaNetURLClassLoaderAccess(jdk.internal.misc.JavaNetURLClassLoaderAccess)
    {
        jdk.internal.misc.JavaNetURLClassLoaderAccess jnua;

        jnua := @parameter0: jdk.internal.misc.JavaNetURLClassLoaderAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaNetURLClassLoaderAccess javaNetURLClassLoaderAccess> = jnua;

        return;

        nop;
    }

    public static jdk.internal.misc.JavaNetURLClassLoaderAccess getJavaNetURLClassLoaderAccess()
    {
        jdk.internal.misc.Unsafe $stack2;
        jdk.internal.misc.JavaNetURLClassLoaderAccess $stack0, $stack1;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaNetURLClassLoaderAccess javaNetURLClassLoaderAccess>;

        if $stack0 != null goto label1;

        $stack2 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $stack2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/net/URLClassLoader;");

     label1:
        $stack1 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaNetURLClassLoaderAccess javaNetURLClassLoaderAccess>;

        return $stack1;
    }

    public static void setJavaNetInetAddressAccess(jdk.internal.misc.JavaNetInetAddressAccess)
    {
        jdk.internal.misc.JavaNetInetAddressAccess jna;

        jna := @parameter0: jdk.internal.misc.JavaNetInetAddressAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaNetInetAddressAccess javaNetInetAddressAccess> = jna;

        return;

        nop;
    }

    public static jdk.internal.misc.JavaNetInetAddressAccess getJavaNetInetAddressAccess()
    {
        jdk.internal.misc.Unsafe $stack2;
        jdk.internal.misc.JavaNetInetAddressAccess $stack0, $stack1;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaNetInetAddressAccess javaNetInetAddressAccess>;

        if $stack0 != null goto label1;

        $stack2 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $stack2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/net/InetAddress;");

     label1:
        $stack1 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaNetInetAddressAccess javaNetInetAddressAccess>;

        return $stack1;
    }

    public static void setJavaNetHttpCookieAccess(jdk.internal.misc.JavaNetHttpCookieAccess)
    {
        jdk.internal.misc.JavaNetHttpCookieAccess a;

        a := @parameter0: jdk.internal.misc.JavaNetHttpCookieAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaNetHttpCookieAccess javaNetHttpCookieAccess> = a;

        return;

        nop;
    }

    public static jdk.internal.misc.JavaNetHttpCookieAccess getJavaNetHttpCookieAccess()
    {
        jdk.internal.misc.Unsafe $stack2;
        jdk.internal.misc.JavaNetHttpCookieAccess $stack0, $stack1;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaNetHttpCookieAccess javaNetHttpCookieAccess>;

        if $stack0 != null goto label1;

        $stack2 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $stack2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/net/HttpCookie;");

     label1:
        $stack1 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaNetHttpCookieAccess javaNetHttpCookieAccess>;

        return $stack1;
    }

    public static void setJavaNetSocketAccess(jdk.internal.misc.JavaNetSocketAccess)
    {
        jdk.internal.misc.JavaNetSocketAccess jnsa;

        jnsa := @parameter0: jdk.internal.misc.JavaNetSocketAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaNetSocketAccess javaNetSocketAccess> = jnsa;

        return;

        nop;
    }

    public static jdk.internal.misc.JavaNetSocketAccess getJavaNetSocketAccess()
    {
        jdk.internal.misc.Unsafe $stack2;
        jdk.internal.misc.JavaNetSocketAccess $stack0, $stack1;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaNetSocketAccess javaNetSocketAccess>;

        if $stack0 != null goto label1;

        $stack2 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $stack2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/net/ServerSocket;");

     label1:
        $stack1 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaNetSocketAccess javaNetSocketAccess>;

        return $stack1;
    }

    public static void setJavaNioAccess(jdk.internal.misc.JavaNioAccess)
    {
        jdk.internal.misc.JavaNioAccess jna;

        jna := @parameter0: jdk.internal.misc.JavaNioAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaNioAccess javaNioAccess> = jna;

        return;

        nop;
    }

    public static jdk.internal.misc.JavaNioAccess getJavaNioAccess()
    {
        jdk.internal.misc.JavaNioAccess $stack0, $stack1;
        jdk.internal.misc.Unsafe $stack2;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaNioAccess javaNioAccess>;

        if $stack0 != null goto label1;

        $stack2 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $stack2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/nio/Buffer;");

     label1:
        $stack1 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaNioAccess javaNioAccess>;

        return $stack1;
    }

    public static void setJavaIOAccess(jdk.internal.misc.JavaIOAccess)
    {
        jdk.internal.misc.JavaIOAccess jia;

        jia := @parameter0: jdk.internal.misc.JavaIOAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaIOAccess javaIOAccess> = jia;

        return;

        nop;
    }

    public static jdk.internal.misc.JavaIOAccess getJavaIOAccess()
    {
        jdk.internal.misc.Unsafe $stack2;
        jdk.internal.misc.JavaIOAccess $stack0, $stack1;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaIOAccess javaIOAccess>;

        if $stack0 != null goto label1;

        $stack2 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $stack2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/io/Console;");

     label1:
        $stack1 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaIOAccess javaIOAccess>;

        return $stack1;
    }

    public static void setJavaIOFileDescriptorAccess(jdk.internal.misc.JavaIOFileDescriptorAccess)
    {
        jdk.internal.misc.JavaIOFileDescriptorAccess jiofda;

        jiofda := @parameter0: jdk.internal.misc.JavaIOFileDescriptorAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaIOFileDescriptorAccess javaIOFileDescriptorAccess> = jiofda;

        return;

        nop;
    }

    public static jdk.internal.misc.JavaIOFilePermissionAccess getJavaIOFilePermissionAccess()
    {
        jdk.internal.misc.Unsafe $stack2;
        jdk.internal.misc.JavaIOFilePermissionAccess $stack0, $stack1;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaIOFilePermissionAccess javaIOFilePermissionAccess>;

        if $stack0 != null goto label1;

        $stack2 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $stack2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/io/FilePermission;");

     label1:
        $stack1 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaIOFilePermissionAccess javaIOFilePermissionAccess>;

        return $stack1;
    }

    public static void setJavaIOFilePermissionAccess(jdk.internal.misc.JavaIOFilePermissionAccess)
    {
        jdk.internal.misc.JavaIOFilePermissionAccess jiofpa;

        jiofpa := @parameter0: jdk.internal.misc.JavaIOFilePermissionAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaIOFilePermissionAccess javaIOFilePermissionAccess> = jiofpa;

        return;

        nop;
    }

    public static jdk.internal.misc.JavaIOFileDescriptorAccess getJavaIOFileDescriptorAccess()
    {
        jdk.internal.misc.JavaIOFileDescriptorAccess $stack0, $stack1;
        jdk.internal.misc.Unsafe $stack2;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaIOFileDescriptorAccess javaIOFileDescriptorAccess>;

        if $stack0 != null goto label1;

        $stack2 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $stack2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/io/FileDescriptor;");

     label1:
        $stack1 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaIOFileDescriptorAccess javaIOFileDescriptorAccess>;

        return $stack1;
    }

    public static void setJavaSecurityAccess(jdk.internal.misc.JavaSecurityAccess)
    {
        jdk.internal.misc.JavaSecurityAccess jsa;

        jsa := @parameter0: jdk.internal.misc.JavaSecurityAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaSecurityAccess javaSecurityAccess> = jsa;

        return;

        nop;
    }

    public static jdk.internal.misc.JavaSecurityAccess getJavaSecurityAccess()
    {
        jdk.internal.misc.Unsafe $stack2;
        jdk.internal.misc.JavaSecurityAccess $stack0, $stack1;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaSecurityAccess javaSecurityAccess>;

        if $stack0 != null goto label1;

        $stack2 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $stack2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/security/ProtectionDomain;");

     label1:
        $stack1 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaSecurityAccess javaSecurityAccess>;

        return $stack1;
    }

    public static jdk.internal.misc.JavaUtilZipFileAccess getJavaUtilZipFileAccess()
    {
        jdk.internal.misc.Unsafe $stack2;
        jdk.internal.misc.JavaUtilZipFileAccess $stack0, $stack1;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaUtilZipFileAccess javaUtilZipFileAccess>;

        if $stack0 != null goto label1;

        $stack2 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $stack2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/util/zip/ZipFile;");

     label1:
        $stack1 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaUtilZipFileAccess javaUtilZipFileAccess>;

        return $stack1;
    }

    public static void setJavaUtilZipFileAccess(jdk.internal.misc.JavaUtilZipFileAccess)
    {
        jdk.internal.misc.JavaUtilZipFileAccess access;

        access := @parameter0: jdk.internal.misc.JavaUtilZipFileAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaUtilZipFileAccess javaUtilZipFileAccess> = access;

        return;

        nop;
    }

    public static void setJavaAWTAccess(jdk.internal.misc.JavaAWTAccess)
    {
        jdk.internal.misc.JavaAWTAccess jaa;

        jaa := @parameter0: jdk.internal.misc.JavaAWTAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaAWTAccess javaAWTAccess> = jaa;

        return;

        nop;
    }

    public static jdk.internal.misc.JavaAWTAccess getJavaAWTAccess()
    {
        jdk.internal.misc.JavaAWTAccess $stack0;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaAWTAccess javaAWTAccess>;

        return $stack0;
    }

    public static void setJavaAWTFontAccess(jdk.internal.misc.JavaAWTFontAccess)
    {
        jdk.internal.misc.JavaAWTFontAccess jafa;

        jafa := @parameter0: jdk.internal.misc.JavaAWTFontAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaAWTFontAccess javaAWTFontAccess> = jafa;

        return;

        nop;
    }

    public static jdk.internal.misc.JavaAWTFontAccess getJavaAWTFontAccess()
    {
        jdk.internal.misc.JavaAWTFontAccess $stack0;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaAWTFontAccess javaAWTFontAccess>;

        return $stack0;
    }

    public static jdk.internal.misc.JavaBeansAccess getJavaBeansAccess()
    {
        jdk.internal.misc.JavaBeansAccess $stack0;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaBeansAccess javaBeansAccess>;

        return $stack0;
    }

    public static void setJavaBeansAccess(jdk.internal.misc.JavaBeansAccess)
    {
        jdk.internal.misc.JavaBeansAccess access;

        access := @parameter0: jdk.internal.misc.JavaBeansAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaBeansAccess javaBeansAccess> = access;

        return;

        nop;
    }

    public static jdk.internal.misc.JavaUtilResourceBundleAccess getJavaUtilResourceBundleAccess()
    {
        jdk.internal.misc.JavaUtilResourceBundleAccess $stack0, $stack1;
        jdk.internal.misc.Unsafe $stack2;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaUtilResourceBundleAccess javaUtilResourceBundleAccess>;

        if $stack0 != null goto label1;

        $stack2 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $stack2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/util/ResourceBundle;");

     label1:
        $stack1 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaUtilResourceBundleAccess javaUtilResourceBundleAccess>;

        return $stack1;
    }

    public static void setJavaUtilResourceBundleAccess(jdk.internal.misc.JavaUtilResourceBundleAccess)
    {
        jdk.internal.misc.JavaUtilResourceBundleAccess access;

        access := @parameter0: jdk.internal.misc.JavaUtilResourceBundleAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaUtilResourceBundleAccess javaUtilResourceBundleAccess> = access;

        return;

        nop;
    }

    public static jdk.internal.misc.JavaObjectInputStreamReadString getJavaObjectInputStreamReadString()
    {
        jdk.internal.misc.Unsafe $stack2;
        jdk.internal.misc.JavaObjectInputStreamReadString $stack0, $stack1;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaObjectInputStreamReadString javaObjectInputStreamReadString>;

        if $stack0 != null goto label1;

        $stack2 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $stack2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/io/ObjectInputStream;");

     label1:
        $stack1 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaObjectInputStreamReadString javaObjectInputStreamReadString>;

        return $stack1;
    }

    public static void setJavaObjectInputStreamReadString(jdk.internal.misc.JavaObjectInputStreamReadString)
    {
        jdk.internal.misc.JavaObjectInputStreamReadString access;

        access := @parameter0: jdk.internal.misc.JavaObjectInputStreamReadString;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaObjectInputStreamReadString javaObjectInputStreamReadString> = access;

        return;

        nop;
    }

    public static jdk.internal.misc.JavaObjectInputStreamAccess getJavaObjectInputStreamAccess()
    {
        jdk.internal.misc.Unsafe $stack2;
        jdk.internal.misc.JavaObjectInputStreamAccess $stack0, $stack1;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaObjectInputStreamAccess javaObjectInputStreamAccess>;

        if $stack0 != null goto label1;

        $stack2 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $stack2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/io/ObjectInputStream;");

     label1:
        $stack1 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaObjectInputStreamAccess javaObjectInputStreamAccess>;

        return $stack1;
    }

    public static void setJavaObjectInputStreamAccess(jdk.internal.misc.JavaObjectInputStreamAccess)
    {
        jdk.internal.misc.JavaObjectInputStreamAccess access;

        access := @parameter0: jdk.internal.misc.JavaObjectInputStreamAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaObjectInputStreamAccess javaObjectInputStreamAccess> = access;

        return;

        nop;
    }

    public static jdk.internal.misc.JavaObjectInputFilterAccess getJavaObjectInputFilterAccess()
    {
        jdk.internal.misc.Unsafe $stack2;
        jdk.internal.misc.JavaObjectInputFilterAccess $stack0, $stack1;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaObjectInputFilterAccess javaObjectInputFilterAccess>;

        if $stack0 != null goto label1;

        $stack2 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $stack2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/io/ObjectInputFilter$Config;");

     label1:
        $stack1 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaObjectInputFilterAccess javaObjectInputFilterAccess>;

        return $stack1;
    }

    public static void setJavaObjectInputFilterAccess(jdk.internal.misc.JavaObjectInputFilterAccess)
    {
        jdk.internal.misc.JavaObjectInputFilterAccess access;

        access := @parameter0: jdk.internal.misc.JavaObjectInputFilterAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaObjectInputFilterAccess javaObjectInputFilterAccess> = access;

        return;

        nop;
    }

    public static void setJavaIORandomAccessFileAccess(jdk.internal.misc.JavaIORandomAccessFileAccess)
    {
        jdk.internal.misc.JavaIORandomAccessFileAccess jirafa;

        jirafa := @parameter0: jdk.internal.misc.JavaIORandomAccessFileAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaIORandomAccessFileAccess javaIORandomAccessFileAccess> = jirafa;

        return;

        nop;
    }

    public static jdk.internal.misc.JavaIORandomAccessFileAccess getJavaIORandomAccessFileAccess()
    {
        jdk.internal.misc.Unsafe $stack2;
        jdk.internal.misc.JavaIORandomAccessFileAccess $stack0, $stack1;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaIORandomAccessFileAccess javaIORandomAccessFileAccess>;

        if $stack0 != null goto label1;

        $stack2 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $stack2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/io/RandomAccessFile;");

     label1:
        $stack1 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaIORandomAccessFileAccess javaIORandomAccessFileAccess>;

        return $stack1;
    }

    public static void setJavaSecuritySignatureAccess(jdk.internal.misc.JavaSecuritySignatureAccess)
    {
        jdk.internal.misc.JavaSecuritySignatureAccess jssa;

        jssa := @parameter0: jdk.internal.misc.JavaSecuritySignatureAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaSecuritySignatureAccess javaSecuritySignatureAccess> = jssa;

        return;

        nop;
    }

    public static jdk.internal.misc.JavaSecuritySignatureAccess getJavaSecuritySignatureAccess()
    {
        jdk.internal.misc.Unsafe $stack2;
        jdk.internal.misc.JavaSecuritySignatureAccess $stack0, $stack1;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaSecuritySignatureAccess javaSecuritySignatureAccess>;

        if $stack0 != null goto label1;

        $stack2 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $stack2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/security/Signature;");

     label1:
        $stack1 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaSecuritySignatureAccess javaSecuritySignatureAccess>;

        return $stack1;
    }

    public static void setJavaxCryptoSealedObjectAccess(jdk.internal.misc.JavaxCryptoSealedObjectAccess)
    {
        jdk.internal.misc.JavaxCryptoSealedObjectAccess jcsoa;

        jcsoa := @parameter0: jdk.internal.misc.JavaxCryptoSealedObjectAccess;

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaxCryptoSealedObjectAccess javaxCryptoSealedObjectAccess> = jcsoa;

        return;

        nop;
    }

    public static jdk.internal.misc.JavaxCryptoSealedObjectAccess getJavaxCryptoSealedObjectAccess()
    {
        jdk.internal.misc.Unsafe $stack2;
        jdk.internal.misc.JavaxCryptoSealedObjectAccess $stack0, $stack1;

        $stack0 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaxCryptoSealedObjectAccess javaxCryptoSealedObjectAccess>;

        if $stack0 != null goto label1;

        $stack2 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $stack2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljavax/crypto/SealedObject;");

     label1:
        $stack1 = <jdk.internal.misc.SharedSecrets: jdk.internal.misc.JavaxCryptoSealedObjectAccess javaxCryptoSealedObjectAccess>;

        return $stack1;
    }

    static void <clinit>()
    {
        jdk.internal.misc.Unsafe $stack0;

        $stack0 = staticinvoke <jdk.internal.misc.Unsafe: jdk.internal.misc.Unsafe getUnsafe()>();

        <jdk.internal.misc.SharedSecrets: jdk.internal.misc.Unsafe unsafe> = $stack0;

        return;
    }
}
