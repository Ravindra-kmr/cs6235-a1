class jdk.internal.module.IllegalAccessLogger$Usage extends java.lang.Object
{
    private final java.lang.String what;
    private final int stack;

    void <init>(java.lang.String, int)
    {
        int stack;
        java.lang.String what;
        jdk.internal.module.IllegalAccessLogger$Usage this;

        this := @this: jdk.internal.module.IllegalAccessLogger$Usage;

        what := @parameter0: java.lang.String;

        stack := @parameter1: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<jdk.internal.module.IllegalAccessLogger$Usage: java.lang.String what> = what;

        this.<jdk.internal.module.IllegalAccessLogger$Usage: int stack> = stack;

        return;

        nop;
    }

    public int hashCode()
    {
        jdk.internal.module.IllegalAccessLogger$Usage this;
        int $stack2, $stack3, $stack4;
        java.lang.String $stack1;

        this := @this: jdk.internal.module.IllegalAccessLogger$Usage;

        $stack1 = this.<jdk.internal.module.IllegalAccessLogger$Usage: java.lang.String what>;

        $stack2 = virtualinvoke $stack1.<java.lang.String: int hashCode()>();

        $stack3 = this.<jdk.internal.module.IllegalAccessLogger$Usage: int stack>;

        $stack4 = $stack2 ^ $stack3;

        return $stack4;

        nop;
    }

    public boolean equals(java.lang.Object)
    {
        jdk.internal.module.IllegalAccessLogger$Usage that, this;
        bottom_type $stack9;
        int $stack7, $stack8;
        java.lang.Object ob;
        java.lang.String $stack4, $stack5;
        boolean $stack3, $stack6, $stack9#1;

        this := @this: jdk.internal.module.IllegalAccessLogger$Usage;

        ob := @parameter0: java.lang.Object;

        $stack3 = ob instanceof jdk.internal.module.IllegalAccessLogger$Usage;

        if $stack3 == 0 goto label3;

        that = (jdk.internal.module.IllegalAccessLogger$Usage) ob;

        $stack5 = this.<jdk.internal.module.IllegalAccessLogger$Usage: java.lang.String what>;

        $stack4 = that.<jdk.internal.module.IllegalAccessLogger$Usage: java.lang.String what>;

        $stack6 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack4);

        if $stack6 == 0 goto label1;

        $stack8 = this.<jdk.internal.module.IllegalAccessLogger$Usage: int stack>;

        $stack7 = that.<jdk.internal.module.IllegalAccessLogger$Usage: int stack>;

        if $stack8 != $stack7 goto label1;

        $stack9#1 = 1;

        goto label2;

     label1:
        $stack9#1 = 0;

     label2:
        return $stack9#1;

     label3:
        return 0;

        nop;
    }
}
