class jdk.internal.org.objectweb.asm.MethodWriter extends jdk.internal.org.objectweb.asm.MethodVisitor
{
    static final int ACC_CONSTRUCTOR;
    static final int SAME_FRAME;
    static final int SAME_LOCALS_1_STACK_ITEM_FRAME;
    static final int RESERVED;
    static final int SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED;
    static final int CHOP_FRAME;
    static final int SAME_FRAME_EXTENDED;
    static final int APPEND_FRAME;
    static final int FULL_FRAME;
    static final int FRAMES;
    static final int INSERTED_FRAMES;
    static final int MAXS;
    static final int NOTHING;
    final jdk.internal.org.objectweb.asm.ClassWriter cw;
    private int access;
    private final int name;
    private final int desc;
    private final java.lang.String descriptor;
    java.lang.String signature;
    int classReaderOffset;
    int classReaderLength;
    int exceptionCount;
    int[] exceptions;
    private jdk.internal.org.objectweb.asm.ByteVector annd;
    private jdk.internal.org.objectweb.asm.AnnotationWriter anns;
    private jdk.internal.org.objectweb.asm.AnnotationWriter ianns;
    private jdk.internal.org.objectweb.asm.AnnotationWriter tanns;
    private jdk.internal.org.objectweb.asm.AnnotationWriter itanns;
    private jdk.internal.org.objectweb.asm.AnnotationWriter[] panns;
    private jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns;
    private int synthetics;
    private jdk.internal.org.objectweb.asm.Attribute attrs;
    private jdk.internal.org.objectweb.asm.ByteVector code;
    private int maxStack;
    private int maxLocals;
    private int currentLocals;
    int frameCount;
    private jdk.internal.org.objectweb.asm.ByteVector stackMap;
    private int previousFrameOffset;
    private int[] previousFrame;
    private int[] frame;
    private int handlerCount;
    private jdk.internal.org.objectweb.asm.Handler firstHandler;
    private jdk.internal.org.objectweb.asm.Handler lastHandler;
    private int methodParametersCount;
    private jdk.internal.org.objectweb.asm.ByteVector methodParameters;
    private int localVarCount;
    private jdk.internal.org.objectweb.asm.ByteVector localVar;
    private int localVarTypeCount;
    private jdk.internal.org.objectweb.asm.ByteVector localVarType;
    private int lineNumberCount;
    private jdk.internal.org.objectweb.asm.ByteVector lineNumber;
    private int lastCodeOffset;
    private jdk.internal.org.objectweb.asm.AnnotationWriter ctanns;
    private jdk.internal.org.objectweb.asm.AnnotationWriter ictanns;
    private jdk.internal.org.objectweb.asm.Attribute cattrs;
    private int subroutines;
    private final int compute;
    private jdk.internal.org.objectweb.asm.Label labels;
    private jdk.internal.org.objectweb.asm.Label previousBlock;
    private jdk.internal.org.objectweb.asm.Label currentBlock;
    private int stackSize;
    private int maxStackSize;

    void <init>(jdk.internal.org.objectweb.asm.ClassWriter, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], int)
    {
        byte $stack30, $stack36#8, $stack36#9, $b0;
        bottom_type i, $stack34, $stack35, $stack36, $stack37;
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack10, $stack11, $stack25, $stack27, $stack28, $stack29, $stack31, $stack32, $stack45, $stack51, $stack54, $stack56, $stack58, $stack60, $stack63, $stack65, $stack35#2, $stack35#3;
        jdk.internal.org.objectweb.asm.ByteVector $stack9, $u0;
        java.lang.String name, $stack12, desc, signature, $stack16, $stack42, $stack49, $stack52, $stack55, $stack57, $stack66;
        int[] $stack40, $stack43;
        boolean $stack13;
        jdk.internal.org.objectweb.asm.ClassWriter cw, $stack50, $stack53, $stack61, $stack62;
        java.lang.String[] exceptions, $stack59;
        int access, $stack14, $stack15, compute, $stack17, $stack18, $stack21, $stack22, $stack24, $stack26, $stack33, $stack38, $stack39, $stack41, $stack44, $stack46, $stack47, $stack48, $stack64, i#1, $stack34#4, $stack34#5, $stack37#6, $stack37#7, i#10, $i0;
        jdk.internal.org.objectweb.asm.Label $stack19, $stack20, $stack23, $u1;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        cw := @parameter0: jdk.internal.org.objectweb.asm.ClassWriter;

        access := @parameter1: int;

        name := @parameter2: java.lang.String;

        desc := @parameter3: java.lang.String;

        signature := @parameter4: java.lang.String;

        exceptions := @parameter5: java.lang.String[];

        compute := @parameter6: int;

        specialinvoke this.<jdk.internal.org.objectweb.asm.MethodVisitor: void <init>(int)>(393216);

        $u0 = new jdk.internal.org.objectweb.asm.ByteVector;

        $stack9 = $u0;

        specialinvoke $u0.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code> = $stack9;

        $stack10 = cw.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.MethodWriter firstMethod>;

        if $stack10 != null goto label1;

        cw.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.MethodWriter firstMethod> = this;

        goto label2;

     label1:
        $stack11 = cw.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.MethodWriter lastMethod>;

        $stack11.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.MethodVisitor mv> = this;

     label2:
        $stack61 = cw;

        $stack60 = this;

        $stack61.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.MethodWriter lastMethod> = $stack60;

        $stack63 = this;

        $stack62 = cw;

        $stack63.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw> = $stack62;

        $stack65 = this;

        $stack64 = access;

        $stack65.<jdk.internal.org.objectweb.asm.MethodWriter: int access> = $stack64;

        $stack12 = "<init>";

        $stack66 = name;

        $stack13 = virtualinvoke $stack12.<java.lang.String: boolean equals(java.lang.Object)>($stack66);

        if $stack13 == 0 goto label3;

        $stack47 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack48 = $stack47 | 524288;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int access> = $stack48;

     label3:
        $stack51 = this;

        $stack50 = cw;

        $stack49 = name;

        $stack14 = virtualinvoke $stack50.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>($stack49);

        $stack51.<jdk.internal.org.objectweb.asm.MethodWriter: int name> = $stack14;

        $stack54 = this;

        $stack53 = cw;

        $stack52 = desc;

        $stack15 = virtualinvoke $stack53.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>($stack52);

        $stack54.<jdk.internal.org.objectweb.asm.MethodWriter: int desc> = $stack15;

        $stack56 = this;

        $stack55 = desc;

        $stack56.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor> = $stack55;

        $stack58 = this;

        $stack57 = signature;

        $stack58.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String signature> = $stack57;

        $stack59 = exceptions;

        if $stack59 == null goto label5;

        $stack33 = lengthof exceptions;

        if $stack33 <= 0 goto label5;

        $stack38 = lengthof exceptions;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount> = $stack38;

        $stack39 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount>;

        $stack40 = newarray (int)[$stack39];

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] exceptions> = $stack40;

        i#1 = 0;

     label4:
        $stack46 = i#1;

        $stack45 = this;

        $stack41 = $stack45.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount>;

        if $stack46 >= $stack41 goto label5;

        $stack43 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] exceptions>;

        $stack42 = exceptions[i#1];

        $stack44 = virtualinvoke cw.<jdk.internal.org.objectweb.asm.ClassWriter: int newClass(java.lang.String)>($stack42);

        $stack43[i#1] = $stack44;

        i#1 = i#1 + 1;

        goto label4;

     label5:
        $stack35#2 = this;

        $stack35#3 = $stack35#2;

        $stack34#4 = compute;

        $stack34#5 = $stack34#4;

        $stack35#3.<jdk.internal.org.objectweb.asm.MethodWriter: int compute> = $stack34#5;

        $stack37#6 = compute;

        $stack37#7 = $stack37#6;

        $stack36#8 = 3;

        $stack36#9 = $stack36#8;

        if $stack37#7 == $stack36#9 goto label7;

        $stack16 = this.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $stack17 = staticinvoke <jdk.internal.org.objectweb.asm.Type: int getArgumentsAndReturnSizes(java.lang.String)>($stack16);

        i#10 = $stack17 >> 2;

        $stack18 = access & 8;

        if $stack18 == 0 goto label6;

        $b0 = -1;

        $i0 = (int) $b0;

        i#10 = i#10 + $i0;

     label6:
        $stack25 = this;

        $stack24 = i#10;

        $stack25.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals> = $stack24;

        $stack27 = this;

        $stack26 = i#10;

        $stack27.<jdk.internal.org.objectweb.asm.MethodWriter: int currentLocals> = $stack26;

        $stack28 = this;

        $u1 = new jdk.internal.org.objectweb.asm.Label;

        $stack19 = $u1;

        specialinvoke $u1.<jdk.internal.org.objectweb.asm.Label: void <init>()>();

        $stack28.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label labels> = $stack19;

        $stack29 = this;

        $stack20 = $stack29.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label labels>;

        $stack21 = $stack20.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack30 = 8;

        $stack22 = $stack21 | $stack30;

        $stack20.<jdk.internal.org.objectweb.asm.Label: int status> = $stack22;

        $stack32 = this;

        $stack31 = this;

        $stack23 = $stack31.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label labels>;

        virtualinvoke $stack32.<jdk.internal.org.objectweb.asm.MethodWriter: void visitLabel(jdk.internal.org.objectweb.asm.Label)>($stack23);

     label7:
        return;

        nop;
    }

    public void visitParameter(java.lang.String, int)
    {
        jdk.internal.org.objectweb.asm.ClassWriter $stack6;
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack13, $stack15;
        jdk.internal.org.objectweb.asm.ByteVector $stack3, $stack7, $stack9, $stack10, $stack12;
        bottom_type $stack8;
        int $stack4, $stack5, access, $stack11, $stack8#1;
        java.lang.String name, $stack16;
        boolean $stack14;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        name := @parameter0: java.lang.String;

        access := @parameter1: int;

        $stack3 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector methodParameters>;

        if $stack3 != null goto label1;

        $stack12 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack12.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector methodParameters> = $stack12;

     label1:
        $stack13 = this;

        $stack4 = $stack13.<jdk.internal.org.objectweb.asm.MethodWriter: int methodParametersCount>;

        $stack14 = 1;

        $stack5 = $stack4 + $stack14;

        $stack13.<jdk.internal.org.objectweb.asm.MethodWriter: int methodParametersCount> = $stack5;

        $stack15 = this;

        $stack7 = $stack15.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector methodParameters>;

        $stack16 = name;

        if $stack16 != null goto label2;

        $stack8#1 = 0;

        goto label3;

     label2:
        $stack6 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack8#1 = virtualinvoke $stack6.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(name);

     label3:
        $stack9 = virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack8#1);

        $stack11 = access;

        $stack10 = virtualinvoke $stack9.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack11);

        return;

        nop;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotationDefault()
    {
        jdk.internal.org.objectweb.asm.ClassWriter $stack4;
        jdk.internal.org.objectweb.asm.MethodWriter this;
        jdk.internal.org.objectweb.asm.AnnotationWriter $stack2;
        jdk.internal.org.objectweb.asm.ByteVector $stack1, $stack3;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        $stack1 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack1.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector annd> = $stack1;

        $stack2 = new jdk.internal.org.objectweb.asm.AnnotationWriter;

        $stack4 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack3 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector annd>;

        specialinvoke $stack2.<jdk.internal.org.objectweb.asm.AnnotationWriter: void <init>(jdk.internal.org.objectweb.asm.ClassWriter,boolean,jdk.internal.org.objectweb.asm.ByteVector,jdk.internal.org.objectweb.asm.ByteVector,int)>($stack4, 0, $stack3, null, 0);

        return $stack2;

        nop;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.ClassWriter $stack6, $stack11;
        jdk.internal.org.objectweb.asm.MethodWriter this;
        jdk.internal.org.objectweb.asm.AnnotationWriter $stack10, aw, $stack12, $stack13, $stack14;
        jdk.internal.org.objectweb.asm.ByteVector $stack5, bv, $stack8, $stack9;
        int $stack7;
        java.lang.String desc;
        boolean visible;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        desc := @parameter0: java.lang.String;

        visible := @parameter1: boolean;

        $stack5 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack5.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        bv = $stack5;

        $stack6 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack7 = virtualinvoke $stack6.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(desc);

        $stack8 = virtualinvoke bv.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack7);

        $stack9 = virtualinvoke $stack8.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(0);

        $stack10 = new jdk.internal.org.objectweb.asm.AnnotationWriter;

        $stack11 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        specialinvoke $stack10.<jdk.internal.org.objectweb.asm.AnnotationWriter: void <init>(jdk.internal.org.objectweb.asm.ClassWriter,boolean,jdk.internal.org.objectweb.asm.ByteVector,jdk.internal.org.objectweb.asm.ByteVector,int)>($stack11, 1, bv, bv, 2);

        aw = $stack10;

        if visible == 0 goto label1;

        $stack13 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter anns>;

        aw.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack13;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter anns> = aw;

        goto label2;

     label1:
        $stack12 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ianns>;

        aw.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack12;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ianns> = aw;

     label2:
        $stack14 = aw;

        return $stack14;

        nop;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.ClassWriter $stack8, $stack15;
        jdk.internal.org.objectweb.asm.MethodWriter this;
        jdk.internal.org.objectweb.asm.AnnotationWriter $stack12, aw, $stack16, $stack17, $stack18;
        jdk.internal.org.objectweb.asm.ByteVector $stack7, bv, $stack10, $stack11;
        int typeRef, $stack9, $stack13, $stack14;
        java.lang.String desc;
        boolean visible;
        jdk.internal.org.objectweb.asm.TypePath typePath;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        typeRef := @parameter0: int;

        typePath := @parameter1: jdk.internal.org.objectweb.asm.TypePath;

        desc := @parameter2: java.lang.String;

        visible := @parameter3: boolean;

        $stack7 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack7.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        bv = $stack7;

        staticinvoke <jdk.internal.org.objectweb.asm.AnnotationWriter: void putTarget(int,jdk.internal.org.objectweb.asm.TypePath,jdk.internal.org.objectweb.asm.ByteVector)>(typeRef, typePath, bv);

        $stack8 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack9 = virtualinvoke $stack8.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(desc);

        $stack10 = virtualinvoke bv.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack9);

        $stack11 = virtualinvoke $stack10.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(0);

        $stack12 = new jdk.internal.org.objectweb.asm.AnnotationWriter;

        $stack15 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack13 = bv.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack14 = $stack13 - 2;

        specialinvoke $stack12.<jdk.internal.org.objectweb.asm.AnnotationWriter: void <init>(jdk.internal.org.objectweb.asm.ClassWriter,boolean,jdk.internal.org.objectweb.asm.ByteVector,jdk.internal.org.objectweb.asm.ByteVector,int)>($stack15, 1, bv, bv, $stack14);

        aw = $stack12;

        if visible == 0 goto label1;

        $stack17 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter tanns>;

        aw.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack17;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter tanns> = aw;

        goto label2;

     label1:
        $stack16 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter itanns>;

        aw.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack16;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter itanns> = aw;

     label2:
        $stack18 = aw;

        return $stack18;

        nop;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int, java.lang.String, boolean)
    {
        bottom_type $stack29;
        boolean $stack8, visible;
        jdk.internal.org.objectweb.asm.ClassWriter $stack9, $stack14, $stack48;
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack23, $stack26, $stack38, $stack41;
        jdk.internal.org.objectweb.asm.AnnotationWriter $stack13, aw, $stack17, $stack25, $stack27, $stack32, $stack40, $stack42, $stack47, $stack29#1, $stack29#2;
        jdk.internal.org.objectweb.asm.ByteVector $stack6, bv, $stack11, $stack12;
        int $stack10, parameter, $stack21, $stack24, $stack28, $stack36, $stack39, $stack43, $stack44, $stack45, $stack46;
        jdk.internal.org.objectweb.asm.Type[] $stack20, $stack35;
        java.lang.String desc, $stack7, $stack19, $stack34;
        jdk.internal.org.objectweb.asm.AnnotationWriter[] $stack15, $stack16, $stack18, $stack22, $stack30, $stack31, $stack33, $stack37;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        parameter := @parameter0: int;

        desc := @parameter1: java.lang.String;

        visible := @parameter2: boolean;

        $stack6 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack6.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        bv = $stack6;

        $stack7 = "Ljava/lang/Synthetic;";

        $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equals(java.lang.Object)>(desc);

        if $stack8 == 0 goto label1;

        $stack45 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int synthetics>;

        $stack44 = parameter + 1;

        $stack46 = staticinvoke <java.lang.Math: int max(int,int)>($stack45, $stack44);

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int synthetics> = $stack46;

        $stack47 = new jdk.internal.org.objectweb.asm.AnnotationWriter;

        $stack48 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        specialinvoke $stack47.<jdk.internal.org.objectweb.asm.AnnotationWriter: void <init>(jdk.internal.org.objectweb.asm.ClassWriter,boolean,jdk.internal.org.objectweb.asm.ByteVector,jdk.internal.org.objectweb.asm.ByteVector,int)>($stack48, 0, bv, null, 0);

        return $stack47;

     label1:
        $stack9 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack10 = virtualinvoke $stack9.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(desc);

        $stack11 = virtualinvoke bv.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack10);

        $stack12 = virtualinvoke $stack11.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(0);

        $stack13 = new jdk.internal.org.objectweb.asm.AnnotationWriter;

        $stack14 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        specialinvoke $stack13.<jdk.internal.org.objectweb.asm.AnnotationWriter: void <init>(jdk.internal.org.objectweb.asm.ClassWriter,boolean,jdk.internal.org.objectweb.asm.ByteVector,jdk.internal.org.objectweb.asm.ByteVector,int)>($stack14, 1, bv, bv, 2);

        aw = $stack13;

        if visible == 0 goto label3;

        $stack30 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] panns>;

        if $stack30 != null goto label2;

        $stack34 = this.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $stack35 = staticinvoke <jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type[] getArgumentTypes(java.lang.String)>($stack34);

        $stack36 = lengthof $stack35;

        $stack37 = newarray (jdk.internal.org.objectweb.asm.AnnotationWriter)[$stack36];

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] panns> = $stack37;

     label2:
        $stack40 = aw;

        $stack38 = this;

        $stack31 = $stack38.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] panns>;

        $stack39 = parameter;

        $stack32 = $stack31[$stack39];

        $stack40.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack32;

        $stack41 = this;

        $stack33 = $stack41.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] panns>;

        $stack43 = parameter;

        $stack42 = aw;

        $stack33[$stack43] = $stack42;

        goto label5;

     label3:
        $stack15 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns>;

        if $stack15 != null goto label4;

        $stack19 = this.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $stack20 = staticinvoke <jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type[] getArgumentTypes(java.lang.String)>($stack19);

        $stack21 = lengthof $stack20;

        $stack22 = newarray (jdk.internal.org.objectweb.asm.AnnotationWriter)[$stack21];

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns> = $stack22;

     label4:
        $stack25 = aw;

        $stack23 = this;

        $stack16 = $stack23.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns>;

        $stack24 = parameter;

        $stack17 = $stack16[$stack24];

        $stack25.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack17;

        $stack26 = this;

        $stack18 = $stack26.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns>;

        $stack28 = parameter;

        $stack27 = aw;

        $stack18[$stack28] = $stack27;

     label5:
        $stack29#1 = aw;

        $stack29#2 = $stack29#1;

        return $stack29#2;

        nop;
    }

    public void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)
    {
        jdk.internal.org.objectweb.asm.MethodWriter this;
        jdk.internal.org.objectweb.asm.Attribute attr, $stack3, $stack4;
        boolean $stack2;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        attr := @parameter0: jdk.internal.org.objectweb.asm.Attribute;

        $stack2 = virtualinvoke attr.<jdk.internal.org.objectweb.asm.Attribute: boolean isCodeAttribute()>();

        if $stack2 == 0 goto label1;

        $stack4 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute cattrs>;

        attr.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = $stack4;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute cattrs> = attr;

        goto label2;

     label1:
        $stack3 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute attrs>;

        attr.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = $stack3;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute attrs> = attr;

     label2:
        return;

        nop;
    }

    public void visitCode()
    {
        jdk.internal.org.objectweb.asm.MethodWriter this;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        return;

        nop;
    }

    public void visitFrame(int, int, java.lang.Object[], int, java.lang.Object[])
    {
        java.lang.Integer $stack102, $stack132;
        byte $stack32, $stack151, $b0, $b1;
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack34, $stack146, $stack147, $stack150, $stack159, $stack160, $stack36#14, $stack36#15, $stack35#16, $stack35#17, $stack37#22, $stack37#23, $stack41#30, $stack41#31, $stack39#32, $stack39#33, $stack44#40, $stack44#41, $stack42#42, $stack42#43, $stack43#46, $stack43#47;
        java.lang.Object[] stack, $stack33, local;
        int[] $stack81, $stack94, $stack103, $stack113, $stack124, $stack133, $stack143;
        jdk.internal.org.objectweb.asm.Type $stack109, $stack139;
        jdk.internal.org.objectweb.asm.CurrentFrame $stack161, $u0;
        int $stack9, $stack10, type, $stack13, $stack14, $stack15, nStack, $stack29, nLocal, $stack50, $stack51, $stack52, $stack56, $stack57, $stack58, $stack63, $stack64, $stack72, $stack73, $stack75, $stack76, $stack80, $stack83, $stack84, $stack89, $stack92, $stack95, $stack96, $stack97, $stack98, $stack99, $stack100, $stack104, $stack105, $stack106, $stack111, $stack114, $stack119, $stack122, $stack125, $stack126, $stack127, $stack130, $stack134, $stack135, $stack136, $stack141, $stack144, $stack145, $stack148, $stack149, $stack170, frameIndex#1, i#2, $stack129#3, $stack129#4, $stack128#5, $stack128#6, i#8, frameIndex#10, i#11, i#12, i#13, $stack21#20, $stack21#21, $stack22#24, $stack22#25, $stack23#28, $stack23#29, $stack24#34, $stack24#35, $stack40#36, $stack40#37, $stack25#38, $stack25#39, $stack27#44, $stack27#45, $stack26#48, $stack26#49, $stack28#50, $stack28#51, $i0, $i1;
        jdk.internal.org.objectweb.asm.Type[] $stack171;
        java.lang.Object $stack19, $stack62, $stack71, $stack74, $stack85, $stack87, $stack90, $stack101, $stack107, $stack115, $stack117, $stack120, $stack131, $stack137;
        bottom_type frameIndex, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack27, $stack28, $stack35, $stack36, $stack37, $stack38, $stack39, $stack40, $stack41, $stack42, $stack43, $stack44, i, desc, $stack128, $stack129;
        jdk.internal.org.objectweb.asm.ByteVector $stack11, $stack12, $stack16, $stack17, $stack18, $stack30, $stack31, $stack45, $stack46, $stack47, $stack48, $stack49, $stack53, $stack54, $stack55, $stack59, $stack60, $stack61, $stack65, $stack66, $stack67, $stack68, $stack69, $stack70, $stack78, $stack79, $stack82, $stack20#18, $stack20#19, $u1;
        java.lang.String $stack108, $stack110, $stack138, $stack140, $stack167, desc#7, desc#9;
        java.lang.IllegalStateException $stack77, $u2;
        boolean $stack86, $stack88, $stack116, $stack118, $stack38#26, $stack38#27;
        jdk.internal.org.objectweb.asm.Frame $stack153, $stack155, $stack158, $stack165, $stack168;
        jdk.internal.org.objectweb.asm.ClassWriter $stack93, $stack112, $stack123, $stack142, $stack157, $stack169;
        jdk.internal.org.objectweb.asm.Label $stack91, $stack121, $stack152, $stack154, $stack156, $stack162, $stack163, $stack164, $stack166;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        type := @parameter0: int;

        nLocal := @parameter1: int;

        local := @parameter2: java.lang.Object[];

        nStack := @parameter3: int;

        stack := @parameter4: java.lang.Object[];

        $stack9 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack9 != 0 goto label01;

        return;

     label01:
        $stack10 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack10 != 1 goto label04;

        $stack152 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack153 = $stack152.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        if $stack153 != null goto label02;

        $stack162 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $u0 = new jdk.internal.org.objectweb.asm.CurrentFrame;

        $stack161 = $u0;

        specialinvoke $u0.<jdk.internal.org.objectweb.asm.CurrentFrame: void <init>()>();

        $stack162.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame> = $stack161;

        $stack163 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack165 = $stack163.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack164 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack165.<jdk.internal.org.objectweb.asm.Frame: jdk.internal.org.objectweb.asm.Label owner> = $stack164;

        $stack166 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack168 = $stack166.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack169 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack170 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack167 = this.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $stack171 = staticinvoke <jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type[] getArgumentTypes(java.lang.String)>($stack167);

        virtualinvoke $stack168.<jdk.internal.org.objectweb.asm.Frame: void initInputFrame(jdk.internal.org.objectweb.asm.ClassWriter,int,jdk.internal.org.objectweb.asm.Type[],int)>($stack169, $stack170, $stack171, nLocal);

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void visitImplicitFirstFrame()>();

        goto label35;

     label02:
        $b0 = -1;

        $i0 = (int) $b0;

        if type != $i0 goto label03;

        $stack156 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack158 = $stack156.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack157 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $stack158.<jdk.internal.org.objectweb.asm.Frame: void set(jdk.internal.org.objectweb.asm.ClassWriter,int,java.lang.Object[],int,java.lang.Object[])>($stack157, nLocal, local, nStack, stack);

     label03:
        $stack160 = this;

        $stack159 = this;

        $stack154 = $stack159.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack155 = $stack154.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        virtualinvoke $stack160.<jdk.internal.org.objectweb.asm.MethodWriter: void visitFrame(jdk.internal.org.objectweb.asm.Frame)>($stack155);

        goto label35;

     label04:
        $b1 = -1;

        $i1 = (int) $b1;

        if type != $i1 goto label16;

        $stack81 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] previousFrame>;

        if $stack81 != null goto label05;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void visitImplicitFirstFrame()>();

     label05:
        $stack146 = this;

        $stack145 = nLocal;

        $stack146.<jdk.internal.org.objectweb.asm.MethodWriter: int currentLocals> = $stack145;

        $stack150 = this;

        $stack147 = this;

        $stack82 = $stack147.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack83 = $stack82.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack148 = nLocal;

        $stack149 = nStack;

        $stack84 = virtualinvoke $stack150.<jdk.internal.org.objectweb.asm.MethodWriter: int startFrame(int,int,int)>($stack83, $stack148, $stack149);

        frameIndex#1 = $stack84;

        $stack151 = 0;

        i#2 = $stack151;

     label06:
        $stack129#3 = i#2;

        $stack129#4 = $stack129#3;

        $stack128#5 = nLocal;

        $stack128#6 = $stack128#5;

        if $stack129#4 >= $stack128#6 goto label10;

        $stack115 = local[i#2];

        $stack116 = $stack115 instanceof java.lang.String;

        if $stack116 == 0 goto label07;

        $stack137 = local[i#2];

        $stack138 = (java.lang.String) $stack137;

        $stack139 = staticinvoke <jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type getObjectType(java.lang.String)>($stack138);

        $stack140 = virtualinvoke $stack139.<jdk.internal.org.objectweb.asm.Type: java.lang.String getDescriptor()>();

        desc#7 = $stack140;

        $stack143 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack141 = frameIndex#1;

        frameIndex#1 = frameIndex#1 + 1;

        $stack142 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack144 = staticinvoke <jdk.internal.org.objectweb.asm.Frame: int type(jdk.internal.org.objectweb.asm.ClassWriter,java.lang.String)>($stack142, desc#7);

        $stack143[$stack141] = $stack144;

        goto label09;

     label07:
        $stack117 = local[i#2];

        $stack118 = $stack117 instanceof java.lang.Integer;

        if $stack118 == 0 goto label08;

        $stack133 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack130 = frameIndex#1;

        frameIndex#1 = frameIndex#1 + 1;

        $stack134 = 16777216;

        $stack131 = local[i#2];

        $stack132 = (java.lang.Integer) $stack131;

        $stack135 = virtualinvoke $stack132.<java.lang.Integer: int intValue()>();

        $stack136 = $stack134 | $stack135;

        $stack133[$stack130] = $stack136;

        goto label09;

     label08:
        $stack124 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack119 = frameIndex#1;

        frameIndex#1 = frameIndex#1 + 1;

        $stack125 = 25165824;

        $stack123 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack120 = local[i#2];

        $stack121 = (jdk.internal.org.objectweb.asm.Label) $stack120;

        $stack122 = $stack121.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack126 = virtualinvoke $stack123.<jdk.internal.org.objectweb.asm.ClassWriter: int addUninitializedType(java.lang.String,int)>("", $stack122);

        $stack127 = $stack125 | $stack126;

        $stack124[$stack119] = $stack127;

     label09:
        i#2 = i#2 + 1;

        goto label06;

     label10:
        i#8 = 0;

     label11:
        $stack99 = i#8;

        $stack98 = nStack;

        if $stack99 >= $stack98 goto label15;

        $stack85 = stack[i#8];

        $stack86 = $stack85 instanceof java.lang.String;

        if $stack86 == 0 goto label12;

        $stack107 = stack[i#8];

        $stack108 = (java.lang.String) $stack107;

        $stack109 = staticinvoke <jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type getObjectType(java.lang.String)>($stack108);

        $stack110 = virtualinvoke $stack109.<jdk.internal.org.objectweb.asm.Type: java.lang.String getDescriptor()>();

        desc#9 = $stack110;

        $stack113 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack111 = frameIndex#1;

        frameIndex#1 = frameIndex#1 + 1;

        $stack112 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack114 = staticinvoke <jdk.internal.org.objectweb.asm.Frame: int type(jdk.internal.org.objectweb.asm.ClassWriter,java.lang.String)>($stack112, desc#9);

        $stack113[$stack111] = $stack114;

        goto label14;

     label12:
        $stack87 = stack[i#8];

        $stack88 = $stack87 instanceof java.lang.Integer;

        if $stack88 == 0 goto label13;

        $stack103 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack100 = frameIndex#1;

        frameIndex#1 = frameIndex#1 + 1;

        $stack104 = 16777216;

        $stack101 = stack[i#8];

        $stack102 = (java.lang.Integer) $stack101;

        $stack105 = virtualinvoke $stack102.<java.lang.Integer: int intValue()>();

        $stack106 = $stack104 | $stack105;

        $stack103[$stack100] = $stack106;

        goto label14;

     label13:
        $stack94 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack89 = frameIndex#1;

        frameIndex#1 = frameIndex#1 + 1;

        $stack95 = 25165824;

        $stack93 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack90 = stack[i#8];

        $stack91 = (jdk.internal.org.objectweb.asm.Label) $stack90;

        $stack92 = $stack91.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack96 = virtualinvoke $stack93.<jdk.internal.org.objectweb.asm.ClassWriter: int addUninitializedType(java.lang.String,int)>("", $stack92);

        $stack97 = $stack95 | $stack96;

        $stack94[$stack89] = $stack97;

     label14:
        i#8 = i#8 + 1;

        goto label11;

     label15:
        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void endFrame()>();

        goto label35;

     label16:
        $stack11 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        if $stack11 != null goto label17;

        $u1 = new jdk.internal.org.objectweb.asm.ByteVector;

        $stack78 = $u1;

        specialinvoke $u1.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap> = $stack78;

        $stack79 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        frameIndex#10 = $stack79.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        goto label19;

     label17:
        $stack12 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack14 = $stack12.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack13 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int previousFrameOffset>;

        $stack15 = $stack14 - $stack13;

        frameIndex#10 = $stack15 - 1;

        if frameIndex#10 >= 0 goto label19;

        if type != 3 goto label18;

        return;

     label18:
        $u2 = new java.lang.IllegalStateException;

        $stack77 = $u2;

        specialinvoke $u2.<java.lang.IllegalStateException: void <init>()>();

        throw $stack77;

     label19:
        $stack80 = type;

        tableswitch($stack80)
        {
            case 0: goto label20;
            case 1: goto label25;
            case 2: goto label28;
            case 3: goto label29;
            case 4: goto label31;
            default: goto label34;
        };

     label20:
        this.<jdk.internal.org.objectweb.asm.MethodWriter: int currentLocals> = nLocal;

        $stack65 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack66 = virtualinvoke $stack65.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(255);

        $stack67 = virtualinvoke $stack66.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(frameIndex#10);

        $stack68 = virtualinvoke $stack67.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(nLocal);

        i#11 = 0;

     label21:
        $stack76 = i#11;

        $stack75 = nLocal;

        if $stack76 >= $stack75 goto label22;

        $stack74 = local[i#11];

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameType(java.lang.Object)>($stack74);

        i#11 = i#11 + 1;

        goto label21;

     label22:
        $stack69 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack70 = virtualinvoke $stack69.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(nStack);

        i#12 = 0;

     label23:
        $stack73 = i#12;

        $stack72 = nStack;

        if $stack73 >= $stack72 goto label24;

        $stack71 = stack[i#12];

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameType(java.lang.Object)>($stack71);

        i#12 = i#12 + 1;

        goto label23;

     label24:
        goto label34;

     label25:
        $stack56 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int currentLocals>;

        $stack57 = $stack56 + nLocal;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int currentLocals> = $stack57;

        $stack59 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack58 = 251 + nLocal;

        $stack60 = virtualinvoke $stack59.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack58);

        $stack61 = virtualinvoke $stack60.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(frameIndex#10);

        i#13 = 0;

     label26:
        $stack64 = i#13;

        $stack63 = nLocal;

        if $stack64 >= $stack63 goto label27;

        $stack62 = local[i#13];

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameType(java.lang.Object)>($stack62);

        i#13 = i#13 + 1;

        goto label26;

     label27:
        goto label34;

     label28:
        $stack50 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int currentLocals>;

        $stack51 = $stack50 - nLocal;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int currentLocals> = $stack51;

        $stack53 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack52 = 251 - nLocal;

        $stack54 = virtualinvoke $stack53.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack52);

        $stack55 = virtualinvoke $stack54.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(frameIndex#10);

        goto label34;

     label29:
        if frameIndex#10 >= 64 goto label30;

        $stack48 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack49 = virtualinvoke $stack48.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(frameIndex#10);

        goto label34;

     label30:
        $stack45 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack46 = virtualinvoke $stack45.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(251);

        $stack47 = virtualinvoke $stack46.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(frameIndex#10);

        goto label34;

     label31:
        if frameIndex#10 >= 64 goto label32;

        $stack30 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack29 = 64 + frameIndex#10;

        $stack31 = virtualinvoke $stack30.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack29);

        goto label33;

     label32:
        $stack16 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack17 = virtualinvoke $stack16.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(247);

        $stack18 = virtualinvoke $stack17.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(frameIndex#10);

     label33:
        $stack34 = this;

        $stack33 = stack;

        $stack32 = 0;

        $stack19 = $stack33[$stack32];

        virtualinvoke $stack34.<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameType(java.lang.Object)>($stack19);

     label34:
        $stack36#14 = this;

        $stack36#15 = $stack36#14;

        $stack35#16 = this;

        $stack35#17 = $stack35#16;

        $stack20#18 = $stack35#17.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack20#19 = $stack20#18;

        $stack21#20 = $stack20#19.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack21#21 = $stack21#20;

        $stack36#15.<jdk.internal.org.objectweb.asm.MethodWriter: int previousFrameOffset> = $stack21#21;

        $stack37#22 = this;

        $stack37#23 = $stack37#22;

        $stack22#24 = $stack37#23.<jdk.internal.org.objectweb.asm.MethodWriter: int frameCount>;

        $stack22#25 = $stack22#24;

        $stack38#26 = 1;

        $stack38#27 = $stack38#26;

        $stack23#28 = $stack22#25 + $stack38#27;

        $stack23#29 = $stack23#28;

        $stack37#23.<jdk.internal.org.objectweb.asm.MethodWriter: int frameCount> = $stack23#29;

     label35:
        $stack41#30 = this;

        $stack41#31 = $stack41#30;

        $stack39#32 = this;

        $stack39#33 = $stack39#32;

        $stack24#34 = $stack39#33.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStack>;

        $stack24#35 = $stack24#34;

        $stack40#36 = nStack;

        $stack40#37 = $stack40#36;

        $stack25#38 = staticinvoke <java.lang.Math: int max(int,int)>($stack24#35, $stack40#37);

        $stack25#39 = $stack25#38;

        $stack41#31.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStack> = $stack25#39;

        $stack44#40 = this;

        $stack44#41 = $stack44#40;

        $stack42#42 = this;

        $stack42#43 = $stack42#42;

        $stack27#44 = $stack42#43.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals>;

        $stack27#45 = $stack27#44;

        $stack43#46 = this;

        $stack43#47 = $stack43#46;

        $stack26#48 = $stack43#47.<jdk.internal.org.objectweb.asm.MethodWriter: int currentLocals>;

        $stack26#49 = $stack26#48;

        $stack28#50 = staticinvoke <java.lang.Math: int max(int,int)>($stack27#45, $stack26#49);

        $stack28#51 = $stack28#50;

        $stack44#41.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals> = $stack28#51;

        return;

        nop;
    }

    public void visitInsn(int)
    {
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack11, $stack22, $stack23;
        jdk.internal.org.objectweb.asm.ByteVector $stack3, $stack5;
        int[] $stack15;
        int $stack4, opcode, $stack8, $stack13, $stack14, $stack16, $stack17, size, $stack18, $stack21, $stack24, $stack20#1, $stack20#2;
        jdk.internal.org.objectweb.asm.Frame $stack10;
        jdk.internal.org.objectweb.asm.Label $stack7, $stack9;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        opcode := @parameter0: int;

        $stack3 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack4 = $stack3.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack4;

        $stack5 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack5.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(opcode);

        $stack7 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack7 == null goto label7;

        $stack8 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack8 == 0 goto label1;

        $stack14 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack14 != 1 goto label2;

     label1:
        $stack23 = this;

        $stack9 = $stack23.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack10 = $stack9.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack24 = opcode;

        virtualinvoke $stack10.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>($stack24, 0, null, null);

        goto label4;

     label2:
        $stack17 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $stack15 = <jdk.internal.org.objectweb.asm.Frame: int[] SIZE>;

        $stack16 = $stack15[opcode];

        size = $stack17 + $stack16;

        $stack18 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize>;

        if size <= $stack18 goto label3;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize> = size;

     label3:
        $stack22 = this;

        $stack21 = size;

        $stack22.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize> = $stack21;

     label4:
        $stack20#1 = opcode;

        $stack20#2 = $stack20#1;

        if $stack20#2 < 172 goto label5;

        if opcode <= 177 goto label6;

     label5:
        $stack13 = opcode;

        if $stack13 != 191 goto label7;

     label6:
        $stack11 = this;

        virtualinvoke $stack11.<jdk.internal.org.objectweb.asm.MethodWriter: void noSuccessor()>();

     label7:
        return;
    }

    public void visitIntInsn(int, int)
    {
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack20, $stack21;
        jdk.internal.org.objectweb.asm.ByteVector $stack4, $stack7, $stack9;
        int $stack5, opcode, operand, $stack11, $stack16, $stack17, size, $stack18, $stack19, $stack22, $stack23, $stack15#1, $stack15#2;
        jdk.internal.org.objectweb.asm.Frame $stack13;
        jdk.internal.org.objectweb.asm.Label $stack6, $stack12;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        opcode := @parameter0: int;

        operand := @parameter1: int;

        $stack4 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack5 = $stack4.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack5;

        $stack6 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack6 == null goto label4;

        $stack11 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack11 == 0 goto label1;

        $stack16 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack16 != 1 goto label2;

     label1:
        $stack21 = this;

        $stack12 = $stack21.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack13 = $stack12.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack22 = opcode;

        $stack23 = operand;

        virtualinvoke $stack13.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>($stack22, $stack23, null, null);

        goto label4;

     label2:
        if opcode == 188 goto label4;

        $stack17 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        size = $stack17 + 1;

        $stack18 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize>;

        if size <= $stack18 goto label3;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize> = size;

     label3:
        $stack20 = this;

        $stack19 = size;

        $stack20.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize> = $stack19;

     label4:
        $stack15#1 = opcode;

        $stack15#2 = $stack15#1;

        if $stack15#2 != 17 goto label5;

        $stack9 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack9.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>(opcode, operand);

        goto label6;

     label5:
        $stack7 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put11(int,int)>(opcode, operand);

     label6:
        return;
    }

    public void visitVarInsn(int, int)
    {
        int[] $stack44;
        jdk.internal.org.objectweb.asm.Frame $stack40;
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack28, $stack36, $stack49, $stack55, $stack41#2, $stack41#3;
        jdk.internal.org.objectweb.asm.ByteVector $stack4, $stack8, $stack13, $stack14, $stack23;
        int $stack5, var, opcode, $stack10, $stack11, $stack19, $stack20, $stack21, $stack22, $stack25, $stack26, $stack27, $stack29, $stack30, $stack37, $stack38, $stack43, $stack45, $stack46, $stack47, $stack48, $stack51, $stack52, $stack53, $stack56, $stack57, size#1, $stack7#4, $stack7#5, $stack34#8, $stack34#9, $stack35#12, $stack35#13, size#14, $stack32#15, $stack32#16, size#19, $stack17#20, $stack17#21;
        jdk.internal.org.objectweb.asm.Label $stack6, $stack12, $stack39, $stack50, $stack54;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        opcode := @parameter0: int;

        var := @parameter1: int;

        $stack4 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack5 = $stack4.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack5;

        $stack6 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack6 == null goto label05;

        $stack38 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack38 == 0 goto label01;

        $stack43 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack43 != 1 goto label02;

     label01:
        $stack55 = this;

        $stack39 = $stack55.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack40 = $stack39.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack56 = opcode;

        $stack57 = var;

        virtualinvoke $stack40.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>($stack56, $stack57, null, null);

        goto label05;

     label02:
        if opcode != 169 goto label03;

        $stack50 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack51 = $stack50.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack52 = $stack51 | 256;

        $stack50.<jdk.internal.org.objectweb.asm.Label: int status> = $stack52;

        $stack54 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack53 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $stack54.<jdk.internal.org.objectweb.asm.Label: int inputStackTop> = $stack53;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void noSuccessor()>();

        goto label05;

     label03:
        $stack46 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $stack44 = <jdk.internal.org.objectweb.asm.Frame: int[] SIZE>;

        $stack45 = $stack44[opcode];

        size#1 = $stack46 + $stack45;

        $stack47 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize>;

        if size#1 <= $stack47 goto label04;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize> = size#1;

     label04:
        $stack49 = this;

        $stack48 = size#1;

        $stack49.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize> = $stack48;

     label05:
        $stack41#2 = this;

        $stack41#3 = $stack41#2;

        $stack7#4 = $stack41#3.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        $stack7#5 = $stack7#4;

        if $stack7#5 == 3 goto label09;

        if opcode == 22 goto label06;

        if opcode == 24 goto label06;

        if opcode == 55 goto label06;

        if opcode != 57 goto label07;

     label06:
        $stack34#8 = var;

        $stack34#9 = $stack34#8;

        $stack35#12 = $stack34#9 + 2;

        $stack35#13 = $stack35#12;

        size#14 = $stack35#13;

        goto label08;

     label07:
        size#14 = var + 1;

     label08:
        $stack37 = size#14;

        $stack36 = this;

        $stack30 = $stack36.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals>;

        if $stack37 <= $stack30 goto label09;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals> = size#14;

     label09:
        $stack32#15 = var;

        $stack32#16 = $stack32#15;

        if $stack32#16 >= 4 goto label12;

        if opcode == 169 goto label12;

        if opcode >= 54 goto label10;

        $stack25 = opcode - 21;

        $stack26 = $stack25 << 2;

        $stack27 = 26 + $stack26;

        size#19 = $stack27 + var;

        goto label11;

     label10:
        $stack20 = opcode - 54;

        $stack21 = $stack20 << 2;

        $stack22 = 59 + $stack21;

        size#19 = $stack22 + var;

     label11:
        $stack28 = this;

        $stack23 = $stack28.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack29 = size#19;

        virtualinvoke $stack23.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack29);

        goto label14;

     label12:
        $stack19 = var;

        if $stack19 < 256 goto label13;

        $stack13 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack14 = virtualinvoke $stack13.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(196);

        virtualinvoke $stack14.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>(opcode, var);

        goto label14;

     label13:
        $stack8 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack8.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put11(int,int)>(opcode, var);

     label14:
        $stack17#20 = opcode;

        $stack17#21 = $stack17#20;

        if $stack17#21 < 54 goto label15;

        $stack10 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack10 != 0 goto label15;

        $stack11 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int handlerCount>;

        if $stack11 <= 0 goto label15;

        $stack12 = new jdk.internal.org.objectweb.asm.Label;

        specialinvoke $stack12.<jdk.internal.org.objectweb.asm.Label: void <init>()>();

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void visitLabel(jdk.internal.org.objectweb.asm.Label)>($stack12);

     label15:
        return;
    }

    public void visitTypeInsn(int, java.lang.String)
    {
        bottom_type $stack10, $stack11, $stack19, $stack20, $stack21;
        jdk.internal.org.objectweb.asm.Frame $stack18;
        jdk.internal.org.objectweb.asm.ClassWriter $stack7, $stack16;
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack26, $stack27, $stack28, $stack29, $stack19#1, $stack19#2;
        jdk.internal.org.objectweb.asm.ByteVector $stack5, $stack12, $stack15, $stack11#3, $stack11#4;
        int $stack6, opcode, $stack13, $stack17, $stack22, $stack23, size, $stack24, $stack25, $stack30, $stack21#5, $stack21#6, $stack10#9, $stack10#10;
        java.lang.String type;
        jdk.internal.org.objectweb.asm.Label $stack9, $stack14;
        jdk.internal.org.objectweb.asm.Item $stack8, i, $stack31, $stack20#7, $stack20#8;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        opcode := @parameter0: int;

        type := @parameter1: java.lang.String;

        $stack5 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack6 = $stack5.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack6;

        $stack7 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack8 = virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newStringishItem(int,java.lang.String)>(7, type);

        i = $stack8;

        $stack9 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack9 == null goto label4;

        $stack13 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack13 == 0 goto label1;

        $stack22 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack22 != 1 goto label2;

     label1:
        $stack27 = this;

        $stack14 = $stack27.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack18 = $stack14.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack30 = opcode;

        $stack28 = this;

        $stack15 = $stack28.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack17 = $stack15.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack29 = this;

        $stack16 = $stack29.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack31 = i;

        virtualinvoke $stack18.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>($stack30, $stack17, $stack16, $stack31);

        goto label4;

     label2:
        if opcode != 187 goto label4;

        $stack23 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        size = $stack23 + 1;

        $stack24 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize>;

        if size <= $stack24 goto label3;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize> = size;

     label3:
        $stack26 = this;

        $stack25 = size;

        $stack26.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize> = $stack25;

     label4:
        $stack19#1 = this;

        $stack19#2 = $stack19#1;

        $stack11#3 = $stack19#2.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack11#4 = $stack11#3;

        $stack21#5 = opcode;

        $stack21#6 = $stack21#5;

        $stack20#7 = i;

        $stack20#8 = $stack20#7;

        $stack10#9 = $stack20#8.<jdk.internal.org.objectweb.asm.Item: int index>;

        $stack10#10 = $stack10#9;

        $stack12 = virtualinvoke $stack11#4.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>($stack21#6, $stack10#10);

        return;

        nop;
    }

    public void visitFieldInsn(int, java.lang.String, java.lang.String, java.lang.String)
    {
        byte $stack45, $stack37#1, $stack34#3, $stack40#5;
        bottom_type $stack13, $stack14, $stack20, $stack21, $stack22, size, $stack26, $stack29, $stack32, $stack33, $stack34, $stack37, $stack40;
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack28, $stack42, $stack43, $stack32#8, $stack32#9, $stack20#12, $stack20#13;
        jdk.internal.org.objectweb.asm.ByteVector $stack8, $stack15, $stack14#14, $stack14#15;
        java.lang.String owner, name, desc;
        jdk.internal.org.objectweb.asm.Item $stack11, i, $stack46, $stack21#18, $stack21#19;
        boolean $stack29#4;
        jdk.internal.org.objectweb.asm.Frame $stack19;
        jdk.internal.org.objectweb.asm.ClassWriter $stack10, $stack18;
        int $stack9, opcode, $stack16, $stack23, $stack25, $stack27, $stack30, $stack31, $stack35, $stack36, $stack38, $stack39, $stack41, $stack44, size#2, $stack33#6, $stack33#7, $stack26#10, $stack26#11, $stack22#16, $stack22#17, $stack13#20, $stack13#21, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        char $stack24, c;
        jdk.internal.org.objectweb.asm.Label $stack12, $stack17;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        opcode := @parameter0: int;

        owner := @parameter1: java.lang.String;

        name := @parameter2: java.lang.String;

        desc := @parameter3: java.lang.String;

        $stack8 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack9 = $stack8.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack9;

        $stack10 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack11 = virtualinvoke $stack10.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newFieldItem(java.lang.String,java.lang.String,java.lang.String)>(owner, name, desc);

        i = $stack11;

        $stack12 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack12 == null goto label21;

        $stack16 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack16 == 0 goto label01;

        $stack23 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack23 != 1 goto label02;

     label01:
        $stack42 = this;

        $stack17 = $stack42.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack19 = $stack17.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack44 = opcode;

        $stack45 = 0;

        $stack43 = this;

        $stack18 = $stack43.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack46 = i;

        virtualinvoke $stack19.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>($stack44, $stack45, $stack18, $stack46);

        goto label21;

     label02:
        $stack24 = virtualinvoke desc.<java.lang.String: char charAt(int)>(0);

        c = $stack24;

        tableswitch(opcode)
        {
            case 178: goto label03;
            case 179: goto label07;
            case 180: goto label11;
            default: goto label15;
        };

     label03:
        $stack36 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $i0 = (int) c;

        if $i0 == 68 goto label04;

        $i1 = (int) c;

        if $i1 != 74 goto label05;

     label04:
        $stack37#1 = 2;

        goto label06;

     label05:
        $stack37#1 = 1;

     label06:
        $stack38 = $stack36 + $stack37#1;

        size#2 = $stack38;

        goto label19;

     label07:
        $stack31 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $i2 = (int) c;

        if $i2 == 68 goto label08;

        $i3 = (int) c;

        if $i3 != 74 goto label09;

     label08:
        $stack34#3 = -2;

        goto label10;

     label09:
        $stack34#3 = -1;

     label10:
        $i4 = (int) $stack34#3;

        $stack35 = $stack31 + $i4;

        size#2 = $stack35;

        goto label19;

     label11:
        $stack25 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $i5 = (int) c;

        if $i5 == 68 goto label12;

        $i6 = (int) c;

        if $i6 != 74 goto label13;

     label12:
        $stack29#4 = 1;

        goto label14;

     label13:
        $stack29#4 = 0;

     label14:
        $stack30 = $stack25 + $stack29#4;

        size#2 = $stack30;

        goto label19;

     label15:
        $stack39 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $i7 = (int) c;

        if $i7 == 68 goto label16;

        $i8 = (int) c;

        if $i8 != 74 goto label17;

     label16:
        $stack40#5 = -3;

        goto label18;

     label17:
        $stack40#5 = -2;

     label18:
        $i9 = (int) $stack40#5;

        $stack41 = $stack39 + $i9;

        size#2 = $stack41;

     label19:
        $stack33#6 = size#2;

        $stack33#7 = $stack33#6;

        $stack32#8 = this;

        $stack32#9 = $stack32#8;

        $stack26#10 = $stack32#9.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize>;

        $stack26#11 = $stack26#10;

        if $stack33#7 <= $stack26#11 goto label20;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize> = size#2;

     label20:
        $stack28 = this;

        $stack27 = size#2;

        $stack28.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize> = $stack27;

     label21:
        $stack20#12 = this;

        $stack20#13 = $stack20#12;

        $stack14#14 = $stack20#13.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack14#15 = $stack14#14;

        $stack22#16 = opcode;

        $stack22#17 = $stack22#16;

        $stack21#18 = i;

        $stack21#19 = $stack21#18;

        $stack13#20 = $stack21#19.<jdk.internal.org.objectweb.asm.Item: int index>;

        $stack13#21 = $stack13#20;

        $stack15 = virtualinvoke $stack14#15.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>($stack22#17, $stack13#21);

        return;

        nop;
    }

    public void visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        byte $stack26, $stack28, $stack56;
        bottom_type argSize, $stack33, $stack34, size;
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack23, $stack42, $stack48, $stack53, $stack54;
        jdk.internal.org.objectweb.asm.ByteVector $stack9, $stack15, $stack16, $stack18, $stack19, $stack21;
        short $stack25, $stack51, $stack33#5, $stack33#6;
        java.lang.String owner, name, desc;
        jdk.internal.org.objectweb.asm.Item $stack12, i, $stack24, $stack57;
        boolean itf;
        jdk.internal.org.objectweb.asm.Frame $stack32;
        jdk.internal.org.objectweb.asm.ClassWriter $stack11, $stack31;
        int $stack10, opcode, $stack14, $stack17, $stack20, $stack22, $stack27, $stack29, $stack35, $stack36, $stack37, $stack38, $stack39, $stack40, $stack41, $stack43, $stack44, $stack45, $stack46, $stack47, $stack49, $stack50, $stack52, $stack55, argSize#1, size#2, $stack34#3, $stack34#4;
        jdk.internal.org.objectweb.asm.Label $stack13, $stack30;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        opcode := @parameter0: int;

        owner := @parameter1: java.lang.String;

        name := @parameter2: java.lang.String;

        desc := @parameter3: java.lang.String;

        itf := @parameter4: boolean;

        $stack9 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack10 = $stack9.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack10;

        $stack11 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack12 = virtualinvoke $stack11.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newMethodItem(java.lang.String,java.lang.String,java.lang.String,boolean)>(owner, name, desc, itf);

        i = $stack12;

        argSize#1 = i.<jdk.internal.org.objectweb.asm.Item: int intVal>;

        $stack13 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack13 == null goto label07;

        $stack29 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack29 == 0 goto label01;

        $stack35 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack35 != 1 goto label02;

     label01:
        $stack53 = this;

        $stack30 = $stack53.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack32 = $stack30.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack55 = opcode;

        $stack56 = 0;

        $stack54 = this;

        $stack31 = $stack54.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack57 = i;

        virtualinvoke $stack32.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>($stack55, $stack56, $stack31, $stack57);

        goto label07;

     label02:
        if argSize#1 != 0 goto label03;

        $stack50 = staticinvoke <jdk.internal.org.objectweb.asm.Type: int getArgumentsAndReturnSizes(java.lang.String)>(desc);

        argSize#1 = $stack50;

        i.<jdk.internal.org.objectweb.asm.Item: int intVal> = argSize#1;

     label03:
        $stack52 = opcode;

        $stack51 = 184;

        if $stack52 != $stack51 goto label04;

        $stack44 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $stack43 = argSize#1 >> 2;

        $stack46 = $stack44 - $stack43;

        $stack45 = argSize#1 & 3;

        $stack47 = $stack46 + $stack45;

        size#2 = $stack47 + 1;

        goto label05;

     label04:
        $stack37 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $stack36 = argSize#1 >> 2;

        $stack39 = $stack37 - $stack36;

        $stack38 = argSize#1 & 3;

        size#2 = $stack39 + $stack38;

     label05:
        $stack49 = size#2;

        $stack48 = this;

        $stack40 = $stack48.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize>;

        if $stack49 <= $stack40 goto label06;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize> = size#2;

     label06:
        $stack42 = this;

        $stack41 = size#2;

        $stack42.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize> = $stack41;

     label07:
        $stack34#3 = opcode;

        $stack34#4 = $stack34#3;

        $stack33#5 = 185;

        $stack33#6 = $stack33#5;

        if $stack34#4 != $stack33#6 goto label09;

        if argSize#1 != 0 goto label08;

        $stack22 = staticinvoke <jdk.internal.org.objectweb.asm.Type: int getArgumentsAndReturnSizes(java.lang.String)>(desc);

        argSize#1 = $stack22;

        i.<jdk.internal.org.objectweb.asm.Item: int intVal> = argSize#1;

     label08:
        $stack23 = this;

        $stack18 = $stack23.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack25 = 185;

        $stack24 = i;

        $stack17 = $stack24.<jdk.internal.org.objectweb.asm.Item: int index>;

        $stack19 = virtualinvoke $stack18.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>($stack25, $stack17);

        $stack27 = argSize#1;

        $stack26 = 2;

        $stack20 = $stack27 >> $stack26;

        $stack28 = 0;

        $stack21 = virtualinvoke $stack19.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put11(int,int)>($stack20, $stack28);

        goto label10;

     label09:
        $stack15 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack14 = i.<jdk.internal.org.objectweb.asm.Item: int index>;

        $stack16 = virtualinvoke $stack15.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>(opcode, $stack14);

     label10:
        return;

        nop;
    }

    public transient void visitInvokeDynamicInsn(java.lang.String, java.lang.String, jdk.internal.org.objectweb.asm.Handle, java.lang.Object[])
    {
        jdk.internal.org.objectweb.asm.Handle bsm;
        byte $stack38, $stack40, $stack49, $stack26#16, $stack26#17;
        bottom_type argSize, $stack13, $stack14, $stack16, $stack22, $stack23, $stack24, $stack25, $stack26;
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack35, $stack37, $stack44, $stack46, $stack47, $stack22#2, $stack22#3, $stack25#12, $stack25#13;
        java.lang.Object[] bsmArgs;
        jdk.internal.org.objectweb.asm.ByteVector $stack8, $stack15, $stack17, $stack14#4, $stack14#5, $stack16#14, $stack16#15;
        short $stack48, $stack24#6, $stack24#7;
        java.lang.String name, desc;
        jdk.internal.org.objectweb.asm.Item $stack11, i, $stack50, $stack23#8, $stack23#9;
        boolean $stack42;
        jdk.internal.org.objectweb.asm.Frame $stack21;
        jdk.internal.org.objectweb.asm.ClassWriter $stack10, $stack20;
        int $stack9, $stack18, $stack27, $stack28, $stack29, $stack30, $stack31, $stack32, size, $stack33, $stack34, $stack36, $stack39, $stack41, $stack43, $stack45, argSize#1, $stack13#10, $stack13#11;
        jdk.internal.org.objectweb.asm.Label $stack12, $stack19;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        name := @parameter0: java.lang.String;

        desc := @parameter1: java.lang.String;

        bsm := @parameter2: jdk.internal.org.objectweb.asm.Handle;

        bsmArgs := @parameter3: java.lang.Object[];

        $stack8 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack9 = $stack8.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack9;

        $stack10 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack11 = virtualinvoke $stack10.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newInvokeDynamicItem(java.lang.String,java.lang.String,jdk.internal.org.objectweb.asm.Handle,java.lang.Object[])>(name, desc, bsm, bsmArgs);

        i = $stack11;

        argSize#1 = i.<jdk.internal.org.objectweb.asm.Item: int intVal>;

        $stack12 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack12 == null goto label5;

        $stack18 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack18 == 0 goto label1;

        $stack27 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack27 != 1 goto label2;

     label1:
        $stack46 = this;

        $stack19 = $stack46.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack21 = $stack19.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack48 = 186;

        $stack49 = 0;

        $stack47 = this;

        $stack20 = $stack47.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack50 = i;

        virtualinvoke $stack21.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>($stack48, $stack49, $stack20, $stack50);

        goto label5;

     label2:
        if argSize#1 != 0 goto label3;

        $stack36 = staticinvoke <jdk.internal.org.objectweb.asm.Type: int getArgumentsAndReturnSizes(java.lang.String)>(desc);

        argSize#1 = $stack36;

        i.<jdk.internal.org.objectweb.asm.Item: int intVal> = argSize#1;

     label3:
        $stack37 = this;

        $stack29 = $stack37.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $stack39 = argSize#1;

        $stack38 = 2;

        $stack28 = $stack39 >> $stack38;

        $stack31 = $stack29 - $stack28;

        $stack41 = argSize#1;

        $stack40 = 3;

        $stack30 = $stack41 & $stack40;

        $stack32 = $stack31 + $stack30;

        $stack42 = 1;

        $stack43 = $stack32 + $stack42;

        size = $stack43;

        $stack45 = size;

        $stack44 = this;

        $stack33 = $stack44.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize>;

        if $stack45 <= $stack33 goto label4;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize> = size;

     label4:
        $stack35 = this;

        $stack34 = size;

        $stack35.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize> = $stack34;

     label5:
        $stack22#2 = this;

        $stack22#3 = $stack22#2;

        $stack14#4 = $stack22#3.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack14#5 = $stack14#4;

        $stack24#6 = 186;

        $stack24#7 = $stack24#6;

        $stack23#8 = i;

        $stack23#9 = $stack23#8;

        $stack13#10 = $stack23#9.<jdk.internal.org.objectweb.asm.Item: int index>;

        $stack13#11 = $stack13#10;

        $stack15 = virtualinvoke $stack14#5.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>($stack24#7, $stack13#11);

        $stack25#12 = this;

        $stack25#13 = $stack25#12;

        $stack16#14 = $stack25#13.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack16#15 = $stack16#14;

        $stack26#16 = 0;

        $stack26#17 = $stack26#16;

        $stack17 = virtualinvoke $stack16#15.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack26#17);

        return;

        nop;
    }

    public void visitJumpInsn(int, jdk.internal.org.objectweb.asm.Label)
    {
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack46, $stack48, $stack50, $stack60, $stack88, $stack90, $stack93, $stack103, $stack104, $stack106, $stack55#17, $stack55#18, $stack52#19, $stack52#20, $stack53#23, $stack53#24, $stack26#35, $stack26#36;
        jdk.internal.org.objectweb.asm.ByteVector $stack5, $stack10, $stack12, $stack15, $stack20, $stack22, $stack25, $stack27, $stack33, $stack35, $stack37, $stack63, $stack65, $stack43#21, $stack43#22, $stack40#25, $stack40#26;
        int[] $stack69;
        boolean isWide, $stack31, $stack108, $stack107#2;
        jdk.internal.org.objectweb.asm.Frame $stack95, $stack97;
        jdk.internal.org.objectweb.asm.ClassWriter $stack39;
        int $stack6, $stack13, $stack14, $stack18, $stack19, $stack23, $stack24, $stack28, $stack29, $stack30, $stack44, $stack45, $stack58, $stack59, $stack62, $stack67, $stack68, $stack70, $stack71, $stack72, $stack73, $stack76, $stack77, $stack79, $stack80, $stack81, $stack82, $stack84, $stack85, $stack86, $stack87, $stack99, $stack100, opcode#1, $stack102#3, opcode#4, $stack8#8, $stack8#9, $stack9#12, $stack9#13, $stack32#14, $stack41#27, $stack41#28, $stack42#31, $stack42#32, $i0;
        jdk.internal.org.objectweb.asm.Label $stack7, label, $stack78, $stack83, $stack92, $stack94, $stack96, $stack98, $stack101, nextInsn#5, $stack74#6, $stack74#7, $stack57#15, $stack57#16, $stack16#37, $stack16#38, $u0, $u1;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        opcode#1 := @parameter0: int;

        label := @parameter1: jdk.internal.org.objectweb.asm.Label;

        if opcode#1 < 200 goto label01;

        $stack107#2 = 1;

        goto label02;

     label01:
        $stack107#2 = 0;

     label02:
        isWide = $stack107#2;

        $stack108 = isWide;

        if $stack108 == 0 goto label03;

        $stack102#3 = opcode#1 - 33;

        goto label04;

     label03:
        $stack102#3 = opcode#1;

     label04:
        opcode#4 = $stack102#3;

        $stack104 = this;

        $stack103 = this;

        $stack5 = $stack103.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack6 = $stack5.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack104.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack6;

        nextInsn#5 = null;

        $stack106 = this;

        $stack7 = $stack106.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack7 == null goto label09;

        $stack67 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack67 != 0 goto label05;

        $stack96 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack97 = $stack96.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        virtualinvoke $stack97.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>(opcode#4, 0, null, null);

        $stack98 = virtualinvoke label.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label getFirst()>();

        $stack99 = $stack98.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack100 = $stack99 | 16;

        $stack98.<jdk.internal.org.objectweb.asm.Label: int status> = $stack100;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void addSuccessor(int,jdk.internal.org.objectweb.asm.Label)>(0, label);

        if opcode#4 == 167 goto label09;

        $u0 = new jdk.internal.org.objectweb.asm.Label;

        $stack101 = $u0;

        specialinvoke $u0.<jdk.internal.org.objectweb.asm.Label: void <init>()>();

        nextInsn#5 = $stack101;

        goto label09;

     label05:
        $stack68 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack68 != 1 goto label06;

        $stack94 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack95 = $stack94.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        virtualinvoke $stack95.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>(opcode#4, 0, null, null);

        goto label09;

     label06:
        if opcode#4 != 168 goto label08;

        $stack76 = label.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack77 = $stack76 & 512;

        if $stack77 != 0 goto label07;

        $stack84 = label.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack85 = $stack84 | 512;

        label.<jdk.internal.org.objectweb.asm.Label: int status> = $stack85;

        $stack86 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int subroutines>;

        $stack87 = $stack86 + 1;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int subroutines> = $stack87;

     label07:
        $stack88 = this;

        $stack78 = $stack88.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack79 = $stack78.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack80 = $stack79 | 128;

        $stack78.<jdk.internal.org.objectweb.asm.Label: int status> = $stack80;

        $stack93 = this;

        $stack90 = this;

        $stack81 = $stack90.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $stack82 = $stack81 + 1;

        $stack92 = label;

        virtualinvoke $stack93.<jdk.internal.org.objectweb.asm.MethodWriter: void addSuccessor(int,jdk.internal.org.objectweb.asm.Label)>($stack82, $stack92);

        $u1 = new jdk.internal.org.objectweb.asm.Label;

        $stack83 = $u1;

        specialinvoke $u1.<jdk.internal.org.objectweb.asm.Label: void <init>()>();

        nextInsn#5 = $stack83;

        goto label09;

     label08:
        $stack71 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $stack69 = <jdk.internal.org.objectweb.asm.Frame: int[] SIZE>;

        $stack70 = $stack69[opcode#4];

        $stack72 = $stack71 + $stack70;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize> = $stack72;

        $stack73 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void addSuccessor(int,jdk.internal.org.objectweb.asm.Label)>($stack73, label);

     label09:
        $stack74#6 = label;

        $stack74#7 = $stack74#6;

        $stack8#8 = $stack74#7.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack8#9 = $stack8#8;

        $stack9#12 = $stack8#9 & 2;

        $stack9#13 = $stack9#12;

        if $stack9#13 == 0 goto label16;

        $stack29 = label.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack27 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack28 = $stack27.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack30 = $stack29 - $stack28;

        $i0 = (int) -32768;

        if $stack30 >= $i0 goto label16;

        if opcode#4 != 167 goto label10;

        $stack65 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack65.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(200);

        goto label15;

     label10:
        if opcode#4 != 168 goto label11;

        $stack63 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack63.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(201);

        goto label15;

     label11:
        if nextInsn#5 == null goto label12;

        $stack58 = nextInsn#5.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack59 = $stack58 | 16;

        nextInsn#5.<jdk.internal.org.objectweb.asm.Label: int status> = $stack59;

     label12:
        $stack60 = this;

        $stack33 = $stack60.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack62 = opcode#4;

        if $stack62 > 166 goto label13;

        $stack44 = opcode#4 + 1;

        $stack45 = $stack44 ^ 1;

        $stack32#14 = $stack45 - 1;

        goto label14;

     label13:
        $stack32#14 = opcode#4 ^ 1;

     label14:
        virtualinvoke $stack33.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack32#14);

        $stack46 = this;

        $stack35 = $stack46.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack35.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(8);

        $stack48 = this;

        $stack37 = $stack48.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack37.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(220);

        $stack50 = this;

        $stack39 = $stack50.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack39.<jdk.internal.org.objectweb.asm.ClassWriter: boolean hasAsmInsns> = 1;

     label15:
        $stack57#15 = label;

        $stack57#16 = $stack57#15;

        $stack55#17 = this;

        $stack55#18 = $stack55#17;

        $stack52#19 = this;

        $stack52#20 = $stack52#19;

        $stack43#21 = $stack52#20.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack43#22 = $stack43#21;

        $stack53#23 = this;

        $stack53#24 = $stack53#23;

        $stack40#25 = $stack53#24.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack40#26 = $stack40#25;

        $stack41#27 = $stack40#26.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack41#28 = $stack41#27;

        $stack42#31 = $stack41#28 - 1;

        $stack42#32 = $stack42#31;

        virtualinvoke $stack57#16.<jdk.internal.org.objectweb.asm.Label: void put(jdk.internal.org.objectweb.asm.MethodWriter,jdk.internal.org.objectweb.asm.ByteVector,int,boolean)>($stack55#18, $stack43#22, $stack42#32, 1);

        goto label18;

     label16:
        $stack31 = isWide;

        if $stack31 == 0 goto label17;

        $stack20 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack19 = opcode#4 + 33;

        virtualinvoke $stack20.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack19);

        $stack25 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack22 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack23 = $stack22.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack24 = $stack23 - 1;

        virtualinvoke label.<jdk.internal.org.objectweb.asm.Label: void put(jdk.internal.org.objectweb.asm.MethodWriter,jdk.internal.org.objectweb.asm.ByteVector,int,boolean)>(this, $stack25, $stack24, 1);

        goto label18;

     label17:
        $stack10 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack10.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(opcode#4);

        $stack15 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack12 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack13 = $stack12.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack14 = $stack13 - 1;

        virtualinvoke label.<jdk.internal.org.objectweb.asm.Label: void put(jdk.internal.org.objectweb.asm.MethodWriter,jdk.internal.org.objectweb.asm.ByteVector,int,boolean)>(this, $stack15, $stack14, 0);

     label18:
        $stack26#35 = this;

        $stack26#36 = $stack26#35;

        $stack16#37 = $stack26#36.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack16#38 = $stack16#37;

        if $stack16#38 == null goto label20;

        if nextInsn#5 == null goto label19;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void visitLabel(jdk.internal.org.objectweb.asm.Label)>(nextInsn#5);

     label19:
        $stack18 = opcode#4;

        if $stack18 != 167 goto label20;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void noSuccessor()>();

     label20:
        return;
    }

    public void visitLabel(jdk.internal.org.objectweb.asm.Label)
    {
        byte[] $stack5;
        byte $stack25, $stack27;
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack19, $stack24, $stack26, $stack28, $stack29, $stack41, $stack52, $stack57;
        jdk.internal.org.objectweb.asm.ByteVector $stack3, $stack4;
        boolean $stack7, $stack8, $stack9;
        jdk.internal.org.objectweb.asm.Frame $stack32, $stack34, $stack48, $stack50, $stack51, $stack65;
        jdk.internal.org.objectweb.asm.ClassWriter $stack2;
        int $stack6, $stack10, $stack11, $stack12, $stack13, $stack14, $stack20, $stack22, $stack37, $stack38, $stack43, $stack44, $stack45, $stack46, $stack54, $stack55, $stack60, $stack61, $stack62, $stack63;
        jdk.internal.org.objectweb.asm.Label label, $stack15, $stack16, $stack17, $stack18, $stack21, $stack23, $stack30, $stack31, $stack33, $stack35, $stack36, $stack39, $stack40, $stack42, $stack47, $stack49, $stack53, $stack56, $stack58, $stack59, $stack64;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        label := @parameter0: jdk.internal.org.objectweb.asm.Label;

        $stack2 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack7 = $stack2.<jdk.internal.org.objectweb.asm.ClassWriter: boolean hasAsmInsns>;

        $stack3 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack6 = $stack3.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack4 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack5 = $stack4.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack8 = virtualinvoke label.<jdk.internal.org.objectweb.asm.Label: boolean resolve(jdk.internal.org.objectweb.asm.MethodWriter,int,byte[])>(this, $stack6, $stack5);

        $stack9 = $stack7 | $stack8;

        $stack2.<jdk.internal.org.objectweb.asm.ClassWriter: boolean hasAsmInsns> = $stack9;

        $stack10 = label.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack11 = $stack10 & 1;

        if $stack11 == 0 goto label01;

        return;

     label01:
        $stack12 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack12 != 0 goto label07;

        $stack33 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack33 == null goto label03;

        $stack55 = label.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack53 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack54 = $stack53.<jdk.internal.org.objectweb.asm.Label: int position>;

        if $stack55 != $stack54 goto label02;

        $stack59 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack62 = $stack59.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack60 = label.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack61 = $stack60 & 16;

        $stack63 = $stack62 | $stack61;

        $stack59.<jdk.internal.org.objectweb.asm.Label: int status> = $stack63;

        $stack64 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack65 = $stack64.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        label.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame> = $stack65;

        return;

     label02:
        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void addSuccessor(int,jdk.internal.org.objectweb.asm.Label)>(0, label);

     label03:
        $stack57 = this;

        $stack56 = label;

        $stack57.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock> = $stack56;

        $stack58 = label;

        $stack34 = $stack58.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        if $stack34 != null goto label04;

        $stack50 = new jdk.internal.org.objectweb.asm.Frame;

        specialinvoke $stack50.<jdk.internal.org.objectweb.asm.Frame: void <init>()>();

        label.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame> = $stack50;

        $stack51 = label.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack51.<jdk.internal.org.objectweb.asm.Frame: jdk.internal.org.objectweb.asm.Label owner> = label;

     label04:
        $stack52 = this;

        $stack35 = $stack52.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label previousBlock>;

        if $stack35 == null goto label06;

        $stack38 = label.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack36 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label previousBlock>;

        $stack37 = $stack36.<jdk.internal.org.objectweb.asm.Label: int position>;

        if $stack38 != $stack37 goto label05;

        $stack42 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label previousBlock>;

        $stack45 = $stack42.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack43 = label.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack44 = $stack43 & 16;

        $stack46 = $stack45 | $stack44;

        $stack42.<jdk.internal.org.objectweb.asm.Label: int status> = $stack46;

        $stack47 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label previousBlock>;

        $stack48 = $stack47.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        label.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame> = $stack48;

        $stack49 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label previousBlock>;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock> = $stack49;

        return;

     label05:
        $stack39 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label previousBlock>;

        $stack39.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label successor> = label;

     label06:
        $stack41 = this;

        $stack40 = label;

        $stack41.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label previousBlock> = $stack40;

        goto label12;

     label07:
        $stack13 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack13 != 1 goto label09;

        $stack30 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack30 != null goto label08;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock> = label;

        goto label12;

     label08:
        $stack31 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack32 = $stack31.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack32.<jdk.internal.org.objectweb.asm.Frame: jdk.internal.org.objectweb.asm.Label owner> = label;

        goto label12;

     label09:
        $stack14 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack14 != 2 goto label12;

        $stack15 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack15 == null goto label10;

        $stack21 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack20 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize>;

        $stack21.<jdk.internal.org.objectweb.asm.Label: int outputStackMax> = $stack20;

        $stack22 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void addSuccessor(int,jdk.internal.org.objectweb.asm.Label)>($stack22, label);

     label10:
        $stack24 = this;

        $stack23 = label;

        $stack24.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock> = $stack23;

        $stack26 = this;

        $stack25 = 0;

        $stack26.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize> = $stack25;

        $stack28 = this;

        $stack27 = 0;

        $stack28.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize> = $stack27;

        $stack29 = this;

        $stack16 = $stack29.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label previousBlock>;

        if $stack16 == null goto label11;

        $stack17 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label previousBlock>;

        $stack17.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label successor> = label;

     label11:
        $stack19 = this;

        $stack18 = label;

        $stack19.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label previousBlock> = $stack18;

     label12:
        return;

        nop;
    }

    public void visitLdcInsn(java.lang.Object)
    {
        byte $stack18, $stack39, $stack43, $stack44, $stack27#11, $stack27#12;
        bottom_type size, $stack9, $stack24, $stack25, $stack26, $stack27;
        jdk.internal.org.objectweb.asm.Frame $stack23;
        jdk.internal.org.objectweb.asm.ClassWriter $stack6, $stack22;
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack17, $stack33, $stack36, $stack38, $stack41, $stack42;
        jdk.internal.org.objectweb.asm.ByteVector $stack4, $stack10, $stack11, $stack13, $stack14, $stack15, $stack16;
        int $stack5, $stack12, $stack19, $stack20, $stack28, $stack29, $stack30, $stack31, $stack32, $stack34, $stack35, $stack37, $stack40, size#1, $stack25#4, $stack25#5, size#6, $stack9#9, $stack9#10;
        jdk.internal.org.objectweb.asm.Label $stack8, $stack21;
        jdk.internal.org.objectweb.asm.Item $stack7, i, $stack45, $stack24#2, $stack24#3, $stack26#7, $stack26#8;
        java.lang.Object cst;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        cst := @parameter0: java.lang.Object;

        $stack4 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack5 = $stack4.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack5;

        $stack6 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack7 = virtualinvoke $stack6.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newConstItem(java.lang.Object)>(cst);

        i = $stack7;

        $stack8 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack8 == null goto label07;

        $stack20 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack20 == 0 goto label01;

        $stack28 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack28 != 1 goto label02;

     label01:
        $stack41 = this;

        $stack21 = $stack41.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack23 = $stack21.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack43 = 18;

        $stack44 = 0;

        $stack42 = this;

        $stack22 = $stack42.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack45 = i;

        virtualinvoke $stack23.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>($stack43, $stack44, $stack22, $stack45);

        goto label07;

     label02:
        $stack29 = i.<jdk.internal.org.objectweb.asm.Item: int type>;

        if $stack29 == 5 goto label03;

        $stack34 = i.<jdk.internal.org.objectweb.asm.Item: int type>;

        if $stack34 != 6 goto label04;

     label03:
        $stack38 = this;

        $stack30 = $stack38.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $stack39 = 2;

        $stack40 = $stack30 + $stack39;

        size#1 = $stack40;

        goto label05;

     label04:
        $stack35 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        size#1 = $stack35 + 1;

     label05:
        $stack37 = size#1;

        $stack36 = this;

        $stack31 = $stack36.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize>;

        if $stack37 <= $stack31 goto label06;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize> = size#1;

     label06:
        $stack33 = this;

        $stack32 = size#1;

        $stack33.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize> = $stack32;

     label07:
        $stack24#2 = i;

        $stack24#3 = $stack24#2;

        $stack25#4 = $stack24#3.<jdk.internal.org.objectweb.asm.Item: int index>;

        $stack25#5 = $stack25#4;

        size#6 = $stack25#5;

        $stack26#7 = i;

        $stack26#8 = $stack26#7;

        $stack9#9 = $stack26#8.<jdk.internal.org.objectweb.asm.Item: int type>;

        $stack9#10 = $stack9#9;

        $stack27#11 = 5;

        $stack27#12 = $stack27#11;

        if $stack9#10 == $stack27#12 goto label08;

        $stack12 = i.<jdk.internal.org.objectweb.asm.Item: int type>;

        if $stack12 != 6 goto label09;

     label08:
        $stack17 = this;

        $stack10 = $stack17.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack18 = 20;

        $stack19 = size#6;

        $stack11 = virtualinvoke $stack10.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>($stack18, $stack19);

        goto label11;

     label09:
        if size#6 < 256 goto label10;

        $stack15 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack16 = virtualinvoke $stack15.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>(19, size#6);

        goto label11;

     label10:
        $stack13 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack14 = virtualinvoke $stack13.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put11(int,int)>(18, size#6);

     label11:
        return;

        nop;
    }

    public void visitIincInsn(int, int)
    {
        jdk.internal.org.objectweb.asm.Frame $stack25;
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack29, $stack26#1, $stack26#2, $stack12#11, $stack12#12;
        jdk.internal.org.objectweb.asm.ByteVector $stack4, $stack17, $stack18, $stack8#13, $stack8#14, $stack9#17, $stack9#18, $stack10#23, $stack10#24;
        int $stack5, var, increment, n, $stack20, $stack23, $stack28, $stack31, $stack7#3, $stack7#4, $stack22#7, $stack22#8, $stack15#21, $stack15#22, $stack16#25, $stack16#26, $i0;
        jdk.internal.org.objectweb.asm.Label $stack6, $stack24;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        var := @parameter0: int;

        increment := @parameter1: int;

        $stack4 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack5 = $stack4.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack5;

        $stack6 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack6 == null goto label2;

        $stack23 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack23 == 0 goto label1;

        $stack28 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack28 != 1 goto label2;

     label1:
        $stack29 = this;

        $stack24 = $stack29.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack25 = $stack24.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack31 = var;

        virtualinvoke $stack25.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>(132, $stack31, null, null);

     label2:
        $stack26#1 = this;

        $stack26#2 = $stack26#1;

        $stack7#3 = $stack26#2.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        $stack7#4 = $stack7#3;

        if $stack7#4 == 3 goto label3;

        n = var + 1;

        $stack20 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals>;

        if n <= $stack20 goto label3;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals> = n;

     label3:
        $stack22#7 = var;

        $stack22#8 = $stack22#7;

        if $stack22#8 > 255 goto label4;

        if increment > 127 goto label4;

        $i0 = (int) -128;

        if increment >= $i0 goto label5;

     label4:
        $stack12#11 = this;

        $stack12#12 = $stack12#11;

        $stack8#13 = $stack12#12.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack8#14 = $stack8#13;

        $stack9#17 = virtualinvoke $stack8#14.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(196);

        $stack9#18 = $stack9#17;

        $stack15#21 = var;

        $stack15#22 = $stack15#21;

        $stack10#23 = virtualinvoke $stack9#18.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>(132, $stack15#22);

        $stack10#24 = $stack10#23;

        $stack16#25 = increment;

        $stack16#26 = $stack16#25;

        virtualinvoke $stack10#24.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack16#26);

        goto label6;

     label5:
        $stack17 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack18 = virtualinvoke $stack17.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(132);

        virtualinvoke $stack18.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put11(int,int)>(var, increment);

     label6:
        return;
    }

    public transient void visitTableSwitchInsn(int, int, jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label[])
    {
        jdk.internal.org.objectweb.asm.MethodWriter this;
        jdk.internal.org.objectweb.asm.ByteVector $stack7, $stack9, $stack10, $stack11, $stack12, $stack17, $stack18, $stack19, $stack20, $stack21, $stack22, $stack24;
        bottom_type i;
        int $stack8, source, $stack13, $stack14, $stack15, $stack16, min, max, $stack23, $stack27, i#1;
        jdk.internal.org.objectweb.asm.Label[] labels, $stack26;
        jdk.internal.org.objectweb.asm.Label dflt, $stack25;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        min := @parameter0: int;

        max := @parameter1: int;

        dflt := @parameter2: jdk.internal.org.objectweb.asm.Label;

        labels := @parameter3: jdk.internal.org.objectweb.asm.Label[];

        $stack7 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack8 = $stack7.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack8;

        $stack9 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        source = $stack9.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack10 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack11 = virtualinvoke $stack10.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(170);

        $stack17 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack12 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack13 = $stack12.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack14 = $stack13 % 4;

        $stack15 = 4 - $stack14;

        $stack16 = $stack15 % 4;

        $stack18 = virtualinvoke $stack17.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>(null, 0, $stack16);

        $stack19 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke dflt.<jdk.internal.org.objectweb.asm.Label: void put(jdk.internal.org.objectweb.asm.MethodWriter,jdk.internal.org.objectweb.asm.ByteVector,int,boolean)>(this, $stack19, source, 1);

        $stack20 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack21 = virtualinvoke $stack20.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>(min);

        $stack22 = virtualinvoke $stack21.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>(max);

        i#1 = 0;

     label1:
        $stack27 = i#1;

        $stack26 = labels;

        $stack23 = lengthof $stack26;

        if $stack27 >= $stack23 goto label2;

        $stack25 = labels[i#1];

        $stack24 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack25.<jdk.internal.org.objectweb.asm.Label: void put(jdk.internal.org.objectweb.asm.MethodWriter,jdk.internal.org.objectweb.asm.ByteVector,int,boolean)>(this, $stack24, source, 1);

        i#1 = i#1 + 1;

        goto label1;

     label2:
        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void visitSwitchInsn(jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label[])>(dflt, labels);

        return;

        nop;
    }

    public void visitLookupSwitchInsn(jdk.internal.org.objectweb.asm.Label, int[], jdk.internal.org.objectweb.asm.Label[])
    {
        jdk.internal.org.objectweb.asm.MethodWriter this;
        jdk.internal.org.objectweb.asm.ByteVector $stack6, $stack8, $stack9, $stack10, $stack11, $stack16, $stack17, $stack18, $stack20, $stack21, $stack24, $stack25, $stack26;
        bottom_type i;
        int[] keys;
        int $stack7, source, $stack12, $stack13, $stack14, $stack15, $stack19, $stack22, $stack23, $stack29, i#1;
        jdk.internal.org.objectweb.asm.Label[] labels, $stack28;
        jdk.internal.org.objectweb.asm.Label dflt, $stack27;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        dflt := @parameter0: jdk.internal.org.objectweb.asm.Label;

        keys := @parameter1: int[];

        labels := @parameter2: jdk.internal.org.objectweb.asm.Label[];

        $stack6 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack7 = $stack6.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack7;

        $stack8 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        source = $stack8.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack9 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack10 = virtualinvoke $stack9.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(171);

        $stack16 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack11 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack12 = $stack11.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack13 = $stack12 % 4;

        $stack14 = 4 - $stack13;

        $stack15 = $stack14 % 4;

        $stack17 = virtualinvoke $stack16.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>(null, 0, $stack15);

        $stack18 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke dflt.<jdk.internal.org.objectweb.asm.Label: void put(jdk.internal.org.objectweb.asm.MethodWriter,jdk.internal.org.objectweb.asm.ByteVector,int,boolean)>(this, $stack18, source, 1);

        $stack20 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack19 = lengthof labels;

        $stack21 = virtualinvoke $stack20.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack19);

        i#1 = 0;

     label1:
        $stack29 = i#1;

        $stack28 = labels;

        $stack22 = lengthof $stack28;

        if $stack29 >= $stack22 goto label2;

        $stack24 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack23 = keys[i#1];

        $stack25 = virtualinvoke $stack24.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack23);

        $stack27 = labels[i#1];

        $stack26 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        virtualinvoke $stack27.<jdk.internal.org.objectweb.asm.Label: void put(jdk.internal.org.objectweb.asm.MethodWriter,jdk.internal.org.objectweb.asm.ByteVector,int,boolean)>(this, $stack26, source, 1);

        i#1 = i#1 + 1;

        goto label1;

     label2:
        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void visitSwitchInsn(jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label[])>(dflt, labels);

        return;

        nop;
    }

    private void visitSwitchInsn(jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label[])
    {
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack20;
        bottom_type i;
        int $stack5, $stack6, $stack7, $stack8, $stack9, $stack11, $stack13, $stack17, $stack18, $stack19, $stack24, $stack25, $stack27, i#1, i#2;
        jdk.internal.org.objectweb.asm.Label[] labels, $stack12, $stack26;
        jdk.internal.org.objectweb.asm.Frame $stack15;
        jdk.internal.org.objectweb.asm.Label $stack4, dflt, $stack10, $stack14, $stack16, $stack21, $stack22, $stack23;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        dflt := @parameter0: jdk.internal.org.objectweb.asm.Label;

        labels := @parameter1: jdk.internal.org.objectweb.asm.Label[];

        $stack4 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack4 == null goto label6;

        $stack5 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack5 != 0 goto label3;

        $stack14 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack15 = $stack14.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        virtualinvoke $stack15.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>(171, 0, null, null);

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void addSuccessor(int,jdk.internal.org.objectweb.asm.Label)>(0, dflt);

        $stack16 = virtualinvoke dflt.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label getFirst()>();

        $stack17 = $stack16.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack18 = $stack17 | 16;

        $stack16.<jdk.internal.org.objectweb.asm.Label: int status> = $stack18;

        i#1 = 0;

     label1:
        $stack27 = i#1;

        $stack26 = labels;

        $stack19 = lengthof $stack26;

        if $stack27 >= $stack19 goto label2;

        $stack21 = labels[i#1];

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void addSuccessor(int,jdk.internal.org.objectweb.asm.Label)>(0, $stack21);

        $stack22 = labels[i#1];

        $stack23 = virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label getFirst()>();

        $stack24 = $stack23.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack25 = $stack24 | 16;

        $stack23.<jdk.internal.org.objectweb.asm.Label: int status> = $stack25;

        i#1 = i#1 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        $stack6 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $stack7 = $stack6 - 1;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize> = $stack7;

        $stack8 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void addSuccessor(int,jdk.internal.org.objectweb.asm.Label)>($stack8, dflt);

        i#2 = 0;

     label4:
        $stack13 = i#2;

        $stack12 = labels;

        $stack9 = lengthof $stack12;

        if $stack13 >= $stack9 goto label5;

        $stack11 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $stack10 = labels[i#2];

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void addSuccessor(int,jdk.internal.org.objectweb.asm.Label)>($stack11, $stack10);

        i#2 = i#2 + 1;

        goto label4;

     label5:
        $stack20 = this;

        virtualinvoke $stack20.<jdk.internal.org.objectweb.asm.MethodWriter: void noSuccessor()>();

     label6:
        return;

        nop;
    }

    public void visitMultiANewArrayInsn(java.lang.String, int)
    {
        bottom_type $stack9, $stack10, $stack11, $stack17, $stack18, $stack19, $stack20;
        jdk.internal.org.objectweb.asm.Frame $stack16;
        jdk.internal.org.objectweb.asm.ClassWriter $stack6, $stack15;
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack25, $stack26, $stack17#1, $stack17#2;
        jdk.internal.org.objectweb.asm.ByteVector $stack4, $stack12, $stack10#3, $stack10#4, $stack11#11, $stack11#12;
        short $stack27, $stack19#5, $stack19#6;
        int $stack5, dims, $stack13, $stack21, $stack22, $stack23, $stack24, $stack28, $stack9#9, $stack9#10, $stack20#13, $stack20#14;
        java.lang.String desc;
        jdk.internal.org.objectweb.asm.Label $stack8, $stack14;
        jdk.internal.org.objectweb.asm.Item $stack7, i, $stack29, $stack18#7, $stack18#8;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        desc := @parameter0: java.lang.String;

        dims := @parameter1: int;

        $stack4 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack5 = $stack4.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset> = $stack5;

        $stack6 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack7 = virtualinvoke $stack6.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item newStringishItem(int,java.lang.String)>(7, desc);

        i = $stack7;

        $stack8 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        if $stack8 == null goto label3;

        $stack13 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack13 == 0 goto label1;

        $stack21 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack21 != 1 goto label2;

     label1:
        $stack25 = this;

        $stack14 = $stack25.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack16 = $stack14.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack27 = 197;

        $stack28 = dims;

        $stack26 = this;

        $stack15 = $stack26.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack29 = i;

        virtualinvoke $stack16.<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>($stack27, $stack28, $stack15, $stack29);

        goto label3;

     label2:
        $stack23 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize>;

        $stack22 = 1 - dims;

        $stack24 = $stack23 + $stack22;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int stackSize> = $stack24;

     label3:
        $stack17#1 = this;

        $stack17#2 = $stack17#1;

        $stack10#3 = $stack17#2.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack10#4 = $stack10#3;

        $stack19#5 = 197;

        $stack19#6 = $stack19#5;

        $stack18#7 = i;

        $stack18#8 = $stack18#7;

        $stack9#9 = $stack18#8.<jdk.internal.org.objectweb.asm.Item: int index>;

        $stack9#10 = $stack9#9;

        $stack11#11 = virtualinvoke $stack10#4.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>($stack19#6, $stack9#10);

        $stack11#12 = $stack11#11;

        $stack20#13 = dims;

        $stack20#14 = $stack20#13;

        $stack12 = virtualinvoke $stack11#12.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack20#14);

        return;

        nop;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitInsnAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.ClassWriter $stack11, $stack18;
        jdk.internal.org.objectweb.asm.MethodWriter this;
        jdk.internal.org.objectweb.asm.AnnotationWriter $stack15, aw, $stack19, $stack20, $stack21;
        jdk.internal.org.objectweb.asm.ByteVector $stack7, bv, $stack13, $stack14;
        bottom_type typeRef;
        int $stack8, $stack9, $stack10, $stack12, $stack16, $stack17, typeRef#1, typeRef#2;
        java.lang.String desc;
        boolean visible;
        jdk.internal.org.objectweb.asm.TypePath typePath;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        typeRef#1 := @parameter0: int;

        typePath := @parameter1: jdk.internal.org.objectweb.asm.TypePath;

        desc := @parameter2: java.lang.String;

        visible := @parameter3: boolean;

        $stack7 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack7.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        bv = $stack7;

        $stack10 = typeRef#1 & -16776961;

        $stack8 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int lastCodeOffset>;

        $stack9 = $stack8 << 8;

        typeRef#2 = $stack10 | $stack9;

        staticinvoke <jdk.internal.org.objectweb.asm.AnnotationWriter: void putTarget(int,jdk.internal.org.objectweb.asm.TypePath,jdk.internal.org.objectweb.asm.ByteVector)>(typeRef#2, typePath, bv);

        $stack11 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack12 = virtualinvoke $stack11.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(desc);

        $stack13 = virtualinvoke bv.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack12);

        $stack14 = virtualinvoke $stack13.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(0);

        $stack15 = new jdk.internal.org.objectweb.asm.AnnotationWriter;

        $stack18 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack16 = bv.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack17 = $stack16 - 2;

        specialinvoke $stack15.<jdk.internal.org.objectweb.asm.AnnotationWriter: void <init>(jdk.internal.org.objectweb.asm.ClassWriter,boolean,jdk.internal.org.objectweb.asm.ByteVector,jdk.internal.org.objectweb.asm.ByteVector,int)>($stack18, 1, bv, bv, $stack17);

        aw = $stack15;

        if visible == 0 goto label1;

        $stack20 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns>;

        aw.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack20;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns> = aw;

        goto label2;

     label1:
        $stack19 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns>;

        aw.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack19;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns> = aw;

     label2:
        $stack21 = aw;

        return $stack21;

        nop;
    }

    public void visitTryCatchBlock(jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label, java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ClassWriter $stack13;
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack12, $stack16;
        bottom_type $stack14;
        int $stack6, $stack7, $stack14#1;
        java.lang.String type;
        jdk.internal.org.objectweb.asm.Label start, end, handler;
        jdk.internal.org.objectweb.asm.Handler $stack8, h, $stack9, $stack10, $stack11, $stack15;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        start := @parameter0: jdk.internal.org.objectweb.asm.Label;

        end := @parameter1: jdk.internal.org.objectweb.asm.Label;

        handler := @parameter2: jdk.internal.org.objectweb.asm.Label;

        type := @parameter3: java.lang.String;

        $stack6 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int handlerCount>;

        $stack7 = $stack6 + 1;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int handlerCount> = $stack7;

        $stack8 = new jdk.internal.org.objectweb.asm.Handler;

        specialinvoke $stack8.<jdk.internal.org.objectweb.asm.Handler: void <init>()>();

        h = $stack8;

        h.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label start> = start;

        h.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label end> = end;

        h.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label handler> = handler;

        h.<jdk.internal.org.objectweb.asm.Handler: java.lang.String desc> = type;

        $stack15 = h;

        if type == null goto label1;

        $stack13 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack14#1 = virtualinvoke $stack13.<jdk.internal.org.objectweb.asm.ClassWriter: int newClass(java.lang.String)>(type);

        goto label2;

     label1:
        $stack14#1 = 0;

     label2:
        $stack15.<jdk.internal.org.objectweb.asm.Handler: int type> = $stack14#1;

        $stack16 = this;

        $stack9 = $stack16.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Handler lastHandler>;

        if $stack9 != null goto label3;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Handler firstHandler> = h;

        goto label4;

     label3:
        $stack10 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Handler lastHandler>;

        $stack10.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Handler next> = h;

     label4:
        $stack12 = this;

        $stack11 = h;

        $stack12.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Handler lastHandler> = $stack11;

        return;

        nop;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitTryCatchAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.ClassWriter $stack8, $stack15;
        jdk.internal.org.objectweb.asm.MethodWriter this;
        jdk.internal.org.objectweb.asm.AnnotationWriter $stack12, aw, $stack16, $stack17, $stack18;
        jdk.internal.org.objectweb.asm.ByteVector $stack7, bv, $stack10, $stack11;
        int typeRef, $stack9, $stack13, $stack14;
        java.lang.String desc;
        boolean visible;
        jdk.internal.org.objectweb.asm.TypePath typePath;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        typeRef := @parameter0: int;

        typePath := @parameter1: jdk.internal.org.objectweb.asm.TypePath;

        desc := @parameter2: java.lang.String;

        visible := @parameter3: boolean;

        $stack7 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack7.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        bv = $stack7;

        staticinvoke <jdk.internal.org.objectweb.asm.AnnotationWriter: void putTarget(int,jdk.internal.org.objectweb.asm.TypePath,jdk.internal.org.objectweb.asm.ByteVector)>(typeRef, typePath, bv);

        $stack8 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack9 = virtualinvoke $stack8.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(desc);

        $stack10 = virtualinvoke bv.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack9);

        $stack11 = virtualinvoke $stack10.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(0);

        $stack12 = new jdk.internal.org.objectweb.asm.AnnotationWriter;

        $stack15 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack13 = bv.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack14 = $stack13 - 2;

        specialinvoke $stack12.<jdk.internal.org.objectweb.asm.AnnotationWriter: void <init>(jdk.internal.org.objectweb.asm.ClassWriter,boolean,jdk.internal.org.objectweb.asm.ByteVector,jdk.internal.org.objectweb.asm.ByteVector,int)>($stack15, 1, bv, bv, $stack14);

        aw = $stack12;

        if visible == 0 goto label1;

        $stack17 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns>;

        aw.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack17;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns> = aw;

        goto label2;

     label1:
        $stack16 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns>;

        aw.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack16;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns> = aw;

     label2:
        $stack18 = aw;

        return $stack18;

        nop;
    }

    public void visitLocalVariable(java.lang.String, java.lang.String, java.lang.String, jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label, int)
    {
        byte $stack47, $stack29#5;
        bottom_type $stack9, $stack29, $stack65;
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack32, $stack35, $stack37, $stack41, $stack43, $stack46, $stack67, $stack69, $stack73, $stack75, $stack65#1, $stack65#2;
        jdk.internal.org.objectweb.asm.ByteVector $stack13, $stack14, $stack18, $stack21, $stack24, $stack25, $stack34, $stack48, $stack52, $stack53, $stack57, $stack60, $stack63, $stack64, $stack66, $stack9#3, $stack9#4, $u0, $u1;
        java.lang.String signature, name, desc, $stack42, $stack44, $stack74, $stack76;
        boolean $stack36, $stack68;
        jdk.internal.org.objectweb.asm.ClassWriter $stack19, $stack22, $stack58, $stack61;
        int $stack10, $stack11, $stack12, $stack15, $stack16, $stack17, $stack20, $stack23, index, $stack26, n, $stack28, $stack30, $stack31, $stack33, $stack45, $stack49, $stack50, $stack51, $stack54, $stack55, $stack56, $stack59, $stack62, $stack77, $i0, $i1;
        char $stack27, c;
        jdk.internal.org.objectweb.asm.Label start, end, $stack38, $stack39, $stack40, $stack70, $stack71, $stack72;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        name := @parameter0: java.lang.String;

        desc := @parameter1: java.lang.String;

        signature := @parameter2: java.lang.String;

        start := @parameter3: jdk.internal.org.objectweb.asm.Label;

        end := @parameter4: jdk.internal.org.objectweb.asm.Label;

        index := @parameter5: int;

        if signature == null goto label2;

        $stack48 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType>;

        if $stack48 != null goto label1;

        $u0 = new jdk.internal.org.objectweb.asm.ByteVector;

        $stack66 = $u0;

        specialinvoke $u0.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType> = $stack66;

     label1:
        $stack67 = this;

        $stack49 = $stack67.<jdk.internal.org.objectweb.asm.MethodWriter: int localVarTypeCount>;

        $stack68 = 1;

        $stack50 = $stack49 + $stack68;

        $stack67.<jdk.internal.org.objectweb.asm.MethodWriter: int localVarTypeCount> = $stack50;

        $stack69 = this;

        $stack52 = $stack69.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType>;

        $stack70 = start;

        $stack51 = $stack70.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack53 = virtualinvoke $stack52.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack51);

        $stack71 = end;

        $stack55 = $stack71.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack72 = start;

        $stack54 = $stack72.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack56 = $stack55 - $stack54;

        $stack57 = virtualinvoke $stack53.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack56);

        $stack73 = this;

        $stack58 = $stack73.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack74 = name;

        $stack59 = virtualinvoke $stack58.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>($stack74);

        $stack60 = virtualinvoke $stack57.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack59);

        $stack75 = this;

        $stack61 = $stack75.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack76 = signature;

        $stack62 = virtualinvoke $stack61.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>($stack76);

        $stack63 = virtualinvoke $stack60.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack62);

        $stack77 = index;

        $stack64 = virtualinvoke $stack63.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack77);

     label2:
        $stack65#1 = this;

        $stack65#2 = $stack65#1;

        $stack9#3 = $stack65#2.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar>;

        $stack9#4 = $stack9#3;

        if $stack9#4 != null goto label3;

        $u1 = new jdk.internal.org.objectweb.asm.ByteVector;

        $stack34 = $u1;

        specialinvoke $u1.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar> = $stack34;

     label3:
        $stack35 = this;

        $stack10 = $stack35.<jdk.internal.org.objectweb.asm.MethodWriter: int localVarCount>;

        $stack36 = 1;

        $stack11 = $stack10 + $stack36;

        $stack35.<jdk.internal.org.objectweb.asm.MethodWriter: int localVarCount> = $stack11;

        $stack37 = this;

        $stack13 = $stack37.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar>;

        $stack38 = start;

        $stack12 = $stack38.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack14 = virtualinvoke $stack13.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack12);

        $stack39 = end;

        $stack16 = $stack39.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack40 = start;

        $stack15 = $stack40.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack17 = $stack16 - $stack15;

        $stack18 = virtualinvoke $stack14.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack17);

        $stack41 = this;

        $stack19 = $stack41.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack42 = name;

        $stack20 = virtualinvoke $stack19.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>($stack42);

        $stack21 = virtualinvoke $stack18.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack20);

        $stack43 = this;

        $stack22 = $stack43.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack44 = desc;

        $stack23 = virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>($stack44);

        $stack24 = virtualinvoke $stack21.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack23);

        $stack45 = index;

        $stack25 = virtualinvoke $stack24.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack45);

        $stack46 = this;

        $stack26 = $stack46.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        $stack47 = 3;

        if $stack26 == $stack47 goto label7;

        $stack27 = virtualinvoke desc.<java.lang.String: char charAt(int)>(0);

        c = $stack27;

        $stack30 = index;

        $i0 = (int) c;

        if $i0 == 74 goto label4;

        $i1 = (int) c;

        if $i1 != 68 goto label5;

     label4:
        $stack29#5 = 2;

        goto label6;

     label5:
        $stack29#5 = 1;

     label6:
        $stack31 = $stack30 + $stack29#5;

        n = $stack31;

        $stack33 = n;

        $stack32 = this;

        $stack28 = $stack32.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals>;

        if $stack33 <= $stack28 goto label7;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals> = n;

     label7:
        return;

        nop;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitLocalVariableAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, jdk.internal.org.objectweb.asm.Label[], jdk.internal.org.objectweb.asm.Label[], int[], java.lang.String, boolean)
    {
        byte[] $stack17, $stack21;
        byte $stack18, $stack38, $stack41;
        bottom_type i;
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack35, $stack39;
        jdk.internal.org.objectweb.asm.ByteVector $stack10, bv, $stack12, $stack14, $stack22, $stack25, $stack26, $stack34, $stack37, $stack40, $stack43, $stack44, $stack48, $stack54, $stack56, $u0;
        java.lang.String desc, $stack36;
        jdk.internal.org.objectweb.asm.Label[] start, end, $stack57;
        int[] index;
        boolean visible, $stack42, $stack45;
        jdk.internal.org.objectweb.asm.TypePath typePath;
        jdk.internal.org.objectweb.asm.ClassWriter $stack23, $stack30;
        jdk.internal.org.objectweb.asm.AnnotationWriter $stack27, $stack31, $stack32, $stack33, i#3, $u1;
        int typeRef, $stack11, $stack13, $stack15, $stack16, $stack19, $stack20, $stack24, $stack28, $stack29, $stack47, $stack51, $stack52, $stack53, $stack55, $stack58, i#1, i#2, $i0;
        jdk.internal.org.objectweb.asm.Label $stack46, $stack49, $stack50;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        typeRef := @parameter0: int;

        typePath := @parameter1: jdk.internal.org.objectweb.asm.TypePath;

        start := @parameter2: jdk.internal.org.objectweb.asm.Label[];

        end := @parameter3: jdk.internal.org.objectweb.asm.Label[];

        index := @parameter4: int[];

        desc := @parameter5: java.lang.String;

        visible := @parameter6: boolean;

        $u0 = new jdk.internal.org.objectweb.asm.ByteVector;

        $stack10 = $u0;

        specialinvoke $u0.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        bv = $stack10;

        $stack11 = typeRef >>> 24;

        $stack12 = virtualinvoke bv.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack11);

        $stack13 = lengthof start;

        $stack14 = virtualinvoke $stack12.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack13);

        i#1 = 0;

     label1:
        $stack58 = i#1;

        $stack57 = start;

        $stack15 = lengthof $stack57;

        if $stack58 >= $stack15 goto label2;

        $stack46 = start[i#1];

        $stack47 = $stack46.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack48 = virtualinvoke bv.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack47);

        $stack49 = end[i#1];

        $stack52 = $stack49.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack50 = start[i#1];

        $stack51 = $stack50.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack53 = $stack52 - $stack51;

        $stack54 = virtualinvoke $stack48.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack53);

        $stack55 = index[i#1];

        $stack56 = virtualinvoke $stack54.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack55);

        i#1 = i#1 + 1;

        goto label1;

     label2:
        if typePath != null goto label3;

        $stack34 = virtualinvoke bv.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(0);

        goto label4;

     label3:
        $stack17 = typePath.<jdk.internal.org.objectweb.asm.TypePath: byte[] b>;

        $stack16 = typePath.<jdk.internal.org.objectweb.asm.TypePath: int offset>;

        $stack18 = $stack17[$stack16];

        $i0 = (int) $stack18;

        $stack19 = $i0 * 2;

        i#2 = $stack19 + 1;

        $stack21 = typePath.<jdk.internal.org.objectweb.asm.TypePath: byte[] b>;

        $stack20 = typePath.<jdk.internal.org.objectweb.asm.TypePath: int offset>;

        $stack22 = virtualinvoke bv.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack21, $stack20, i#2);

     label4:
        $stack37 = bv;

        $stack35 = this;

        $stack23 = $stack35.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack36 = desc;

        $stack24 = virtualinvoke $stack23.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>($stack36);

        $stack25 = virtualinvoke $stack37.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack24);

        $stack38 = 0;

        $stack26 = virtualinvoke $stack25.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack38);

        $u1 = new jdk.internal.org.objectweb.asm.AnnotationWriter;

        $stack27 = $u1;

        $stack39 = this;

        $stack30 = $stack39.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack42 = 1;

        $stack43 = bv;

        $stack44 = bv;

        $stack40 = bv;

        $stack28 = $stack40.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack41 = 2;

        $stack29 = $stack28 - $stack41;

        specialinvoke $u1.<jdk.internal.org.objectweb.asm.AnnotationWriter: void <init>(jdk.internal.org.objectweb.asm.ClassWriter,boolean,jdk.internal.org.objectweb.asm.ByteVector,jdk.internal.org.objectweb.asm.ByteVector,int)>($stack30, $stack42, $stack43, $stack44, $stack29);

        i#3 = $stack27;

        $stack45 = visible;

        if $stack45 == 0 goto label5;

        $stack32 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns>;

        i#3.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack32;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns> = i#3;

        goto label6;

     label5:
        $stack31 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns>;

        i#3.<jdk.internal.org.objectweb.asm.AnnotationWriter: jdk.internal.org.objectweb.asm.AnnotationWriter next> = $stack31;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns> = i#3;

     label6:
        $stack33 = i#3;

        return $stack33;

        nop;
    }

    public void visitLineNumber(int, jdk.internal.org.objectweb.asm.Label)
    {
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack12, $stack14, $stack16;
        jdk.internal.org.objectweb.asm.ByteVector $stack3, $stack7, $stack8, $stack9, $stack10, $stack11;
        int $stack4, $stack5, $stack6, line, $stack17;
        boolean $stack13;
        jdk.internal.org.objectweb.asm.Label start, $stack15;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        line := @parameter0: int;

        start := @parameter1: jdk.internal.org.objectweb.asm.Label;

        $stack3 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        if $stack3 != null goto label1;

        $stack11 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack11.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber> = $stack11;

     label1:
        $stack12 = this;

        $stack4 = $stack12.<jdk.internal.org.objectweb.asm.MethodWriter: int lineNumberCount>;

        $stack13 = 1;

        $stack5 = $stack4 + $stack13;

        $stack12.<jdk.internal.org.objectweb.asm.MethodWriter: int lineNumberCount> = $stack5;

        $stack14 = this;

        $stack7 = $stack14.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        $stack15 = start;

        $stack6 = $stack15.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack8 = virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack6);

        $stack16 = this;

        $stack9 = $stack16.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        $stack17 = line;

        $stack10 = virtualinvoke $stack9.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack17);

        return;

        nop;
    }

    public void visitMaxs(int, int)
    {
        byte[] $stack105, $stack115;
        byte $stack32, $stack42, $stack124, $stack148, $stack176;
        jdk.internal.org.objectweb.asm.Edge $stack37, $stack48, $stack49, $stack59, $stack60, $stack73, $stack76, $stack77, $stack78, $stack79, $stack80, $stack83, $stack144, $stack167, $stack168, b#12, b#19, $stack139#20, $stack139#21, $stack141#24, $stack141#25, $stack142#26, $stack142#27, t#45, b#63, $stack22#64, $stack22#65, $stack28#68, $stack28#69, $stack29#70, $stack29#71, $u0, $u1;
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack43, $stack172;
        long $stack65, $stack66, $stack68, $stack69, $stack71;
        short $stack39, $s0;
        int[] $stack108, $stack129;
        int $stack12, $stack13, maxStack, maxLocals, $stack14, $stack15, $stack16, $stack17, $stack18, $stack20, $stack21, $stack23, $stack24, $stack26, $stack27, $stack40, $stack45, $stack46, $stack50, $stack53, $stack54, $stack56, $stack57, $stack61, $stack62, $stack67, $stack70, $stack74, $stack75, $stack89, $stack91, $stack92, $stack93, $stack95, $stack96, $stack97, $stack98, $stack103, $stack106, $stack109, $stack110, $stack111, $stack116, $stack117, $stack120, $stack121, $stack122, $stack125, $stack126, $stack127, $stack128, $stack130, $stack131, $stack135, $stack145, $stack146, $stack151, $stack152, $stack153, $stack162, $stack163, $stack164, $stack165, $stack174, kind#7, h#14, kind#18, b#31, $stack100#32, n#33, change#34, change#35, l#46, l#56, t#61, kind#62, $stack25#67, $i0;
        jdk.internal.org.objectweb.asm.Type[] $stack90;
        bottom_type handler, l, h, e, t, kind, b, $stack19, $stack22, $stack25, $stack28, $stack29, $stack63, $stack64, $stack100, n, $stack101, $stack102, change, $stack139, $stack141, $stack142, $stack169, $stack170, $stack171;
        jdk.internal.org.objectweb.asm.ByteVector $stack104, $stack114, $stack118;
        java.lang.String $stack87, $stack160, $stack173, $stack171#5, t#6;
        jdk.internal.org.objectweb.asm.Handler $stack72, $stack94, $stack112, $stack113, $stack166, handler#1, handler#40, handler#41;
        boolean $stack119, $stack138, change#23;
        jdk.internal.org.objectweb.asm.Frame $stack136, $stack149, l#13, l#17, l#29;
        jdk.internal.org.objectweb.asm.ClassWriter $stack88, $stack107, $stack137, $stack161;
        jdk.internal.org.objectweb.asm.Label $stack30, $stack31, $stack33, $stack34, $stack35, $stack36, $stack38, $stack41, $stack44, $stack47, $stack51, $stack52, $stack55, $stack58, $stack81, $stack82, $stack84, $stack85, $stack86, $stack99, $stack123, $stack132, $stack133, $stack134, $stack140, $stack143, $stack147, $stack150, $stack154, $stack155, $stack156, $stack157, $stack158, $stack159, $stack175, l#2, h#3, e#4, $stack170#8, $stack170#9, $stack169#10, $stack169#11, e#15, t#16, n#22, t#28, kind#30, $stack101#36, $stack101#37, $stack102#38, $stack102#39, l#42, h#43, e#44, h#47, e#48, $stack63#49, $stack63#50, $stack64#51, $stack64#52, h#53, e#54, t#55, h#57, $stack19#58, $stack19#59, e#60, e#66;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        maxStack := @parameter0: int;

        maxLocals := @parameter1: int;

        $stack12 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack12 != 0 goto label24;

        handler#1 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Handler firstHandler>;

     label01:
        $stack166 = handler#1;

        if $stack166 == null goto label06;

        $stack154 = handler#1.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label start>;

        $stack155 = virtualinvoke $stack154.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label getFirst()>();

        l#2 = $stack155;

        $stack156 = handler#1.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label handler>;

        $stack157 = virtualinvoke $stack156.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label getFirst()>();

        h#3 = $stack157;

        $stack158 = handler#1.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label end>;

        $stack159 = virtualinvoke $stack158.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label getFirst()>();

        e#4 = $stack159;

        $stack160 = handler#1.<jdk.internal.org.objectweb.asm.Handler: java.lang.String desc>;

        if $stack160 != null goto label02;

        $stack171#5 = "java/lang/Throwable";

        goto label03;

     label02:
        $stack171#5 = handler#1.<jdk.internal.org.objectweb.asm.Handler: java.lang.String desc>;

     label03:
        t#6 = $stack171#5;

        $stack162 = 24117248;

        $stack172 = this;

        $stack161 = $stack172.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack173 = t#6;

        $stack163 = virtualinvoke $stack161.<jdk.internal.org.objectweb.asm.ClassWriter: int addType(java.lang.String)>($stack173);

        $stack174 = $stack162 | $stack163;

        kind#7 = $stack174;

        $stack175 = h#3;

        $stack164 = $stack175.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack176 = 16;

        $stack165 = $stack164 | $stack176;

        $stack175.<jdk.internal.org.objectweb.asm.Label: int status> = $stack165;

     label04:
        $stack170#8 = l#2;

        $stack170#9 = $stack170#8;

        $stack169#10 = e#4;

        $stack169#11 = $stack169#10;

        if $stack170#9 == $stack169#11 goto label05;

        $u0 = new jdk.internal.org.objectweb.asm.Edge;

        $stack167 = $u0;

        specialinvoke $u0.<jdk.internal.org.objectweb.asm.Edge: void <init>()>();

        b#12 = $stack167;

        b#12.<jdk.internal.org.objectweb.asm.Edge: int info> = kind#7;

        b#12.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Label successor> = h#3;

        $stack168 = l#2.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors>;

        b#12.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next> = $stack168;

        l#2.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors> = b#12;

        l#2 = l#2.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label successor>;

        goto label04;

     label05:
        handler#1 = handler#1.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Handler next>;

        goto label01;

     label06:
        $stack86 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label labels>;

        l#13 = $stack86.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack88 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack89 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack87 = this.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $stack90 = staticinvoke <jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type[] getArgumentTypes(java.lang.String)>($stack87);

        $stack91 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals>;

        virtualinvoke l#13.<jdk.internal.org.objectweb.asm.Frame: void initInputFrame(jdk.internal.org.objectweb.asm.ClassWriter,int,jdk.internal.org.objectweb.asm.Type[],int)>($stack88, $stack89, $stack90, $stack91);

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void visitFrame(jdk.internal.org.objectweb.asm.Frame)>(l#13);

        h#14 = 0;

        e#15 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label labels>;

     label07:
        $stack132 = e#15;

        if $stack132 == null goto label13;

        t#16 = e#15;

        e#15 = e#15.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label next>;

        t#16.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label next> = null;

        l#17 = t#16.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack125 = t#16.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack126 = $stack125 & 16;

        if $stack126 == 0 goto label08;

        $stack145 = t#16.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack146 = $stack145 | 32;

        t#16.<jdk.internal.org.objectweb.asm.Label: int status> = $stack146;

     label08:
        $stack147 = t#16;

        $stack127 = $stack147.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack148 = 64;

        $stack128 = $stack127 | $stack148;

        $stack147.<jdk.internal.org.objectweb.asm.Label: int status> = $stack128;

        $stack149 = l#17;

        $stack129 = $stack149.<jdk.internal.org.objectweb.asm.Frame: int[] inputStack>;

        $stack131 = lengthof $stack129;

        $stack150 = t#16;

        $stack130 = $stack150.<jdk.internal.org.objectweb.asm.Label: int outputStackMax>;

        $stack151 = $stack131 + $stack130;

        kind#18 = $stack151;

        $stack153 = kind#18;

        $stack152 = h#14;

        if $stack153 <= $stack152 goto label09;

        h#14 = kind#18;

     label09:
        $stack143 = t#16;

        $stack144 = $stack143.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors>;

        b#19 = $stack144;

     label10:
        $stack139#20 = b#19;

        $stack139#21 = $stack139#20;

        if $stack139#21 == null goto label12;

        $stack133 = b#19.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Label successor>;

        $stack134 = virtualinvoke $stack133.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label getFirst()>();

        n#22 = $stack134;

        $stack137 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack136 = n#22.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack135 = b#19.<jdk.internal.org.objectweb.asm.Edge: int info>;

        $stack138 = virtualinvoke l#17.<jdk.internal.org.objectweb.asm.Frame: boolean merge(jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Frame,int)>($stack137, $stack136, $stack135);

        change#23 = $stack138;

        if change#23 == 0 goto label11;

        $stack140 = n#22.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label next>;

        if $stack140 != null goto label11;

        n#22.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label next> = e#15;

        e#15 = n#22;

     label11:
        $stack141#24 = b#19;

        $stack141#25 = $stack141#24;

        $stack142#26 = $stack141#25.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next>;

        $stack142#27 = $stack142#26;

        b#19 = $stack142#27;

        goto label10;

     label12:
        goto label07;

     label13:
        t#28 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label labels>;

     label14:
        $stack99 = t#28;

        if $stack99 == null goto label21;

        l#29 = t#28.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack95 = t#28.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack96 = $stack95 & 32;

        if $stack96 == 0 goto label15;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void visitFrame(jdk.internal.org.objectweb.asm.Frame)>(l#29);

     label15:
        $stack123 = t#28;

        $stack97 = $stack123.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack124 = 64;

        $stack98 = $stack97 & $stack124;

        if $stack98 != 0 goto label20;

        kind#30 = t#28.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label successor>;

        b#31 = t#28.<jdk.internal.org.objectweb.asm.Label: int position>;

        if kind#30 != null goto label16;

        $stack118 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack100#32 = $stack118.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        goto label17;

     label16:
        $stack100#32 = kind#30.<jdk.internal.org.objectweb.asm.Label: int position>;

     label17:
        $stack119 = 1;

        $stack120 = $stack100#32 - $stack119;

        n#33 = $stack120;

        $stack122 = n#33;

        $stack121 = b#31;

        if $stack122 < $stack121 goto label20;

        $stack103 = staticinvoke <java.lang.Math: int max(int,int)>(h#14, 1);

        h#14 = $stack103;

        change#34 = b#31;

     label18:
        $stack117 = change#34;

        $stack116 = n#33;

        if $stack117 >= $stack116 goto label19;

        $stack114 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack115 = $stack114.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack115[change#34] = 0;

        change#34 = change#34 + 1;

        goto label18;

     label19:
        $stack104 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack105 = $stack104.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack105[n#33] = -65;

        $stack106 = virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: int startFrame(int,int,int)>(b#31, 0, 1);

        change#35 = $stack106;

        $stack108 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack109 = 24117248;

        $stack107 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack110 = virtualinvoke $stack107.<jdk.internal.org.objectweb.asm.ClassWriter: int addType(java.lang.String)>("java/lang/Throwable");

        $stack111 = $stack109 | $stack110;

        $stack108[change#35] = $stack111;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void endFrame()>();

        $stack112 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Handler firstHandler>;

        $stack113 = staticinvoke <jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Handler remove(jdk.internal.org.objectweb.asm.Handler,jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label)>($stack112, t#28, kind#30);

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Handler firstHandler> = $stack113;

     label20:
        $stack101#36 = t#28;

        $stack101#37 = $stack101#36;

        $stack102#38 = $stack101#37.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label successor>;

        $stack102#39 = $stack102#38;

        t#28 = $stack102#39;

        goto label14;

     label21:
        handler#40 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Handler firstHandler>;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int handlerCount> = 0;

     label22:
        $stack94 = handler#40;

        if $stack94 == null goto label23;

        $stack92 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int handlerCount>;

        $stack93 = $stack92 + 1;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int handlerCount> = $stack93;

        handler#40 = handler#40.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Handler next>;

        goto label22;

     label23:
        this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStack> = h#14;

        goto label48;

     label24:
        $stack13 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack13 != 2 goto label47;

        handler#41 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Handler firstHandler>;

     label25:
        $stack72 = handler#41;

        if $stack72 == null goto label30;

        l#42 = handler#41.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label start>;

        h#43 = handler#41.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label handler>;

        e#44 = handler#41.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label end>;

     label26:
        $stack82 = l#42;

        $stack81 = e#44;

        if $stack82 == $stack81 goto label29;

        $u1 = new jdk.internal.org.objectweb.asm.Edge;

        $stack73 = $u1;

        specialinvoke $u1.<jdk.internal.org.objectweb.asm.Edge: void <init>()>();

        t#45 = $stack73;

        t#45.<jdk.internal.org.objectweb.asm.Edge: int info> = 2147483647;

        t#45.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Label successor> = h#43;

        $stack74 = l#42.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack75 = $stack74 & 128;

        if $stack75 != 0 goto label27;

        $stack83 = l#42.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors>;

        t#45.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next> = $stack83;

        l#42.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors> = t#45;

        goto label28;

     label27:
        $stack76 = l#42.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors>;

        $stack77 = $stack76.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next>;

        $stack78 = $stack77.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next>;

        t#45.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next> = $stack78;

        $stack79 = l#42.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors>;

        $stack80 = $stack79.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next>;

        $stack80.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next> = t#45;

     label28:
        $stack84 = l#42;

        $stack85 = $stack84.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label successor>;

        l#42 = $stack85;

        goto label26;

     label29:
        handler#41 = handler#41.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Handler next>;

        goto label25;

     label30:
        $stack14 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int subroutines>;

        if $stack14 <= 0 goto label38;

        l#46 = 0;

        $stack41 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label labels>;

        $stack40 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int subroutines>;

        virtualinvoke $stack41.<jdk.internal.org.objectweb.asm.Label: void visitSubroutine(jdk.internal.org.objectweb.asm.Label,long,int)>(null, 1L, $stack40);

        h#47 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label labels>;

     label31:
        $stack58 = h#47;

        if $stack58 == null goto label33;

        $stack56 = h#47.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack57 = $stack56 & 128;

        if $stack57 == 0 goto label32;

        $stack59 = h#47.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors>;

        $stack60 = $stack59.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next>;

        e#48 = $stack60.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Label successor>;

        $stack61 = e#48.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack62 = $stack61 & 1024;

        if $stack62 != 0 goto label32;

        l#46 = l#46 + 1;

        $stack65 = (long) l#46;

        $stack66 = $stack65 / 32L;

        $stack69 = $stack66 << 32;

        $stack67 = l#46 % 32;

        $stack68 = 1L << $stack67;

        $stack71 = $stack69 | $stack68;

        $stack70 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int subroutines>;

        virtualinvoke e#48.<jdk.internal.org.objectweb.asm.Label: void visitSubroutine(jdk.internal.org.objectweb.asm.Label,long,int)>(null, $stack71, $stack70);

     label32:
        $stack63#49 = h#47;

        $stack63#50 = $stack63#49;

        $stack64#51 = $stack63#50.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label successor>;

        $stack64#52 = $stack64#51;

        h#47 = $stack64#52;

        goto label31;

     label33:
        h#53 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label labels>;

     label34:
        $stack47 = h#53;

        if $stack47 == null goto label38;

        $stack45 = h#53.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack46 = $stack45 & 128;

        if $stack46 == 0 goto label37;

        e#54 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label labels>;

     label35:
        $stack55 = e#54;

        if $stack55 == null goto label36;

        $stack53 = e#54.<jdk.internal.org.objectweb.asm.Label: int status>;

        $s0 = -2049;

        $i0 = (int) $s0;

        $stack54 = $stack53 & $i0;

        e#54.<jdk.internal.org.objectweb.asm.Label: int status> = $stack54;

        e#54 = e#54.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label successor>;

        goto label35;

     label36:
        $stack48 = h#53.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors>;

        $stack49 = $stack48.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next>;

        t#55 = $stack49.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Label successor>;

        $stack50 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int subroutines>;

        virtualinvoke t#55.<jdk.internal.org.objectweb.asm.Label: void visitSubroutine(jdk.internal.org.objectweb.asm.Label,long,int)>(h#53, 0L, $stack50);

     label37:
        $stack51 = h#53;

        $stack52 = $stack51.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label successor>;

        h#53 = $stack52;

        goto label34;

     label38:
        $stack42 = 0;

        l#56 = $stack42;

        $stack43 = this;

        $stack44 = $stack43.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label labels>;

        h#57 = $stack44;

     label39:
        $stack19#58 = h#57;

        $stack19#59 = $stack19#58;

        if $stack19#59 == null goto label46;

        e#60 = h#57;

        h#57 = h#57.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label next>;

        t#61 = e#60.<jdk.internal.org.objectweb.asm.Label: int inputStackTop>;

        $stack16 = e#60.<jdk.internal.org.objectweb.asm.Label: int outputStackMax>;

        kind#62 = t#61 + $stack16;

        if kind#62 <= l#56 goto label40;

        l#56 = kind#62;

     label40:
        $stack36 = e#60;

        $stack37 = $stack36.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors>;

        b#63 = $stack37;

        $stack38 = e#60;

        $stack17 = $stack38.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack39 = 128;

        $stack18 = $stack17 & $stack39;

        if $stack18 == 0 goto label41;

        b#63 = b#63.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next>;

     label41:
        $stack22#64 = b#63;

        $stack22#65 = $stack22#64;

        if $stack22#65 == null goto label45;

        e#66 = b#63.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Label successor>;

        $stack20 = e#66.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack21 = $stack20 & 8;

        if $stack21 != 0 goto label44;

        $stack30 = e#66;

        $stack23 = b#63.<jdk.internal.org.objectweb.asm.Edge: int info>;

        if $stack23 != 2147483647 goto label42;

        $stack25#67 = 1;

        goto label43;

     label42:
        $stack24 = b#63.<jdk.internal.org.objectweb.asm.Edge: int info>;

        $stack25#67 = t#61 + $stack24;

     label43:
        $stack30.<jdk.internal.org.objectweb.asm.Label: int inputStackTop> = $stack25#67;

        $stack31 = e#66;

        $stack26 = $stack31.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack32 = 8;

        $stack27 = $stack26 | $stack32;

        $stack31.<jdk.internal.org.objectweb.asm.Label: int status> = $stack27;

        $stack34 = e#66;

        $stack33 = h#57;

        $stack34.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label next> = $stack33;

        $stack35 = e#66;

        h#57 = $stack35;

     label44:
        $stack28#68 = b#63;

        $stack28#69 = $stack28#68;

        $stack29#70 = $stack28#69.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next>;

        $stack29#71 = $stack29#70;

        b#63 = $stack29#71;

        goto label41;

     label45:
        goto label39;

     label46:
        $stack15 = staticinvoke <java.lang.Math: int max(int,int)>(maxStack, l#56);

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStack> = $stack15;

        goto label48;

     label47:
        this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStack> = maxStack;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals> = maxLocals;

     label48:
        return;

        nop;
    }

    public void visitEnd()
    {
        jdk.internal.org.objectweb.asm.MethodWriter this;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        return;

        nop;
    }

    private void addSuccessor(int, jdk.internal.org.objectweb.asm.Label)
    {
        jdk.internal.org.objectweb.asm.Edge $stack4, b, $stack6;
        jdk.internal.org.objectweb.asm.MethodWriter this;
        jdk.internal.org.objectweb.asm.Label successor, $stack5, $stack7;
        int info;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        info := @parameter0: int;

        successor := @parameter1: jdk.internal.org.objectweb.asm.Label;

        $stack4 = new jdk.internal.org.objectweb.asm.Edge;

        specialinvoke $stack4.<jdk.internal.org.objectweb.asm.Edge: void <init>()>();

        b = $stack4;

        b.<jdk.internal.org.objectweb.asm.Edge: int info> = info;

        b.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Label successor> = successor;

        $stack5 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack6 = $stack5.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors>;

        b.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge next> = $stack6;

        $stack7 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack7.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge successors> = b;

        return;

        nop;
    }

    private void noSuccessor()
    {
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack15;
        byte[] $stack11;
        jdk.internal.org.objectweb.asm.ByteVector $stack9, $stack10;
        int $stack2, $stack3, $stack5, $stack12;
        boolean $stack13, $stack16;
        jdk.internal.org.objectweb.asm.Frame $stack7, $stack8;
        jdk.internal.org.objectweb.asm.Label $stack4, $stack6, l, $stack14;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        $stack2 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        if $stack2 != 0 goto label1;

        $stack6 = new jdk.internal.org.objectweb.asm.Label;

        specialinvoke $stack6.<jdk.internal.org.objectweb.asm.Label: void <init>()>();

        l = $stack6;

        $stack7 = new jdk.internal.org.objectweb.asm.Frame;

        specialinvoke $stack7.<jdk.internal.org.objectweb.asm.Frame: void <init>()>();

        l.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame> = $stack7;

        $stack8 = l.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $stack8.<jdk.internal.org.objectweb.asm.Frame: jdk.internal.org.objectweb.asm.Label owner> = l;

        $stack9 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack12 = $stack9.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack10 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack11 = $stack10.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack13 = virtualinvoke l.<jdk.internal.org.objectweb.asm.Label: boolean resolve(jdk.internal.org.objectweb.asm.MethodWriter,int,byte[])>(this, $stack12, $stack11);

        $stack14 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label previousBlock>;

        $stack14.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label successor> = l;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label previousBlock> = l;

        goto label2;

     label1:
        $stack4 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock>;

        $stack3 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStackSize>;

        $stack4.<jdk.internal.org.objectweb.asm.Label: int outputStackMax> = $stack3;

     label2:
        $stack15 = this;

        $stack5 = $stack15.<jdk.internal.org.objectweb.asm.MethodWriter: int compute>;

        $stack16 = 1;

        if $stack5 == $stack16 goto label3;

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Label currentBlock> = null;

     label3:
        return;

        nop;
    }

    private void visitFrame(jdk.internal.org.objectweb.asm.Frame)
    {
        byte $b0;
        bottom_type nTop, nLocal, nStack, i, frameIndex, t;
        int[] locals, stacks, $stack17, $stack18, $stack21, $stack23, $stack26;
        jdk.internal.org.objectweb.asm.Frame f;
        jdk.internal.org.objectweb.asm.MethodWriter this;
        int $stack10, $stack11, $stack13, $stack14, $stack15, $stack16, $stack19, $stack20, $stack22, $stack24, $stack25, $stack27, $stack28, $stack29, nTop#1, nLocal#2, nStack#3, i#4, t#5, i#6, t#7, frameIndex#8, i#9, t#10, i#11, t#12, $i0;
        jdk.internal.org.objectweb.asm.Label $stack12;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        f := @parameter0: jdk.internal.org.objectweb.asm.Frame;

        nTop#1 = 0;

        nLocal#2 = 0;

        nStack#3 = 0;

        locals = f.<jdk.internal.org.objectweb.asm.Frame: int[] inputLocals>;

        stacks = f.<jdk.internal.org.objectweb.asm.Frame: int[] inputStack>;

        i#4 = 0;

     label01:
        $stack27 = i#4;

        $stack26 = locals;

        $stack10 = lengthof $stack26;

        if $stack27 >= $stack10 goto label06;

        t#5 = locals[i#4];

        if t#5 != 16777216 goto label02;

        nTop#1 = nTop#1 + 1;

        goto label03;

     label02:
        $stack25 = nTop#1 + 1;

        nLocal#2 = nLocal#2 + $stack25;

        nTop#1 = 0;

     label03:
        $stack29 = t#5;

        $stack28 = 16777220;

        if $stack29 == $stack28 goto label04;

        if t#5 != 16777219 goto label05;

     label04:
        i#4 = i#4 + 1;

     label05:
        i#4 = i#4 + 1;

        goto label01;

     label06:
        i#6 = 0;

     label07:
        $stack24 = i#6;

        $stack23 = stacks;

        $stack11 = lengthof $stack23;

        if $stack24 >= $stack11 goto label10;

        t#7 = stacks[i#6];

        nStack#3 = nStack#3 + 1;

        if t#7 == 16777220 goto label08;

        if t#7 != 16777219 goto label09;

     label08:
        i#6 = i#6 + 1;

     label09:
        i#6 = i#6 + 1;

        goto label07;

     label10:
        $stack12 = f.<jdk.internal.org.objectweb.asm.Frame: jdk.internal.org.objectweb.asm.Label owner>;

        $stack13 = $stack12.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack14 = virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: int startFrame(int,int,int)>($stack13, nLocal#2, nStack#3);

        frameIndex#8 = $stack14;

        i#9 = 0;

     label11:
        $stack22 = nLocal#2;

        if $stack22 <= 0 goto label14;

        t#10 = locals[i#9];

        $stack21 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack20 = frameIndex#8;

        frameIndex#8 = frameIndex#8 + 1;

        $stack21[$stack20] = t#10;

        if t#10 == 16777220 goto label12;

        if t#10 != 16777219 goto label13;

     label12:
        i#9 = i#9 + 1;

     label13:
        i#9 = i#9 + 1;

        $b0 = -1;

        $i0 = (int) $b0;

        nLocal#2 = nLocal#2 + $i0;

        goto label11;

     label14:
        i#11 = 0;

     label15:
        $stack19 = i#11;

        $stack18 = stacks;

        $stack15 = lengthof $stack18;

        if $stack19 >= $stack15 goto label18;

        t#12 = stacks[i#11];

        $stack17 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack16 = frameIndex#8;

        frameIndex#8 = frameIndex#8 + 1;

        $stack17[$stack16] = t#12;

        if t#12 == 16777220 goto label16;

        if t#12 != 16777219 goto label17;

     label16:
        i#11 = i#11 + 1;

     label17:
        i#11 = i#11 + 1;

        goto label15;

     label18:
        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void endFrame()>();

        return;

        nop;
    }

    private void visitImplicitFirstFrame()
    {
        byte $stack5, $stack35, $stack38, $stack53, $stack68#2, $stack68#3;
        bottom_type frameIndex, i, $stack11, $stack12, $stack13, $stack24, $stack25, $stack68;
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack28, $stack29, $stack30, $stack33, $stack36, $stack51, $stack25#7, $stack25#8;
        java.lang.String $stack4, $stack14, $stack16, $stack19, $stack22, $stack26, $stack39, $stack44, $stack48, $stack71, $stack12#9, $stack12#10;
        int[] $stack20, $stack45, $stack55, $stack57, $stack59, $stack61, $stack63, $stack67, $stack73;
        jdk.internal.org.objectweb.asm.ClassWriter $stack21, $stack47, $stack70, $stack72;
        int $stack6, $stack7, $stack8, $stack9, $stack10, j, $stack18, $stack23, $stack31, $stack32, $stack34, $stack37, $stack41, $stack42, $stack43, $stack46, $stack49, $stack50, $stack52, $stack54, $stack56, $stack58, $stack60, $stack62, $stack64, $stack65, $stack66, $stack69, $stack74, $stack75, $stack76, frameIndex#1, i#4, $stack24#5, $stack24#6, $stack11#11, $stack11#12, $i0, $i1, $i2, $i3, $i4;
        char $stack15, $stack17, $stack27, $stack40, $stack13#13, $stack13#14;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        $stack5 = 0;

        $stack4 = this.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $stack6 = virtualinvoke $stack4.<java.lang.String: int length()>();

        $stack7 = $stack6 + 1;

        $stack8 = virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: int startFrame(int,int,int)>($stack5, $stack7, 0);

        frameIndex#1 = $stack8;

        $stack9 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack10 = $stack9 & 8;

        if $stack10 != 0 goto label02;

        $stack64 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack65 = $stack64 & 524288;

        if $stack65 != 0 goto label01;

        $stack73 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack69 = frameIndex#1;

        frameIndex#1 = frameIndex#1 + 1;

        $stack74 = 24117248;

        $stack72 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack70 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack71 = $stack70.<jdk.internal.org.objectweb.asm.ClassWriter: java.lang.String thisName>;

        $stack75 = virtualinvoke $stack72.<jdk.internal.org.objectweb.asm.ClassWriter: int addType(java.lang.String)>($stack71);

        $stack76 = $stack74 | $stack75;

        $stack73[$stack69] = $stack76;

        goto label02;

     label01:
        $stack67 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack66 = frameIndex#1;

        frameIndex#1 = frameIndex#1 + 1;

        $stack67[$stack66] = 16777222;

     label02:
        $stack68#2 = 1;

        $stack68#3 = $stack68#2;

        i#4 = $stack68#3;

     label03:
        $stack24#5 = i#4;

        $stack24#6 = $stack24#5;

        j = $stack24#6;

        $stack25#7 = this;

        $stack25#8 = $stack25#7;

        $stack12#9 = $stack25#8.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $stack12#10 = $stack12#9;

        $stack11#11 = i#4;

        $stack11#12 = $stack11#11;

        i#4 = i#4 + 1;

        $stack13#13 = virtualinvoke $stack12#10.<java.lang.String: char charAt(int)>($stack11#12);

        $stack13#14 = $stack13#13;

        $i0 = (int) $stack13#14;

        tableswitch($i0)
        {
            case 66: goto label04;
            case 67: goto label04;
            case 68: goto label07;
            case 69: goto label14;
            case 70: goto label05;
            case 71: goto label14;
            case 72: goto label14;
            case 73: goto label04;
            case 74: goto label06;
            case 75: goto label14;
            case 76: goto label12;
            case 77: goto label14;
            case 78: goto label14;
            case 79: goto label14;
            case 80: goto label14;
            case 81: goto label14;
            case 82: goto label14;
            case 83: goto label04;
            case 84: goto label14;
            case 85: goto label14;
            case 86: goto label14;
            case 87: goto label14;
            case 88: goto label14;
            case 89: goto label14;
            case 90: goto label04;
            case 91: goto label08;
            default: goto label14;
        };

     label04:
        $stack61 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack60 = frameIndex#1;

        frameIndex#1 = frameIndex#1 + 1;

        $stack61[$stack60] = 16777217;

        goto label15;

     label05:
        $stack57 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack56 = frameIndex#1;

        frameIndex#1 = frameIndex#1 + 1;

        $stack57[$stack56] = 16777218;

        goto label15;

     label06:
        $stack55 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack54 = frameIndex#1;

        frameIndex#1 = frameIndex#1 + 1;

        $stack55[$stack54] = 16777220;

        goto label15;

     label07:
        $stack59 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack58 = frameIndex#1;

        frameIndex#1 = frameIndex#1 + 1;

        $stack59[$stack58] = 16777219;

        goto label15;

     label08:
        $stack36 = this;

        $stack14 = $stack36.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $stack37 = i#4;

        $stack15 = virtualinvoke $stack14.<java.lang.String: char charAt(int)>($stack37);

        $stack38 = 91;

        $i1 = (int) $stack15;

        if $i1 != $stack38 goto label09;

        i#4 = i#4 + 1;

        goto label08;

     label09:
        $stack16 = this.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $stack17 = virtualinvoke $stack16.<java.lang.String: char charAt(int)>(i#4);

        $i2 = (int) $stack17;

        if $i2 != 76 goto label11;

        i#4 = i#4 + 1;

     label10:
        $stack33 = this;

        $stack26 = $stack33.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $stack34 = i#4;

        $stack27 = virtualinvoke $stack26.<java.lang.String: char charAt(int)>($stack34);

        $stack35 = 59;

        $i3 = (int) $stack27;

        if $i3 == $stack35 goto label11;

        i#4 = i#4 + 1;

        goto label10;

     label11:
        $stack28 = this;

        $stack20 = $stack28.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack18 = frameIndex#1;

        frameIndex#1 = frameIndex#1 + 1;

        $stack29 = this;

        $stack21 = $stack29.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack30 = this;

        $stack19 = $stack30.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $stack31 = j;

        i#4 = i#4 + 1;

        $stack32 = i#4;

        $stack22 = virtualinvoke $stack19.<java.lang.String: java.lang.String substring(int,int)>($stack31, $stack32);

        $stack23 = staticinvoke <jdk.internal.org.objectweb.asm.Frame: int type(jdk.internal.org.objectweb.asm.ClassWriter,java.lang.String)>($stack21, $stack22);

        $stack20[$stack18] = $stack23;

        goto label15;

     label12:
        $stack51 = this;

        $stack39 = $stack51.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $stack52 = i#4;

        $stack40 = virtualinvoke $stack39.<java.lang.String: char charAt(int)>($stack52);

        $stack53 = 59;

        $i4 = (int) $stack40;

        if $i4 == $stack53 goto label13;

        i#4 = i#4 + 1;

        goto label12;

     label13:
        $stack45 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack41 = frameIndex#1;

        frameIndex#1 = frameIndex#1 + 1;

        $stack46 = 24117248;

        $stack47 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack44 = this.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $stack43 = j + 1;

        $stack42 = i#4;

        i#4 = i#4 + 1;

        $stack48 = virtualinvoke $stack44.<java.lang.String: java.lang.String substring(int,int)>($stack43, $stack42);

        $stack49 = virtualinvoke $stack47.<jdk.internal.org.objectweb.asm.ClassWriter: int addType(java.lang.String)>($stack48);

        $stack50 = $stack46 | $stack49;

        $stack45[$stack41] = $stack50;

        goto label15;

     label14:
        goto label16;

     label15:
        goto label03;

     label16:
        $stack63 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack62 = frameIndex#1 - 3;

        $stack63[1] = $stack62;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void endFrame()>();

        return;

        nop;
    }

    private int startFrame(int, int, int)
    {
        byte $stack15#5, $stack15#6, $stack18#13, $stack18#14, $stack21#21, $stack21#22, $stack22#25, $stack22#26;
        int[] $stack6, $stack7, $stack11, $stack8#3, $stack8#4, $stack9#11, $stack9#12, $stack10#19, $stack10#20;
        bottom_type $stack8, $stack9, $stack10, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20, $stack21, $stack22;
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack24, $stack13#1, $stack13#2, $stack16#9, $stack16#10, $stack19#17, $stack19#18;
        int nLocal, nStack, $stack5, n, offset, $stack12, $stack23, $stack14#7, $stack14#8, $stack17#15, $stack17#16, $stack20#23, $stack20#24;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        offset := @parameter0: int;

        nLocal := @parameter1: int;

        nStack := @parameter2: int;

        $stack5 = 3 + nLocal;

        n = $stack5 + nStack;

        $stack6 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        if $stack6 == null goto label1;

        $stack11 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack12 = lengthof $stack11;

        if $stack12 >= n goto label2;

     label1:
        $stack24 = this;

        $stack23 = n;

        $stack7 = newarray (int)[$stack23];

        $stack24.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame> = $stack7;

     label2:
        $stack13#1 = this;

        $stack13#2 = $stack13#1;

        $stack8#3 = $stack13#2.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack8#4 = $stack8#3;

        $stack15#5 = 0;

        $stack15#6 = $stack15#5;

        $stack14#7 = offset;

        $stack14#8 = $stack14#7;

        $stack8#4[$stack15#6] = $stack14#8;

        $stack16#9 = this;

        $stack16#10 = $stack16#9;

        $stack9#11 = $stack16#10.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack9#12 = $stack9#11;

        $stack18#13 = 1;

        $stack18#14 = $stack18#13;

        $stack17#15 = nLocal;

        $stack17#16 = $stack17#15;

        $stack9#12[$stack18#14] = $stack17#16;

        $stack19#17 = this;

        $stack19#18 = $stack19#17;

        $stack10#19 = $stack19#18.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack10#20 = $stack10#19;

        $stack21#21 = 2;

        $stack21#22 = $stack21#21;

        $stack20#23 = nStack;

        $stack20#24 = $stack20#23;

        $stack10#20[$stack21#22] = $stack20#24;

        $stack22#25 = 3;

        $stack22#26 = $stack22#25;

        return $stack22#26;

        nop;
    }

    private void endFrame()
    {
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack11, $stack12, $stack7#1, $stack7#2, $stack6#3, $stack6#4, $stack9#7, $stack9#8;
        jdk.internal.org.objectweb.asm.ByteVector $stack3, $stack10;
        int[] $stack1, $stack2#5, $stack2#6;
        int $stack4, $stack5;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        $stack1 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] previousFrame>;

        if $stack1 == null goto label2;

        $stack3 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        if $stack3 != null goto label1;

        $stack10 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $stack10.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap> = $stack10;

     label1:
        $stack11 = this;

        virtualinvoke $stack11.<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrame()>();

        $stack12 = this;

        $stack4 = $stack12.<jdk.internal.org.objectweb.asm.MethodWriter: int frameCount>;

        $stack5 = $stack4 + 1;

        $stack12.<jdk.internal.org.objectweb.asm.MethodWriter: int frameCount> = $stack5;

     label2:
        $stack7#1 = this;

        $stack7#2 = $stack7#1;

        $stack6#3 = this;

        $stack6#4 = $stack6#3;

        $stack2#5 = $stack6#4.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack2#6 = $stack2#5;

        $stack7#2.<jdk.internal.org.objectweb.asm.MethodWriter: int[] previousFrame> = $stack2#6;

        $stack9#7 = this;

        $stack9#8 = $stack9#7;

        $stack9#8.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame> = null;

        return;
    }

    private void writeFrame()
    {
        bottom_type localsSize, type, k, delta, l, j, $stack56, $stack63, $stack64, $stack65, $stack66;
        jdk.internal.org.objectweb.asm.MethodWriter this;
        jdk.internal.org.objectweb.asm.ByteVector $stack22, $stack23, $stack24, $stack27, $stack28, $stack29, $stack31, $stack32, $stack33, $stack34, $stack35, $stack36, $stack40, $stack41, $stack44, $stack45, $stack46, $stack47, $stack48, $stack49, $stack51, $stack52, $stack71, $stack72, $stack73, $stack75, $stack76;
        short type#2, $stack66#5, $stack65#6, $stack64#7, $stack64#8, $stack63#9, $stack63#10, $stack56#13, $stack56#14;
        int[] $stack9, $stack10, $stack14, $stack16, $stack17, $stack57, $stack58, $stack67, $stack69;
        jdk.internal.org.objectweb.asm.ClassWriter $stack11;
        int clocalsSize, cstackSize, $stack12, $stack13, $stack15, $stack18, $stack19, $stack20, $stack21, $stack25, $stack26, $stack30, $stack37, $stack38, $stack39, $stack42, $stack43, $stack50, $stack53, $stack54, $stack55, $stack59, $stack60, $stack61, $stack62, $stack68, $stack70, $stack74, $stack77, $stack78, $stack79, localsSize#1, k#3, delta#4, l#11, j#12, $i0;
        char $c0;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        $stack9 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        clocalsSize = $stack9[1];

        $stack10 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        cstackSize = $stack10[2];

        $stack11 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack12 = $stack11.<jdk.internal.org.objectweb.asm.ClassWriter: int version>;

        $c0 = 65535;

        $i0 = (int) $c0;

        $stack13 = $stack12 & $i0;

        if $stack13 >= 50 goto label01;

        $stack71 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack69 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack70 = $stack69[0];

        $stack72 = virtualinvoke $stack71.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack70);

        $stack73 = virtualinvoke $stack72.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(clocalsSize);

        $stack74 = 3 + clocalsSize;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameTypes(int,int)>(3, $stack74);

        $stack75 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack76 = virtualinvoke $stack75.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(cstackSize);

        $stack79 = 3 + clocalsSize;

        $stack77 = 3 + clocalsSize;

        $stack78 = $stack77 + cstackSize;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameTypes(int,int)>($stack79, $stack78);

        return;

     label01:
        $stack14 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] previousFrame>;

        localsSize#1 = $stack14[1];

        type#2 = 255;

        k#3 = 0;

        $stack15 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int frameCount>;

        if $stack15 != 0 goto label02;

        $stack67 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        delta#4 = $stack67[0];

        goto label03;

     label02:
        $stack16 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack19 = $stack16[0];

        $stack17 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] previousFrame>;

        $stack18 = $stack17[0];

        $stack20 = $stack19 - $stack18;

        delta#4 = $stack20 - 1;

     label03:
        $stack68 = cstackSize;

        if $stack68 != 0 goto label10;

        k#3 = clocalsSize - localsSize#1;

        tableswitch(k#3)
        {
            case -3: goto label04;
            case -2: goto label04;
            case -1: goto label04;
            case 0: goto label05;
            case 1: goto label08;
            case 2: goto label08;
            case 3: goto label08;
            default: goto label09;
        };

     label04:
        type#2 = 248;

        localsSize#1 = clocalsSize;

        goto label09;

     label05:
        if delta#4 >= 64 goto label06;

        $stack66#5 = 0;

        goto label07;

     label06:
        $stack66#5 = 251;

     label07:
        type#2 = $stack66#5;

        goto label09;

     label08:
        type#2 = 252;

     label09:
        goto label13;

     label10:
        if clocalsSize != localsSize#1 goto label13;

        if cstackSize != 1 goto label13;

        if delta#4 >= 63 goto label11;

        $stack65#6 = 64;

        goto label12;

     label11:
        $stack65#6 = 247;

     label12:
        type#2 = $stack65#6;

     label13:
        $stack64#7 = type#2;

        $stack64#8 = $stack64#7;

        $stack63#9 = 255;

        $stack63#10 = $stack63#9;

        if $stack64#8 == $stack63#10 goto label16;

        l#11 = 3;

        j#12 = 0;

     label14:
        $stack62 = j#12;

        $stack61 = localsSize#1;

        if $stack62 >= $stack61 goto label16;

        $stack57 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        $stack60 = $stack57[l#11];

        $stack58 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] previousFrame>;

        $stack59 = $stack58[l#11];

        if $stack60 == $stack59 goto label15;

        type#2 = 255;

        goto label16;

     label15:
        l#11 = l#11 + 1;

        j#12 = j#12 + 1;

        goto label14;

     label16:
        $stack56#13 = type#2;

        $stack56#14 = $stack56#13;

        lookupswitch($stack56#14)
        {
            case 0: goto label17;
            case 64: goto label18;
            case 247: goto label19;
            case 248: goto label21;
            case 251: goto label20;
            case 252: goto label22;
            default: goto label23;
        };

     label17:
        $stack44 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack45 = virtualinvoke $stack44.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(delta#4);

        goto label24;

     label18:
        $stack40 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack39 = 64 + delta#4;

        $stack41 = virtualinvoke $stack40.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack39);

        $stack43 = 3 + clocalsSize;

        $stack42 = 4 + clocalsSize;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameTypes(int,int)>($stack43, $stack42);

        goto label24;

     label19:
        $stack34 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack35 = virtualinvoke $stack34.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(247);

        $stack36 = virtualinvoke $stack35.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(delta#4);

        $stack38 = 3 + clocalsSize;

        $stack37 = 4 + clocalsSize;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameTypes(int,int)>($stack38, $stack37);

        goto label24;

     label20:
        $stack27 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack28 = virtualinvoke $stack27.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(251);

        $stack29 = virtualinvoke $stack28.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(delta#4);

        goto label24;

     label21:
        $stack31 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack30 = 251 + k#3;

        $stack32 = virtualinvoke $stack31.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack30);

        $stack33 = virtualinvoke $stack32.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(delta#4);

        goto label24;

     label22:
        $stack22 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack21 = 251 + k#3;

        $stack23 = virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack21);

        $stack24 = virtualinvoke $stack23.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(delta#4);

        $stack26 = 3 + localsSize#1;

        $stack25 = 3 + clocalsSize;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameTypes(int,int)>($stack26, $stack25);

        goto label24;

     label23:
        $stack46 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack47 = virtualinvoke $stack46.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(255);

        $stack48 = virtualinvoke $stack47.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(delta#4);

        $stack49 = virtualinvoke $stack48.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(clocalsSize);

        $stack50 = 3 + clocalsSize;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameTypes(int,int)>(3, $stack50);

        $stack51 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack52 = virtualinvoke $stack51.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(cstackSize);

        $stack55 = 3 + clocalsSize;

        $stack53 = 3 + clocalsSize;

        $stack54 = $stack53 + cstackSize;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameTypes(int,int)>($stack55, $stack54);

     label24:
        return;

        nop;
    }

    private void writeFrameTypes(int, int)
    {
        byte $stack23#10, $stack23#11, $b0;
        bottom_type i, d, v, $stack13, $stack14, $stack15, $stack16, $stack17, $stack22, $stack23, $stack24, $stack25;
        java.lang.StringBuilder $stack8, $stack12, $stack21, $stack26, $stack27, $stack28, $stack29, $stack30, $stack31, $stack32, $stack38, $stack39, $stack40, v#4, $stack25#18, $stack25#19, $u0;
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack22#6, $stack22#7, $stack24#14, $stack24#15;
        jdk.internal.org.objectweb.asm.ByteVector $stack18, $stack42, $stack43, $stack48, $stack49, $stack50, $stack57, $stack58, $stack59, $stack13#8, $stack13#9, $stack14#12, $stack14#13;
        java.lang.String $stack37, $stack54, $stack16#20, $stack16#21;
        jdk.internal.org.objectweb.asm.Item $stack36, $stack46, $stack53;
        jdk.internal.org.objectweb.asm.Item[] $stack35, $stack45, $stack52;
        int[] $stack7;
        jdk.internal.org.objectweb.asm.ClassWriter $stack33, $stack44, $stack51, $stack55, $stack15#16, $stack15#17;
        int start, end, t, $stack9, $stack10, $stack11, $stack19, $stack20, $stack34, $stack41, $stack47, $stack56, i#1, d#2, v#3, d#5, $stack17#22, $stack17#23, $i0;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        start := @parameter0: int;

        end := @parameter1: int;

        i#1 = start;

     label01:
        $stack20 = i#1;

        $stack19 = end;

        if $stack20 >= $stack19 goto label20;

        $stack7 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] frame>;

        t = $stack7[i#1];

        d#2 = t & -268435456;

        if d#2 != 0 goto label06;

        v#3 = t & 1048575;

        $stack41 = t & 267386880;

        lookupswitch($stack41)
        {
            case 24117248: goto label02;
            case 25165824: goto label03;
            default: goto label04;
        };

     label02:
        $stack49 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack50 = virtualinvoke $stack49.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(7);

        $stack55 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack51 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack52 = $stack51.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] typeTable>;

        $stack53 = $stack52[v#3];

        $stack54 = $stack53.<jdk.internal.org.objectweb.asm.Item: java.lang.String strVal1>;

        $stack56 = virtualinvoke $stack55.<jdk.internal.org.objectweb.asm.ClassWriter: int newClass(java.lang.String)>($stack54);

        $stack57 = virtualinvoke $stack50.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack56);

        goto label05;

     label03:
        $stack42 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack43 = virtualinvoke $stack42.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(8);

        $stack44 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack45 = $stack44.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] typeTable>;

        $stack46 = $stack45[v#3];

        $stack47 = $stack46.<jdk.internal.org.objectweb.asm.Item: int intVal>;

        $stack48 = virtualinvoke $stack43.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack47);

        goto label05;

     label04:
        $stack58 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack59 = virtualinvoke $stack58.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(v#3);

     label05:
        goto label19;

     label06:
        $u0 = new java.lang.StringBuilder;

        $stack8 = $u0;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        v#4 = $stack8;

        d#5 = d#2 >> 28;

     label07:
        $stack9 = d#5;

        $b0 = -1;

        $i0 = (int) $b0;

        d#5 = d#5 + $i0;

        if $stack9 <= 0 goto label08;

        $stack40 = virtualinvoke v#4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        goto label07;

     label08:
        $stack10 = t & 267386880;

        if $stack10 != 24117248 goto label09;

        $stack32 = virtualinvoke v#4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(76);

        $stack33 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack35 = $stack33.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] typeTable>;

        $stack34 = t & 1048575;

        $stack36 = $stack35[$stack34];

        $stack37 = $stack36.<jdk.internal.org.objectweb.asm.Item: java.lang.String strVal1>;

        $stack38 = virtualinvoke v#4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack37);

        $stack39 = virtualinvoke v#4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

        goto label18;

     label09:
        $stack11 = t & 15;

        tableswitch($stack11)
        {
            case 1: goto label10;
            case 2: goto label11;
            case 3: goto label12;
            case 4: goto label17;
            case 5: goto label17;
            case 6: goto label17;
            case 7: goto label17;
            case 8: goto label17;
            case 9: goto label13;
            case 10: goto label14;
            case 11: goto label15;
            case 12: goto label16;
            default: goto label17;
        };

     label10:
        $stack30 = virtualinvoke v#4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(73);

        goto label18;

     label11:
        $stack29 = virtualinvoke v#4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(70);

        goto label18;

     label12:
        $stack28 = virtualinvoke v#4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(68);

        goto label18;

     label13:
        $stack27 = virtualinvoke v#4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(90);

        goto label18;

     label14:
        $stack26 = virtualinvoke v#4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(66);

        goto label18;

     label15:
        $stack21 = virtualinvoke v#4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(67);

        goto label18;

     label16:
        $stack12 = virtualinvoke v#4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(83);

        goto label18;

     label17:
        $stack31 = virtualinvoke v#4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(74);

     label18:
        $stack22#6 = this;

        $stack22#7 = $stack22#6;

        $stack13#8 = $stack22#7.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack13#9 = $stack13#8;

        $stack23#10 = 7;

        $stack23#11 = $stack23#10;

        $stack14#12 = virtualinvoke $stack13#9.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack23#11);

        $stack14#13 = $stack14#12;

        $stack24#14 = this;

        $stack24#15 = $stack24#14;

        $stack15#16 = $stack24#15.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack15#17 = $stack15#16;

        $stack25#18 = v#4;

        $stack25#19 = $stack25#18;

        $stack16#20 = virtualinvoke $stack25#19.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack16#21 = $stack16#20;

        $stack17#22 = virtualinvoke $stack15#17.<jdk.internal.org.objectweb.asm.ClassWriter: int newClass(java.lang.String)>($stack16#21);

        $stack17#23 = $stack17#22;

        $stack18 = virtualinvoke $stack14#13.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack17#23);

     label19:
        i#1 = i#1 + 1;

        goto label01;

     label20:
        return;

        nop;
    }

    private void writeFrameType(java.lang.Object)
    {
        jdk.internal.org.objectweb.asm.ClassWriter $stack16;
        jdk.internal.org.objectweb.asm.MethodWriter this;
        java.lang.Integer $stack9;
        jdk.internal.org.objectweb.asm.ByteVector $stack4, $stack5, $stack8, $stack10, $stack12, $stack13, $stack14, $stack18;
        int $stack7, $stack11, $stack17;
        java.lang.String $stack15;
        boolean $stack2, $stack3;
        jdk.internal.org.objectweb.asm.Label $stack6;
        java.lang.Object type;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        type := @parameter0: java.lang.Object;

        $stack2 = type instanceof java.lang.String;

        if $stack2 == 0 goto label1;

        $stack13 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack14 = virtualinvoke $stack13.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(7);

        $stack16 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack15 = (java.lang.String) type;

        $stack17 = virtualinvoke $stack16.<jdk.internal.org.objectweb.asm.ClassWriter: int newClass(java.lang.String)>($stack15);

        $stack18 = virtualinvoke $stack14.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack17);

        goto label3;

     label1:
        $stack3 = type instanceof java.lang.Integer;

        if $stack3 == 0 goto label2;

        $stack10 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack9 = (java.lang.Integer) type;

        $stack11 = virtualinvoke $stack9.<java.lang.Integer: int intValue()>();

        $stack12 = virtualinvoke $stack10.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack11);

        goto label3;

     label2:
        $stack4 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack5 = virtualinvoke $stack4.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(8);

        $stack6 = (jdk.internal.org.objectweb.asm.Label) type;

        $stack7 = $stack6.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack8 = virtualinvoke $stack5.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack7);

     label3:
        return;

        nop;
    }

    final int getSize()
    {
        byte[] $stack157;
        byte $stack70, $stack77, $stack84, $stack91, $stack164, $stack171, $stack186, $b0, $b1, $b2, $b3;
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack36, $stack42, $stack57, $stack63, $stack73, $stack80, $stack87, $stack94, $stack100, $stack106, $stack112, $stack115, $stack125, $stack132, $stack167, $stack174, $stack185, $stack190, $stack197, $stack203, $stack209, $stack183#5, $stack183#6, $stack151#9, $stack151#10, $stack121#13, $stack121#14;
        short $stack133;
        int $stack3, $stack5, $stack7, $stack8, $stack23, $stack24, $stack26, $stack28, $stack29, $stack30, $stack31, $stack32, $stack34, $stack35, $stack43, $stack44, $stack45, $stack47, $stack49, $stack50, $stack51, $stack52, $stack53, $stack55, $stack56, $stack64, $stack65, $stack66, $stack68, $stack71, $stack72, $stack75, $stack78, $stack79, $stack82, $stack85, $stack86, $stack89, $stack92, $stack93, $stack96, $stack98, $stack99, $stack102, $stack104, $stack105, $stack108, $stack111, $stack114, $stack117, $stack118, $stack120, $stack123, $stack124, $stack128, $stack129, $stack130, $stack131, $stack135, $stack137, $stack139, $stack140, $stack141, $stack142, $stack143, $stack154, $stack155, $stack156, $stack160, $stack162, $stack165, $stack166, $stack169, $stack172, $stack173, $stack176, $stack177, $stack179, $stack181, $stack182, $stack187, $stack188, $stack193, $stack195, $stack196, $stack199, $stack201, $stack202, $stack205, $stack207, $stack208, $stack211, $stack212, size#1, $stack6#11, $stack6#12, $stack9#15, $stack9#16, $stack122#17, $stack122#18, $stack10#19, $stack10#20, zip#21, $stack62#22, zip#23, $stack41#24, $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        bottom_type size, $stack6, $stack9, $stack10, zip, $stack41, $stack62, $stack121, $stack122, $stack148, $stack151, $stack183, $stack184, $stack189;
        jdk.internal.org.objectweb.asm.ByteVector $stack4, $stack12, $stack13, $stack97, $stack103, $stack134, $stack138, $stack144, $stack145, $stack146, $stack147, $stack152, $stack153, $stack180, $stack194, $stack200, $stack206;
        java.lang.String $stack11, $stack109, $stack126, $stack184#4;
        java.lang.RuntimeException $stack210, $u0;
        jdk.internal.org.objectweb.asm.AnnotationWriter[] $stack18, $stack19, $stack27, $stack33, $stack37, $stack39, $stack48, $stack54, $stack58, $stack60;
        boolean $stack191, $stack189#2, zip#3;
        jdk.internal.org.objectweb.asm.Attribute $stack20, $stack22, $stack150, $stack159;
        jdk.internal.org.objectweb.asm.ClassWriter $stack21, $stack25, $stack46, $stack67, $stack74, $stack81, $stack88, $stack95, $stack101, $stack107, $stack110, $stack113, $stack116, $stack119, $stack127, $stack136, $stack158, $stack161, $stack168, $stack175, $stack178, $stack192, $stack198, $stack204;
        jdk.internal.org.objectweb.asm.AnnotationWriter $stack14, $stack15, $stack16, $stack17, $stack38, $stack40, $stack59, $stack61, $stack69, $stack76, $stack83, $stack90, $stack149, $stack163, $stack170, $stack148#7, $stack148#8;
        char $c0, $c1, $c2;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        $stack3 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int classReaderOffset>;

        if $stack3 == 0 goto label01;

        $stack211 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int classReaderLength>;

        $stack212 = 6 + $stack211;

        return $stack212;

     label01:
        size#1 = 8;

        $stack4 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack5 = $stack4.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        if $stack5 <= 0 goto label13;

        $stack134 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack135 = $stack134.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $c0 = 65535;

        $i0 = (int) $c0;

        if $stack135 <= $i0 goto label02;

        $u0 = new java.lang.RuntimeException;

        $stack210 = $u0;

        specialinvoke $u0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Method code too large!");

        throw $stack210;

     label02:
        $stack136 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack137 = virtualinvoke $stack136.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Code");

        $stack138 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack139 = $stack138.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack142 = 18 + $stack139;

        $stack140 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int handlerCount>;

        $stack141 = 8 * $stack140;

        $stack143 = $stack142 + $stack141;

        size#1 = size#1 + $stack143;

        $stack144 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar>;

        if $stack144 == null goto label03;

        $stack204 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack205 = virtualinvoke $stack204.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("LocalVariableTable");

        $stack206 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar>;

        $stack207 = $stack206.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack208 = 8 + $stack207;

        size#1 = size#1 + $stack208;

     label03:
        $stack209 = this;

        $stack145 = $stack209.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType>;

        if $stack145 == null goto label04;

        $stack198 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack199 = virtualinvoke $stack198.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("LocalVariableTypeTable");

        $stack200 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType>;

        $stack201 = $stack200.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack202 = 8 + $stack201;

        size#1 = size#1 + $stack202;

     label04:
        $stack203 = this;

        $stack146 = $stack203.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        if $stack146 == null goto label05;

        $stack192 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack193 = virtualinvoke $stack192.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("LineNumberTable");

        $stack194 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        $stack195 = $stack194.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack196 = 8 + $stack195;

        size#1 = size#1 + $stack196;

     label05:
        $stack197 = this;

        $stack147 = $stack197.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        if $stack147 == null goto label10;

        $stack175 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack176 = $stack175.<jdk.internal.org.objectweb.asm.ClassWriter: int version>;

        $c1 = 65535;

        $i1 = (int) $c1;

        $stack177 = $stack176 & $i1;

        if $stack177 < 50 goto label06;

        $stack189#2 = 1;

        goto label07;

     label06:
        $stack189#2 = 0;

     label07:
        zip#3 = $stack189#2;

        $stack190 = this;

        $stack178 = $stack190.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack191 = zip#3;

        if $stack191 == 0 goto label08;

        $stack184#4 = "StackMapTable";

        goto label09;

     label08:
        $stack184#4 = "StackMap";

     label09:
        $stack179 = virtualinvoke $stack178.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>($stack184#4);

        $stack187 = size#1;

        $stack186 = 8;

        $stack185 = this;

        $stack180 = $stack185.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack181 = $stack180.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack182 = $stack186 + $stack181;

        $stack188 = $stack187 + $stack182;

        size#1 = $stack188;

     label10:
        $stack183#5 = this;

        $stack183#6 = $stack183#5;

        $stack148#7 = $stack183#6.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns>;

        $stack148#8 = $stack148#7;

        if $stack148#8 == null goto label11;

        $stack168 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack169 = virtualinvoke $stack168.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleTypeAnnotations");

        $stack171 = 8;

        $stack170 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns>;

        $stack172 = virtualinvoke $stack170.<jdk.internal.org.objectweb.asm.AnnotationWriter: int getSize()>();

        $stack173 = $stack171 + $stack172;

        size#1 = size#1 + $stack173;

     label11:
        $stack174 = this;

        $stack149 = $stack174.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns>;

        if $stack149 == null goto label12;

        $stack161 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack162 = virtualinvoke $stack161.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleTypeAnnotations");

        $stack164 = 8;

        $stack163 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns>;

        $stack165 = virtualinvoke $stack163.<jdk.internal.org.objectweb.asm.AnnotationWriter: int getSize()>();

        $stack166 = $stack164 + $stack165;

        size#1 = size#1 + $stack166;

     label12:
        $stack167 = this;

        $stack150 = $stack167.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute cattrs>;

        if $stack150 == null goto label13;

        $stack159 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute cattrs>;

        $stack158 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack152 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack157 = $stack152.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack153 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack156 = $stack153.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack155 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStack>;

        $stack154 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals>;

        $stack160 = virtualinvoke $stack159.<jdk.internal.org.objectweb.asm.Attribute: int getSize(jdk.internal.org.objectweb.asm.ClassWriter,byte[],int,int,int)>($stack158, $stack157, $stack156, $stack155, $stack154);

        size#1 = size#1 + $stack160;

     label13:
        $stack151#9 = this;

        $stack151#10 = $stack151#9;

        $stack6#11 = $stack151#10.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount>;

        $stack6#12 = $stack6#11;

        if $stack6#12 <= 0 goto label14;

        $stack127 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack128 = virtualinvoke $stack127.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Exceptions");

        $stack129 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount>;

        $stack130 = 2 * $stack129;

        $stack131 = 8 + $stack130;

        size#1 = size#1 + $stack131;

     label14:
        $stack132 = this;

        $stack7 = $stack132.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack133 = 4096;

        $stack8 = $stack7 & $stack133;

        if $stack8 == 0 goto label16;

        $stack116 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack117 = $stack116.<jdk.internal.org.objectweb.asm.ClassWriter: int version>;

        $c2 = 65535;

        $i2 = (int) $c2;

        $stack118 = $stack117 & $i2;

        if $stack118 < 49 goto label15;

        $stack123 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack124 = $stack123 & 262144;

        if $stack124 == 0 goto label16;

     label15:
        $stack125 = this;

        $stack119 = $stack125.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack126 = "Synthetic";

        $stack120 = virtualinvoke $stack119.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>($stack126);

        size#1 = size#1 + 6;

     label16:
        $stack121#13 = this;

        $stack121#14 = $stack121#13;

        $stack9#15 = $stack121#14.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack9#16 = $stack9#15;

        $stack122#17 = 131072;

        $stack122#18 = $stack122#17;

        $stack10#19 = $stack9#16 & $stack122#18;

        $stack10#20 = $stack10#19;

        if $stack10#20 == 0 goto label17;

        $stack113 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack114 = virtualinvoke $stack113.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Deprecated");

        size#1 = size#1 + 6;

     label17:
        $stack115 = this;

        $stack11 = $stack115.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String signature>;

        if $stack11 == null goto label18;

        $stack107 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack108 = virtualinvoke $stack107.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Signature");

        $stack110 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack109 = this.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String signature>;

        $stack111 = virtualinvoke $stack110.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>($stack109);

        size#1 = size#1 + 8;

     label18:
        $stack112 = this;

        $stack12 = $stack112.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector methodParameters>;

        if $stack12 == null goto label19;

        $stack101 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack102 = virtualinvoke $stack101.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("MethodParameters");

        $stack103 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector methodParameters>;

        $stack104 = $stack103.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack105 = 7 + $stack104;

        size#1 = size#1 + $stack105;

     label19:
        $stack106 = this;

        $stack13 = $stack106.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector annd>;

        if $stack13 == null goto label20;

        $stack95 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack96 = virtualinvoke $stack95.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("AnnotationDefault");

        $stack97 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector annd>;

        $stack98 = $stack97.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack99 = 6 + $stack98;

        size#1 = size#1 + $stack99;

     label20:
        $stack100 = this;

        $stack14 = $stack100.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter anns>;

        if $stack14 == null goto label21;

        $stack88 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack89 = virtualinvoke $stack88.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleAnnotations");

        $stack91 = 8;

        $stack90 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter anns>;

        $stack92 = virtualinvoke $stack90.<jdk.internal.org.objectweb.asm.AnnotationWriter: int getSize()>();

        $stack93 = $stack91 + $stack92;

        size#1 = size#1 + $stack93;

     label21:
        $stack94 = this;

        $stack15 = $stack94.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ianns>;

        if $stack15 == null goto label22;

        $stack81 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack82 = virtualinvoke $stack81.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleAnnotations");

        $stack84 = 8;

        $stack83 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ianns>;

        $stack85 = virtualinvoke $stack83.<jdk.internal.org.objectweb.asm.AnnotationWriter: int getSize()>();

        $stack86 = $stack84 + $stack85;

        size#1 = size#1 + $stack86;

     label22:
        $stack87 = this;

        $stack16 = $stack87.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter tanns>;

        if $stack16 == null goto label23;

        $stack74 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack75 = virtualinvoke $stack74.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleTypeAnnotations");

        $stack77 = 8;

        $stack76 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter tanns>;

        $stack78 = virtualinvoke $stack76.<jdk.internal.org.objectweb.asm.AnnotationWriter: int getSize()>();

        $stack79 = $stack77 + $stack78;

        size#1 = size#1 + $stack79;

     label23:
        $stack80 = this;

        $stack17 = $stack80.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter itanns>;

        if $stack17 == null goto label24;

        $stack67 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack68 = virtualinvoke $stack67.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleTypeAnnotations");

        $stack70 = 8;

        $stack69 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter itanns>;

        $stack71 = virtualinvoke $stack69.<jdk.internal.org.objectweb.asm.AnnotationWriter: int getSize()>();

        $stack72 = $stack70 + $stack71;

        size#1 = size#1 + $stack72;

     label24:
        $stack73 = this;

        $stack18 = $stack73.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] panns>;

        if $stack18 == null goto label28;

        $stack46 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack47 = virtualinvoke $stack46.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleParameterAnnotations");

        $stack48 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] panns>;

        $stack50 = lengthof $stack48;

        $stack49 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int synthetics>;

        $stack51 = $stack50 - $stack49;

        $stack52 = 2 * $stack51;

        $stack53 = 7 + $stack52;

        size#1 = size#1 + $stack53;

        $stack54 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] panns>;

        $stack55 = lengthof $stack54;

        zip#21 = $stack55 - 1;

     label25:
        $stack64 = zip#21;

        $stack63 = this;

        $stack56 = $stack63.<jdk.internal.org.objectweb.asm.MethodWriter: int synthetics>;

        if $stack64 < $stack56 goto label28;

        $stack65 = size#1;

        $stack58 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] panns>;

        $stack59 = $stack58[zip#21];

        if $stack59 != null goto label26;

        $stack62#22 = 0;

        goto label27;

     label26:
        $stack60 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] panns>;

        $stack61 = $stack60[zip#21];

        $stack62#22 = virtualinvoke $stack61.<jdk.internal.org.objectweb.asm.AnnotationWriter: int getSize()>();

     label27:
        $stack66 = $stack65 + $stack62#22;

        size#1 = $stack66;

        $b0 = -1;

        $i3 = (int) $b0;

        zip#21 = zip#21 + $i3;

        goto label25;

     label28:
        $stack57 = this;

        $stack19 = $stack57.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns>;

        if $stack19 == null goto label32;

        $stack25 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack26 = virtualinvoke $stack25.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleParameterAnnotations");

        $stack27 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns>;

        $stack29 = lengthof $stack27;

        $stack28 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int synthetics>;

        $stack30 = $stack29 - $stack28;

        $stack31 = 2 * $stack30;

        $stack32 = 7 + $stack31;

        size#1 = size#1 + $stack32;

        $stack33 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns>;

        $stack34 = lengthof $stack33;

        zip#23 = $stack34 - 1;

     label29:
        $stack43 = zip#23;

        $stack42 = this;

        $stack35 = $stack42.<jdk.internal.org.objectweb.asm.MethodWriter: int synthetics>;

        if $stack43 < $stack35 goto label32;

        $stack44 = size#1;

        $stack37 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns>;

        $stack38 = $stack37[zip#23];

        if $stack38 != null goto label30;

        $stack41#24 = 0;

        goto label31;

     label30:
        $stack39 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns>;

        $stack40 = $stack39[zip#23];

        $stack41#24 = virtualinvoke $stack40.<jdk.internal.org.objectweb.asm.AnnotationWriter: int getSize()>();

     label31:
        $stack45 = $stack44 + $stack41#24;

        size#1 = $stack45;

        $b1 = -1;

        $i4 = (int) $b1;

        zip#23 = zip#23 + $i4;

        goto label29;

     label32:
        $stack36 = this;

        $stack20 = $stack36.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute attrs>;

        if $stack20 == null goto label33;

        $stack22 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute attrs>;

        $stack21 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $b2 = -1;

        $i5 = (int) $b2;

        $b3 = -1;

        $i6 = (int) $b3;

        $stack23 = virtualinvoke $stack22.<jdk.internal.org.objectweb.asm.Attribute: int getSize(jdk.internal.org.objectweb.asm.ClassWriter,byte[],int,int,int)>($stack21, null, 0, $i5, $i6);

        size#1 = size#1 + $stack23;

     label33:
        $stack24 = size#1;

        return $stack24;

        nop;
    }

    final void put(jdk.internal.org.objectweb.asm.ByteVector)
    {
        int[] $stack156;
        int $stack7, $stack8, $stack9, mask, $stack10, $stack11, $stack12, $stack14, $stack16, $stack18, $stack20, $stack21, $stack22, $stack23, $stack38, $stack40, $stack41, $stack57, $stack59, $stack63, $stack65, $stack69, $stack74, $stack79, $stack84, $stack89, $stack92, $stack96, $stack101, $stack104, $stack105, $stack107, $stack111, $stack116, $stack121, $stack125, $stack130, $stack131, $stack133, $stack138, $stack139, $stack145, $stack147, $stack148, $stack149, $stack151, $stack153, $stack157, $stack160, $stack162, $stack163, $stack164, $stack165, $stack174, $stack177, $stack179, $stack182, $stack186, $stack189, $stack191, $stack210, $stack211, $stack212, $stack217, $stack222, $stack227, $stack228, $stack230, $stack233, $stack234, $stack236, $stack240, $stack258, $stack261, $stack262, $stack264, $stack268, $stack273, $stack276, $stack277, $stack279, $stack283, $stack288, $stack291, $stack292, $stack294, $stack298, $stack303, $stack304, $stack316, $stack319, $stack322, $stack324, $stack329, $stack330, $stack331, $stack335, $stack339, $stack353, $stack354, $stack358, $stack359, $stack362, $stack363, $stack366, $stack367, $stack370, $stack371, $stack374, $stack375, $stack378, $stack379, $stack393, $stack394, $stack397, $stack398, $stack404, $stack405, attributeCount#1, $stack24#4, $stack24#5, $stack396#6, $stack396#7, $stack25#8, $stack25#9, size#10, attributeCount#12, $stack39#22, $stack39#23, size#24, $stack42#27, $stack42#28, $stack137#29, $stack137#30, $stack43#31, $stack43#32, $i0, $i1, $i2, $i3, $i4, $i5;
        jdk.internal.org.objectweb.asm.ClassReader $stack403;
        jdk.internal.org.objectweb.asm.ByteVector out, $stack13, $stack15, $stack17, $stack19, $stack27, $stack28, $stack36, $stack37, $stack45, $stack46, $stack58, $stack64, $stack70, $stack75, $stack80, $stack85, $stack90, $stack91, $stack93, $stack94, $stack95, $stack98, $stack102, $stack103, $stack106, $stack108, $stack109, $stack110, $stack113, $stack117, $stack118, $stack122, $stack126, $stack127, $stack134, $stack135, $stack142, $stack146, $stack150, $stack152, $stack158, $stack161, $stack166, $stack167, $stack168, $stack169, $stack175, $stack176, $stack178, $stack180, $stack181, $stack183, $stack184, $stack185, $stack188, $stack190, $stack192, $stack193, $stack194, $stack195, $stack199, $stack200, $stack201, $stack202, $stack203, $stack208, $stack209, $stack218, $stack223, $stack231, $stack232, $stack235, $stack237, $stack238, $stack239, $stack242, $stack245, $stack248, $stack253, $stack259, $stack260, $stack263, $stack265, $stack266, $stack267, $stack270, $stack274, $stack275, $stack278, $stack280, $stack281, $stack282, $stack285, $stack289, $stack290, $stack293, $stack295, $stack296, $stack297, $stack300, $stack305, $stack317, $stack320, $stack323, $stack325, $stack327, $stack328, $stack338, $stack341, $stack344, $stack349, $stack361, $stack365, $stack369, $stack373, $stack380, $stack407;
        java.lang.String $stack26, $stack44, $stack119, $stack141, $stack337, $stack244#15;
        jdk.internal.org.objectweb.asm.Handler $stack326, h#11;
        boolean $stack256, $stack254#13, h#14;
        jdk.internal.org.objectweb.asm.AnnotationWriter $stack29, $stack30, $stack31, $stack32, $stack47, $stack48, $stack49, $stack50, $stack71, $stack76, $stack81, $stack86, $stack170, $stack171, $stack196, $stack197, $stack205, $stack219, $stack224, $stack351, $stack356, $stack204#18, $stack204#19;
        byte[] $stack97, $stack112, $stack187, $stack213, $stack241, $stack269, $stack284, $stack299, $stack332, $stack406;
        byte FACTOR, $stack143, $stack247, $stack252, $stack313, $stack347, $stack352, $stack357, $b0, $b1, $b2;
        jdk.internal.org.objectweb.asm.MethodWriter this, $stack61, $stack67, $stack72, $stack77, $stack82, $stack87, $stack99, $stack114, $stack123, $stack128, $stack140, $stack154, $stack159, $stack220, $stack225, $stack246, $stack249, $stack250, $stack251, $stack255, $stack271, $stack286, $stack301, $stack306, $stack307, $stack308, $stack309, $stack310, $stack311, $stack312, $stack314, $stack336, $stack340, $stack342, $stack343, $stack345, $stack346, $stack348, $stack350, $stack355, $stack360, $stack364, $stack368, $stack372, $stack376, $stack381, $stack382, $stack383, $stack384, $stack385, $stack386, $stack387, $stack388, $stack389, $stack390, $stack391, $stack399, $stack401, $stack395#2, $stack395#3, $stack243#16, $stack243#17, $stack207#20, $stack207#21, $stack136#25, $stack136#26;
        short $stack155, $stack400;
        bottom_type attributeCount, $stack24, $stack25, $stack39, $stack42, $stack43, $stack136, $stack137, size, $stack204, $stack207, h, $stack243, $stack244, $stack254, $stack395, $stack396;
        jdk.internal.org.objectweb.asm.AnnotationWriter[] $stack33, $stack34, $stack51, $stack52, $stack60, $stack66;
        jdk.internal.org.objectweb.asm.Attribute $stack35, $stack53, $stack55, $stack172, $stack198, $stack206, $stack215, $stack302, $stack334, $stack377;
        jdk.internal.org.objectweb.asm.ClassWriter $stack54, $stack56, $stack62, $stack68, $stack73, $stack78, $stack83, $stack88, $stack100, $stack115, $stack120, $stack124, $stack129, $stack132, $stack144, $stack173, $stack214, $stack216, $stack221, $stack226, $stack229, $stack257, $stack272, $stack287, $stack333, $stack392, $stack402;
        char $c0, $c1, $c2;
        jdk.internal.org.objectweb.asm.Label $stack315, $stack318, $stack321;

        this := @this: jdk.internal.org.objectweb.asm.MethodWriter;

        out := @parameter0: jdk.internal.org.objectweb.asm.ByteVector;

        FACTOR = 64;

        $stack7 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack8 = $stack7 & 262144;

        $stack9 = $stack8 / 64;

        mask = 917504 | $stack9;

        $stack11 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $b0 = -1;

        $i0 = (int) $b0;

        $stack10 = mask ^ $i0;

        $stack12 = $stack11 & $stack10;

        $stack13 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack12);

        $stack14 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int name>;

        $stack15 = virtualinvoke $stack13.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack14);

        $stack16 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int desc>;

        $stack17 = virtualinvoke $stack15.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack16);

        $stack18 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int classReaderOffset>;

        if $stack18 == 0 goto label01;

        $stack402 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack403 = $stack402.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ClassReader cr>;

        $stack406 = $stack403.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack405 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int classReaderOffset>;

        $stack404 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int classReaderLength>;

        $stack407 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack406, $stack405, $stack404);

        return;

     label01:
        attributeCount#1 = 0;

        $stack19 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack20 = $stack19.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        if $stack20 <= 0 goto label02;

        attributeCount#1 = attributeCount#1 + 1;

     label02:
        $stack401 = this;

        $stack21 = $stack401.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount>;

        if $stack21 <= 0 goto label03;

        attributeCount#1 = attributeCount#1 + 1;

     label03:
        $stack399 = this;

        $stack22 = $stack399.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack400 = 4096;

        $stack23 = $stack22 & $stack400;

        if $stack23 == 0 goto label05;

        $stack392 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack393 = $stack392.<jdk.internal.org.objectweb.asm.ClassWriter: int version>;

        $c0 = 65535;

        $i1 = (int) $c0;

        $stack394 = $stack393 & $i1;

        if $stack394 < 49 goto label04;

        $stack397 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack398 = $stack397 & 262144;

        if $stack398 == 0 goto label05;

     label04:
        attributeCount#1 = attributeCount#1 + 1;

     label05:
        $stack395#2 = this;

        $stack395#3 = $stack395#2;

        $stack24#4 = $stack395#3.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack24#5 = $stack24#4;

        $stack396#6 = 131072;

        $stack396#7 = $stack396#6;

        $stack25#8 = $stack24#5 & $stack396#7;

        $stack25#9 = $stack25#8;

        if $stack25#9 == 0 goto label06;

        attributeCount#1 = attributeCount#1 + 1;

     label06:
        $stack391 = this;

        $stack26 = $stack391.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String signature>;

        if $stack26 == null goto label07;

        attributeCount#1 = attributeCount#1 + 1;

     label07:
        $stack390 = this;

        $stack27 = $stack390.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector methodParameters>;

        if $stack27 == null goto label08;

        attributeCount#1 = attributeCount#1 + 1;

     label08:
        $stack389 = this;

        $stack28 = $stack389.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector annd>;

        if $stack28 == null goto label09;

        attributeCount#1 = attributeCount#1 + 1;

     label09:
        $stack388 = this;

        $stack29 = $stack388.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter anns>;

        if $stack29 == null goto label10;

        attributeCount#1 = attributeCount#1 + 1;

     label10:
        $stack387 = this;

        $stack30 = $stack387.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ianns>;

        if $stack30 == null goto label11;

        attributeCount#1 = attributeCount#1 + 1;

     label11:
        $stack386 = this;

        $stack31 = $stack386.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter tanns>;

        if $stack31 == null goto label12;

        attributeCount#1 = attributeCount#1 + 1;

     label12:
        $stack385 = this;

        $stack32 = $stack385.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter itanns>;

        if $stack32 == null goto label13;

        attributeCount#1 = attributeCount#1 + 1;

     label13:
        $stack384 = this;

        $stack33 = $stack384.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] panns>;

        if $stack33 == null goto label14;

        attributeCount#1 = attributeCount#1 + 1;

     label14:
        $stack383 = this;

        $stack34 = $stack383.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns>;

        if $stack34 == null goto label15;

        attributeCount#1 = attributeCount#1 + 1;

     label15:
        $stack382 = this;

        $stack35 = $stack382.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute attrs>;

        if $stack35 == null goto label16;

        $stack377 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute attrs>;

        $stack378 = virtualinvoke $stack377.<jdk.internal.org.objectweb.asm.Attribute: int getCount()>();

        attributeCount#1 = attributeCount#1 + $stack378;

     label16:
        $stack380 = out;

        $stack379 = attributeCount#1;

        $stack36 = virtualinvoke $stack380.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack379);

        $stack381 = this;

        $stack37 = $stack381.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack38 = $stack37.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        if $stack38 <= 0 goto label43;

        $stack161 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack162 = $stack161.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack165 = 12 + $stack162;

        $stack163 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int handlerCount>;

        $stack164 = 8 * $stack163;

        size#10 = $stack165 + $stack164;

        $stack166 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar>;

        if $stack166 == null goto label17;

        $stack373 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar>;

        $stack374 = $stack373.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack375 = 8 + $stack374;

        size#10 = size#10 + $stack375;

     label17:
        $stack376 = this;

        $stack167 = $stack376.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType>;

        if $stack167 == null goto label18;

        $stack369 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType>;

        $stack370 = $stack369.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack371 = 8 + $stack370;

        size#10 = size#10 + $stack371;

     label18:
        $stack372 = this;

        $stack168 = $stack372.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        if $stack168 == null goto label19;

        $stack365 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        $stack366 = $stack365.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack367 = 8 + $stack366;

        size#10 = size#10 + $stack367;

     label19:
        $stack368 = this;

        $stack169 = $stack368.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        if $stack169 == null goto label20;

        $stack361 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack362 = $stack361.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack363 = 8 + $stack362;

        size#10 = size#10 + $stack363;

     label20:
        $stack364 = this;

        $stack170 = $stack364.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns>;

        if $stack170 == null goto label21;

        $stack357 = 8;

        $stack356 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns>;

        $stack358 = virtualinvoke $stack356.<jdk.internal.org.objectweb.asm.AnnotationWriter: int getSize()>();

        $stack359 = $stack357 + $stack358;

        size#10 = size#10 + $stack359;

     label21:
        $stack360 = this;

        $stack171 = $stack360.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns>;

        if $stack171 == null goto label22;

        $stack352 = 8;

        $stack351 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns>;

        $stack353 = virtualinvoke $stack351.<jdk.internal.org.objectweb.asm.AnnotationWriter: int getSize()>();

        $stack354 = $stack352 + $stack353;

        size#10 = size#10 + $stack354;

     label22:
        $stack355 = this;

        $stack172 = $stack355.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute cattrs>;

        if $stack172 == null goto label23;

        $stack334 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute cattrs>;

        $stack333 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack327 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack332 = $stack327.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack328 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack331 = $stack328.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack330 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStack>;

        $stack329 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals>;

        $stack335 = virtualinvoke $stack334.<jdk.internal.org.objectweb.asm.Attribute: int getSize(jdk.internal.org.objectweb.asm.ClassWriter,byte[],int,int,int)>($stack333, $stack332, $stack331, $stack330, $stack329);

        size#10 = size#10 + $stack335;

     label23:
        $stack338 = out;

        $stack336 = this;

        $stack173 = $stack336.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack337 = "Code";

        $stack174 = virtualinvoke $stack173.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>($stack337);

        $stack175 = virtualinvoke $stack338.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack174);

        $stack339 = size#10;

        $stack176 = virtualinvoke $stack175.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack339);

        $stack341 = out;

        $stack340 = this;

        $stack177 = $stack340.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStack>;

        $stack178 = virtualinvoke $stack341.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack177);

        $stack342 = this;

        $stack179 = $stack342.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals>;

        $stack180 = virtualinvoke $stack178.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack179);

        $stack344 = out;

        $stack343 = this;

        $stack181 = $stack343.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack182 = $stack181.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack183 = virtualinvoke $stack344.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack182);

        $stack345 = this;

        $stack184 = $stack345.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack187 = $stack184.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack347 = 0;

        $stack346 = this;

        $stack185 = $stack346.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack186 = $stack185.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack188 = virtualinvoke $stack183.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack187, $stack347, $stack186);

        $stack349 = out;

        $stack348 = this;

        $stack189 = $stack348.<jdk.internal.org.objectweb.asm.MethodWriter: int handlerCount>;

        $stack190 = virtualinvoke $stack349.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack189);

        $stack350 = this;

        $stack191 = $stack350.<jdk.internal.org.objectweb.asm.MethodWriter: int handlerCount>;

        if $stack191 <= 0 goto label25;

        h#11 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Handler firstHandler>;

     label24:
        $stack326 = h#11;

        if $stack326 == null goto label25;

        $stack315 = h#11.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label start>;

        $stack316 = $stack315.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack317 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack316);

        $stack318 = h#11.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label end>;

        $stack319 = $stack318.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack320 = virtualinvoke $stack317.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack319);

        $stack321 = h#11.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Label handler>;

        $stack322 = $stack321.<jdk.internal.org.objectweb.asm.Label: int position>;

        $stack323 = virtualinvoke $stack320.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack322);

        $stack324 = h#11.<jdk.internal.org.objectweb.asm.Handler: int type>;

        $stack325 = virtualinvoke $stack323.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack324);

        h#11 = h#11.<jdk.internal.org.objectweb.asm.Handler: jdk.internal.org.objectweb.asm.Handler next>;

        goto label24;

     label25:
        $stack313 = 0;

        attributeCount#12 = $stack313;

        $stack314 = this;

        $stack192 = $stack314.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar>;

        if $stack192 == null goto label26;

        attributeCount#12 = attributeCount#12 + 1;

     label26:
        $stack312 = this;

        $stack193 = $stack312.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType>;

        if $stack193 == null goto label27;

        attributeCount#12 = attributeCount#12 + 1;

     label27:
        $stack311 = this;

        $stack194 = $stack311.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        if $stack194 == null goto label28;

        attributeCount#12 = attributeCount#12 + 1;

     label28:
        $stack310 = this;

        $stack195 = $stack310.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        if $stack195 == null goto label29;

        attributeCount#12 = attributeCount#12 + 1;

     label29:
        $stack309 = this;

        $stack196 = $stack309.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns>;

        if $stack196 == null goto label30;

        attributeCount#12 = attributeCount#12 + 1;

     label30:
        $stack308 = this;

        $stack197 = $stack308.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns>;

        if $stack197 == null goto label31;

        attributeCount#12 = attributeCount#12 + 1;

     label31:
        $stack307 = this;

        $stack198 = $stack307.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute cattrs>;

        if $stack198 == null goto label32;

        $stack302 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute cattrs>;

        $stack303 = virtualinvoke $stack302.<jdk.internal.org.objectweb.asm.Attribute: int getCount()>();

        attributeCount#12 = attributeCount#12 + $stack303;

     label32:
        $stack305 = out;

        $stack304 = attributeCount#12;

        $stack199 = virtualinvoke $stack305.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack304);

        $stack306 = this;

        $stack200 = $stack306.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar>;

        if $stack200 == null goto label33;

        $stack287 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack288 = virtualinvoke $stack287.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("LocalVariableTable");

        $stack289 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack288);

        $stack290 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar>;

        $stack291 = $stack290.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack292 = $stack291 + 2;

        $stack293 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack292);

        $stack294 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int localVarCount>;

        $stack295 = virtualinvoke $stack293.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack294);

        $stack296 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar>;

        $stack299 = $stack296.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack297 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVar>;

        $stack298 = $stack297.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack300 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack299, 0, $stack298);

     label33:
        $stack301 = this;

        $stack201 = $stack301.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType>;

        if $stack201 == null goto label34;

        $stack272 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack273 = virtualinvoke $stack272.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("LocalVariableTypeTable");

        $stack274 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack273);

        $stack275 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType>;

        $stack276 = $stack275.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack277 = $stack276 + 2;

        $stack278 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack277);

        $stack279 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int localVarTypeCount>;

        $stack280 = virtualinvoke $stack278.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack279);

        $stack281 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType>;

        $stack284 = $stack281.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack282 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector localVarType>;

        $stack283 = $stack282.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack285 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack284, 0, $stack283);

     label34:
        $stack286 = this;

        $stack202 = $stack286.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        if $stack202 == null goto label35;

        $stack257 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack258 = virtualinvoke $stack257.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("LineNumberTable");

        $stack259 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack258);

        $stack260 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        $stack261 = $stack260.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack262 = $stack261 + 2;

        $stack263 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack262);

        $stack264 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int lineNumberCount>;

        $stack265 = virtualinvoke $stack263.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack264);

        $stack266 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        $stack269 = $stack266.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack267 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector lineNumber>;

        $stack268 = $stack267.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack270 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack269, 0, $stack268);

     label35:
        $stack271 = this;

        $stack203 = $stack271.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        if $stack203 == null goto label40;

        $stack226 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack227 = $stack226.<jdk.internal.org.objectweb.asm.ClassWriter: int version>;

        $c1 = 65535;

        $i2 = (int) $c1;

        $stack228 = $stack227 & $i2;

        if $stack228 < 50 goto label36;

        $stack254#13 = 1;

        goto label37;

     label36:
        $stack254#13 = 0;

     label37:
        h#14 = $stack254#13;

        $stack245 = out;

        $stack255 = this;

        $stack229 = $stack255.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack256 = h#14;

        if $stack256 == 0 goto label38;

        $stack244#15 = "StackMapTable";

        goto label39;

     label38:
        $stack244#15 = "StackMap";

     label39:
        $stack230 = virtualinvoke $stack229.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>($stack244#15);

        $stack231 = virtualinvoke $stack245.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack230);

        $stack248 = out;

        $stack246 = this;

        $stack232 = $stack246.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack233 = $stack232.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack247 = 2;

        $stack234 = $stack233 + $stack247;

        $stack235 = virtualinvoke $stack248.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack234);

        $stack249 = this;

        $stack236 = $stack249.<jdk.internal.org.objectweb.asm.MethodWriter: int frameCount>;

        $stack237 = virtualinvoke $stack235.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack236);

        $stack253 = out;

        $stack250 = this;

        $stack238 = $stack250.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack241 = $stack238.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack252 = 0;

        $stack251 = this;

        $stack239 = $stack251.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector stackMap>;

        $stack240 = $stack239.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack242 = virtualinvoke $stack253.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack241, $stack252, $stack240);

     label40:
        $stack243#16 = this;

        $stack243#17 = $stack243#16;

        $stack204#18 = $stack243#17.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns>;

        $stack204#19 = $stack204#18;

        if $stack204#19 == null goto label41;

        $stack221 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack222 = virtualinvoke $stack221.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleTypeAnnotations");

        $stack223 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack222);

        $stack224 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ctanns>;

        virtualinvoke $stack224.<jdk.internal.org.objectweb.asm.AnnotationWriter: void put(jdk.internal.org.objectweb.asm.ByteVector)>(out);

     label41:
        $stack225 = this;

        $stack205 = $stack225.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns>;

        if $stack205 == null goto label42;

        $stack216 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack217 = virtualinvoke $stack216.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleTypeAnnotations");

        $stack218 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack217);

        $stack219 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ictanns>;

        virtualinvoke $stack219.<jdk.internal.org.objectweb.asm.AnnotationWriter: void put(jdk.internal.org.objectweb.asm.ByteVector)>(out);

     label42:
        $stack220 = this;

        $stack206 = $stack220.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute cattrs>;

        if $stack206 == null goto label43;

        $stack215 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute cattrs>;

        $stack214 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack208 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack213 = $stack208.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack209 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector code>;

        $stack212 = $stack209.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack211 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxLocals>;

        $stack210 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int maxStack>;

        virtualinvoke $stack215.<jdk.internal.org.objectweb.asm.Attribute: void put(jdk.internal.org.objectweb.asm.ClassWriter,byte[],int,int,int,jdk.internal.org.objectweb.asm.ByteVector)>($stack214, $stack213, $stack212, $stack211, $stack210, out);

     label43:
        $stack207#20 = this;

        $stack207#21 = $stack207#20;

        $stack39#22 = $stack207#21.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount>;

        $stack39#23 = $stack39#22;

        if $stack39#23 <= 0 goto label45;

        $stack144 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack145 = virtualinvoke $stack144.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Exceptions");

        $stack146 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack145);

        $stack147 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount>;

        $stack148 = 2 * $stack147;

        $stack149 = $stack148 + 2;

        $stack150 = virtualinvoke $stack146.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack149);

        $stack151 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount>;

        $stack152 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack151);

        size#24 = 0;

     label44:
        $stack160 = size#24;

        $stack159 = this;

        $stack153 = $stack159.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount>;

        if $stack160 >= $stack153 goto label45;

        $stack156 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int[] exceptions>;

        $stack157 = $stack156[size#24];

        $stack158 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack157);

        size#24 = size#24 + 1;

        goto label44;

     label45:
        $stack154 = this;

        $stack40 = $stack154.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack155 = 4096;

        $stack41 = $stack40 & $stack155;

        if $stack41 == 0 goto label47;

        $stack129 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack130 = $stack129.<jdk.internal.org.objectweb.asm.ClassWriter: int version>;

        $c2 = 65535;

        $i3 = (int) $c2;

        $stack131 = $stack130 & $i3;

        if $stack131 < 49 goto label46;

        $stack138 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack139 = $stack138 & 262144;

        if $stack139 == 0 goto label47;

     label46:
        $stack142 = out;

        $stack140 = this;

        $stack132 = $stack140.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack141 = "Synthetic";

        $stack133 = virtualinvoke $stack132.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>($stack141);

        $stack134 = virtualinvoke $stack142.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack133);

        $stack143 = 0;

        $stack135 = virtualinvoke $stack134.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack143);

     label47:
        $stack136#25 = this;

        $stack136#26 = $stack136#25;

        $stack42#27 = $stack136#26.<jdk.internal.org.objectweb.asm.MethodWriter: int access>;

        $stack42#28 = $stack42#27;

        $stack137#29 = 131072;

        $stack137#30 = $stack137#29;

        $stack43#31 = $stack42#28 & $stack137#30;

        $stack43#32 = $stack43#31;

        if $stack43#32 == 0 goto label48;

        $stack124 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack125 = virtualinvoke $stack124.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Deprecated");

        $stack126 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack125);

        $stack127 = virtualinvoke $stack126.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>(0);

     label48:
        $stack128 = this;

        $stack44 = $stack128.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String signature>;

        if $stack44 == null goto label49;

        $stack115 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack116 = virtualinvoke $stack115.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Signature");

        $stack117 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack116);

        $stack118 = virtualinvoke $stack117.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>(2);

        $stack120 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack119 = this.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String signature>;

        $stack121 = virtualinvoke $stack120.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>($stack119);

        $stack122 = virtualinvoke $stack118.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack121);

     label49:
        $stack123 = this;

        $stack45 = $stack123.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector methodParameters>;

        if $stack45 == null goto label50;

        $stack100 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack101 = virtualinvoke $stack100.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("MethodParameters");

        $stack102 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack101);

        $stack103 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector methodParameters>;

        $stack104 = $stack103.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack105 = $stack104 + 1;

        $stack106 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack105);

        $stack107 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int methodParametersCount>;

        $stack108 = virtualinvoke $stack106.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($stack107);

        $stack109 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector methodParameters>;

        $stack112 = $stack109.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack110 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector methodParameters>;

        $stack111 = $stack110.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack113 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack112, 0, $stack111);

     label50:
        $stack114 = this;

        $stack46 = $stack114.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector annd>;

        if $stack46 == null goto label51;

        $stack88 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack89 = virtualinvoke $stack88.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("AnnotationDefault");

        $stack90 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack89);

        $stack91 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector annd>;

        $stack92 = $stack91.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack93 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($stack92);

        $stack94 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector annd>;

        $stack97 = $stack94.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $stack95 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ByteVector annd>;

        $stack96 = $stack95.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $stack98 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack97, 0, $stack96);

     label51:
        $stack99 = this;

        $stack47 = $stack99.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter anns>;

        if $stack47 == null goto label52;

        $stack83 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack84 = virtualinvoke $stack83.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleAnnotations");

        $stack85 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack84);

        $stack86 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter anns>;

        virtualinvoke $stack86.<jdk.internal.org.objectweb.asm.AnnotationWriter: void put(jdk.internal.org.objectweb.asm.ByteVector)>(out);

     label52:
        $stack87 = this;

        $stack48 = $stack87.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ianns>;

        if $stack48 == null goto label53;

        $stack78 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack79 = virtualinvoke $stack78.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleAnnotations");

        $stack80 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack79);

        $stack81 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter ianns>;

        virtualinvoke $stack81.<jdk.internal.org.objectweb.asm.AnnotationWriter: void put(jdk.internal.org.objectweb.asm.ByteVector)>(out);

     label53:
        $stack82 = this;

        $stack49 = $stack82.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter tanns>;

        if $stack49 == null goto label54;

        $stack73 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack74 = virtualinvoke $stack73.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleTypeAnnotations");

        $stack75 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack74);

        $stack76 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter tanns>;

        virtualinvoke $stack76.<jdk.internal.org.objectweb.asm.AnnotationWriter: void put(jdk.internal.org.objectweb.asm.ByteVector)>(out);

     label54:
        $stack77 = this;

        $stack50 = $stack77.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter itanns>;

        if $stack50 == null goto label55;

        $stack68 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack69 = virtualinvoke $stack68.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleTypeAnnotations");

        $stack70 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack69);

        $stack71 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter itanns>;

        virtualinvoke $stack71.<jdk.internal.org.objectweb.asm.AnnotationWriter: void put(jdk.internal.org.objectweb.asm.ByteVector)>(out);

     label55:
        $stack72 = this;

        $stack51 = $stack72.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] panns>;

        if $stack51 == null goto label56;

        $stack62 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack63 = virtualinvoke $stack62.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleParameterAnnotations");

        $stack64 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack63);

        $stack66 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] panns>;

        $stack65 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int synthetics>;

        staticinvoke <jdk.internal.org.objectweb.asm.AnnotationWriter: void put(jdk.internal.org.objectweb.asm.AnnotationWriter[],int,jdk.internal.org.objectweb.asm.ByteVector)>($stack66, $stack65, out);

     label56:
        $stack67 = this;

        $stack52 = $stack67.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns>;

        if $stack52 == null goto label57;

        $stack56 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack57 = virtualinvoke $stack56.<jdk.internal.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleParameterAnnotations");

        $stack58 = virtualinvoke out.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($stack57);

        $stack60 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationWriter[] ipanns>;

        $stack59 = this.<jdk.internal.org.objectweb.asm.MethodWriter: int synthetics>;

        staticinvoke <jdk.internal.org.objectweb.asm.AnnotationWriter: void put(jdk.internal.org.objectweb.asm.AnnotationWriter[],int,jdk.internal.org.objectweb.asm.ByteVector)>($stack60, $stack59, out);

     label57:
        $stack61 = this;

        $stack53 = $stack61.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute attrs>;

        if $stack53 == null goto label58;

        $stack55 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.Attribute attrs>;

        $stack54 = this.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $b1 = -1;

        $i4 = (int) $b1;

        $b2 = -1;

        $i5 = (int) $b2;

        virtualinvoke $stack55.<jdk.internal.org.objectweb.asm.Attribute: void put(jdk.internal.org.objectweb.asm.ClassWriter,byte[],int,int,int,jdk.internal.org.objectweb.asm.ByteVector)>($stack54, null, 0, $i4, $i5, out);

     label58:
        return;

        nop;
    }

    public static void <clinit>()
    {
        <jdk.internal.org.objectweb.asm.MethodWriter: int NOTHING> = 3;

        <jdk.internal.org.objectweb.asm.MethodWriter: int MAXS> = 2;

        <jdk.internal.org.objectweb.asm.MethodWriter: int INSERTED_FRAMES> = 1;

        <jdk.internal.org.objectweb.asm.MethodWriter: int FRAMES> = 0;

        <jdk.internal.org.objectweb.asm.MethodWriter: int FULL_FRAME> = 255;

        <jdk.internal.org.objectweb.asm.MethodWriter: int APPEND_FRAME> = 252;

        <jdk.internal.org.objectweb.asm.MethodWriter: int SAME_FRAME_EXTENDED> = 251;

        <jdk.internal.org.objectweb.asm.MethodWriter: int CHOP_FRAME> = 248;

        <jdk.internal.org.objectweb.asm.MethodWriter: int SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED> = 247;

        <jdk.internal.org.objectweb.asm.MethodWriter: int RESERVED> = 128;

        <jdk.internal.org.objectweb.asm.MethodWriter: int SAME_LOCALS_1_STACK_ITEM_FRAME> = 64;

        <jdk.internal.org.objectweb.asm.MethodWriter: int SAME_FRAME> = 0;

        <jdk.internal.org.objectweb.asm.MethodWriter: int ACC_CONSTRUCTOR> = 524288;

        return;
    }
}
