public abstract class jdk.internal.org.objectweb.asm.ClassVisitor extends java.lang.Object
{
    protected final int api;
    protected jdk.internal.org.objectweb.asm.ClassVisitor cv;

    public void <init>(int)
    {
        jdk.internal.org.objectweb.asm.ClassVisitor this;
        int api;

        this := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        api := @parameter0: int;

        specialinvoke this.<jdk.internal.org.objectweb.asm.ClassVisitor: void <init>(int,jdk.internal.org.objectweb.asm.ClassVisitor)>(api, null);

        return;

        nop;
    }

    public void <init>(int, jdk.internal.org.objectweb.asm.ClassVisitor)
    {
        jdk.internal.org.objectweb.asm.ClassVisitor this, cv;
        int api;
        java.lang.IllegalArgumentException $stack3;

        this := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        api := @parameter0: int;

        cv := @parameter1: jdk.internal.org.objectweb.asm.ClassVisitor;

        specialinvoke this.<java.lang.Object: void <init>()>();

        if api < 262144 goto label1;

        if api <= 393216 goto label2;

     label1:
        $stack3 = new java.lang.IllegalArgumentException;

        specialinvoke $stack3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $stack3;

     label2:
        this.<jdk.internal.org.objectweb.asm.ClassVisitor: int api> = api;

        this.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv> = cv;

        return;

        nop;
    }

    public void visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        jdk.internal.org.objectweb.asm.ClassVisitor this, $stack7, $stack8;
        java.lang.String[] interfaces;
        int version, access;
        java.lang.String name, signature, superName;

        this := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        version := @parameter0: int;

        access := @parameter1: int;

        name := @parameter2: java.lang.String;

        signature := @parameter3: java.lang.String;

        superName := @parameter4: java.lang.String;

        interfaces := @parameter5: java.lang.String[];

        $stack7 = this.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        if $stack7 == null goto label1;

        $stack8 = this.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        virtualinvoke $stack8.<jdk.internal.org.objectweb.asm.ClassVisitor: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(version, access, name, signature, superName, interfaces);

     label1:
        return;

        nop;
    }

    public void visitSource(java.lang.String, java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ClassVisitor this, $stack3, $stack4;
        java.lang.String source, debug;

        this := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        source := @parameter0: java.lang.String;

        debug := @parameter1: java.lang.String;

        $stack3 = this.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        if $stack3 == null goto label1;

        $stack4 = this.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        virtualinvoke $stack4.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitSource(java.lang.String,java.lang.String)>(source, debug);

     label1:
        return;

        nop;
    }

    public jdk.internal.org.objectweb.asm.ModuleVisitor visitModule(java.lang.String, int, java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ClassVisitor this, $stack5, $stack6;
        java.lang.RuntimeException $stack8;
        jdk.internal.org.objectweb.asm.ModuleVisitor $stack7;
        int $stack4, access;
        java.lang.String name, version;

        this := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        name := @parameter0: java.lang.String;

        access := @parameter1: int;

        version := @parameter2: java.lang.String;

        $stack4 = this.<jdk.internal.org.objectweb.asm.ClassVisitor: int api>;

        if $stack4 >= 393216 goto label1;

        $stack8 = new java.lang.RuntimeException;

        specialinvoke $stack8.<java.lang.RuntimeException: void <init>()>();

        throw $stack8;

     label1:
        $stack5 = this.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        if $stack5 == null goto label2;

        $stack6 = this.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        $stack7 = virtualinvoke $stack6.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ModuleVisitor visitModule(java.lang.String,int,java.lang.String)>(name, access, version);

        return $stack7;

     label2:
        return null;

        nop;
    }

    public void visitOuterClass(java.lang.String, java.lang.String, java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ClassVisitor this, $stack4, $stack5;
        java.lang.String owner, name, desc;

        this := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        owner := @parameter0: java.lang.String;

        name := @parameter1: java.lang.String;

        desc := @parameter2: java.lang.String;

        $stack4 = this.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        if $stack4 == null goto label1;

        $stack5 = this.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        virtualinvoke $stack5.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>(owner, name, desc);

     label1:
        return;

        nop;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.ClassVisitor this, $stack3, $stack4;
        java.lang.String desc;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $stack5;
        boolean visible;

        this := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        desc := @parameter0: java.lang.String;

        visible := @parameter1: boolean;

        $stack3 = this.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        if $stack3 == null goto label1;

        $stack4 = this.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        $stack5 = virtualinvoke $stack4.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>(desc, visible);

        return $stack5;

     label1:
        return null;

        nop;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.ClassVisitor this, $stack6, $stack7;
        jdk.internal.org.objectweb.asm.TypePath typePath;
        java.lang.RuntimeException $stack9;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $stack8;
        int $stack5, typeRef;
        java.lang.String desc;
        boolean visible;

        this := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        typeRef := @parameter0: int;

        typePath := @parameter1: jdk.internal.org.objectweb.asm.TypePath;

        desc := @parameter2: java.lang.String;

        visible := @parameter3: boolean;

        $stack5 = this.<jdk.internal.org.objectweb.asm.ClassVisitor: int api>;

        if $stack5 >= 327680 goto label1;

        $stack9 = new java.lang.RuntimeException;

        specialinvoke $stack9.<java.lang.RuntimeException: void <init>()>();

        throw $stack9;

     label1:
        $stack6 = this.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        if $stack6 == null goto label2;

        $stack7 = this.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        $stack8 = virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>(typeRef, typePath, desc, visible);

        return $stack8;

     label2:
        return null;

        nop;
    }

    public void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)
    {
        jdk.internal.org.objectweb.asm.ClassVisitor this, $stack2, $stack3;
        jdk.internal.org.objectweb.asm.Attribute attr;

        this := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        attr := @parameter0: jdk.internal.org.objectweb.asm.Attribute;

        $stack2 = this.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        if $stack2 == null goto label1;

        $stack3 = this.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        virtualinvoke $stack3.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)>(attr);

     label1:
        return;

        nop;
    }

    public void visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)
    {
        jdk.internal.org.objectweb.asm.ClassVisitor this, $stack5, $stack6;
        int access;
        java.lang.String name, outerName, innerName;

        this := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        name := @parameter0: java.lang.String;

        outerName := @parameter1: java.lang.String;

        innerName := @parameter2: java.lang.String;

        access := @parameter3: int;

        $stack5 = this.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        if $stack5 == null goto label1;

        $stack6 = this.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        virtualinvoke $stack6.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>(name, outerName, innerName, access);

     label1:
        return;

        nop;
    }

    public jdk.internal.org.objectweb.asm.FieldVisitor visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)
    {
        jdk.internal.org.objectweb.asm.ClassVisitor this, $stack6, $stack7;
        jdk.internal.org.objectweb.asm.FieldVisitor $stack8;
        int access;
        java.lang.Object value;
        java.lang.String name, desc, signature;

        this := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        access := @parameter0: int;

        name := @parameter1: java.lang.String;

        desc := @parameter2: java.lang.String;

        signature := @parameter3: java.lang.String;

        value := @parameter4: java.lang.Object;

        $stack6 = this.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        if $stack6 == null goto label1;

        $stack7 = this.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        $stack8 = virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>(access, name, desc, signature, value);

        return $stack8;

     label1:
        return null;

        nop;
    }

    public jdk.internal.org.objectweb.asm.MethodVisitor visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        jdk.internal.org.objectweb.asm.ClassVisitor this, $stack6, $stack7;
        java.lang.String[] exceptions;
        jdk.internal.org.objectweb.asm.MethodVisitor $stack8;
        int access;
        java.lang.String name, desc, signature;

        this := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        access := @parameter0: int;

        name := @parameter1: java.lang.String;

        desc := @parameter2: java.lang.String;

        signature := @parameter3: java.lang.String;

        exceptions := @parameter4: java.lang.String[];

        $stack6 = this.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        if $stack6 == null goto label1;

        $stack7 = this.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        $stack8 = virtualinvoke $stack7.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(access, name, desc, signature, exceptions);

        return $stack8;

     label1:
        return null;

        nop;
    }

    public void visitEnd()
    {
        jdk.internal.org.objectweb.asm.ClassVisitor this, $stack1, $stack2;

        this := @this: jdk.internal.org.objectweb.asm.ClassVisitor;

        $stack1 = this.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        if $stack1 == null goto label1;

        $stack2 = this.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ClassVisitor cv>;

        virtualinvoke $stack2.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitEnd()>();

     label1:
        return;

        nop;
    }
}
