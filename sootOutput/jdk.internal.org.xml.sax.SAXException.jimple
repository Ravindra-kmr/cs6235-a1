public class jdk.internal.org.xml.sax.SAXException extends java.lang.Exception
{
    private static final java.io.ObjectStreamField[] serialPersistentFields;
    static final long serialVersionUID;

    public void <init>()
    {
        jdk.internal.org.xml.sax.SAXException this;

        this := @this: jdk.internal.org.xml.sax.SAXException;

        specialinvoke this.<java.lang.Exception: void <init>()>();

        return;

        nop;
    }

    public void <init>(java.lang.String)
    {
        jdk.internal.org.xml.sax.SAXException this;
        java.lang.String message;

        this := @this: jdk.internal.org.xml.sax.SAXException;

        message := @parameter0: java.lang.String;

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(message);

        return;

        nop;
    }

    public void <init>(java.lang.Exception)
    {
        jdk.internal.org.xml.sax.SAXException this;
        java.lang.Exception e;

        this := @this: jdk.internal.org.xml.sax.SAXException;

        e := @parameter0: java.lang.Exception;

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.Throwable)>(e);

        return;

        nop;
    }

    public void <init>(java.lang.String, java.lang.Exception)
    {
        jdk.internal.org.xml.sax.SAXException this;
        java.lang.String message;
        java.lang.Exception e;

        this := @this: jdk.internal.org.xml.sax.SAXException;

        message := @parameter0: java.lang.String;

        e := @parameter1: java.lang.Exception;

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(message, e);

        return;

        nop;
    }

    public java.lang.String getMessage()
    {
        java.lang.Throwable $stack4, cause;
        jdk.internal.org.xml.sax.SAXException this;
        java.lang.String $stack3, message, $stack5, $stack6;

        this := @this: jdk.internal.org.xml.sax.SAXException;

        $stack3 = specialinvoke this.<java.lang.Exception: java.lang.String getMessage()>();

        message = $stack3;

        $stack4 = specialinvoke this.<java.lang.Exception: java.lang.Throwable getCause()>();

        cause = $stack4;

        if message != null goto label1;

        if cause == null goto label1;

        $stack6 = virtualinvoke cause.<java.lang.Throwable: java.lang.String getMessage()>();

        return $stack6;

     label1:
        $stack5 = message;

        return $stack5;

        nop;
    }

    public java.lang.Exception getException()
    {
        jdk.internal.org.xml.sax.SAXException this;
        java.lang.Exception $stack1;

        this := @this: jdk.internal.org.xml.sax.SAXException;

        $stack1 = virtualinvoke this.<jdk.internal.org.xml.sax.SAXException: java.lang.Exception getExceptionInternal()>();

        return $stack1;

        nop;
    }

    public java.lang.Throwable getCause()
    {
        java.lang.Throwable $stack1;
        jdk.internal.org.xml.sax.SAXException this;

        this := @this: jdk.internal.org.xml.sax.SAXException;

        $stack1 = specialinvoke this.<java.lang.Exception: java.lang.Throwable getCause()>();

        return $stack1;

        nop;
    }

    public java.lang.String toString()
    {
        java.lang.Throwable $stack2, exception;
        java.lang.StringBuilder $stack4, $stack6, $stack7, $stack9;
        jdk.internal.org.xml.sax.SAXException this;
        java.lang.String $stack3, $stack5, $stack8, $stack10;

        this := @this: jdk.internal.org.xml.sax.SAXException;

        $stack2 = specialinvoke this.<java.lang.Exception: java.lang.Throwable getCause()>();

        exception = $stack2;

        if exception == null goto label1;

        $stack4 = new java.lang.StringBuilder;

        specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>();

        $stack5 = specialinvoke this.<java.lang.Exception: java.lang.String toString()>();

        $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $stack8 = virtualinvoke exception.<java.lang.Throwable: java.lang.String toString()>();

        $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack10;

     label1:
        $stack3 = specialinvoke this.<java.lang.Exception: java.lang.String toString()>();

        return $stack3;

        nop;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream$PutField $stack3, fields;
        java.io.ObjectOutputStream out;
        jdk.internal.org.xml.sax.SAXException this;
        java.lang.String $stack4;
        java.lang.Exception $stack5;

        this := @this: jdk.internal.org.xml.sax.SAXException;

        out := @parameter0: java.io.ObjectOutputStream;

        $stack3 = virtualinvoke out.<java.io.ObjectOutputStream: java.io.ObjectOutputStream$PutField putFields()>();

        fields = $stack3;

        $stack4 = "exception";

        $stack5 = virtualinvoke this.<jdk.internal.org.xml.sax.SAXException: java.lang.Exception getExceptionInternal()>();

        virtualinvoke fields.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,java.lang.Object)>($stack4, $stack5);

        virtualinvoke out.<java.io.ObjectOutputStream: void writeFields()>();

        return;

        nop;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.lang.Throwable $stack8, superCause, $stack9;
        java.lang.IllegalStateException $stack10, e;
        java.io.ObjectInputStream in;
        java.lang.Exception exception;
        java.io.InvalidClassException $stack11;
        java.io.ObjectInputStream$GetField $stack6, fields;
        java.lang.Object $stack7;
        jdk.internal.org.xml.sax.SAXException this;

        this := @this: jdk.internal.org.xml.sax.SAXException;

        in := @parameter0: java.io.ObjectInputStream;

        $stack6 = virtualinvoke in.<java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()>();

        fields = $stack6;

        $stack7 = virtualinvoke fields.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>("exception", null);

        exception = (java.lang.Exception) $stack7;

        $stack8 = specialinvoke this.<java.lang.Exception: java.lang.Throwable getCause()>();

        superCause = $stack8;

        if superCause != null goto label4;

        if exception == null goto label4;

     label1:
        $stack9 = specialinvoke this.<java.lang.Exception: java.lang.Throwable initCause(java.lang.Throwable)>(exception);

     label2:
        goto label4;

     label3:
        $stack10 := @caughtexception;

        e = $stack10;

        $stack11 = new java.io.InvalidClassException;

        specialinvoke $stack11.<java.io.InvalidClassException: void <init>(java.lang.String)>("Inconsistent state: two causes");

        throw $stack11;

     label4:
        return;

        nop;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    private java.lang.Exception getExceptionInternal()
    {
        java.lang.Throwable $stack2, cause;
        jdk.internal.org.xml.sax.SAXException this;
        java.lang.Exception $stack4;
        boolean $stack3;

        this := @this: jdk.internal.org.xml.sax.SAXException;

        $stack2 = specialinvoke this.<java.lang.Exception: java.lang.Throwable getCause()>();

        cause = $stack2;

        $stack3 = cause instanceof java.lang.Exception;

        if $stack3 == 0 goto label1;

        $stack4 = (java.lang.Exception) cause;

        return $stack4;

     label1:
        return null;

        nop;
    }

    static void <clinit>()
    {
        byte $stack2;
        java.io.ObjectStreamField[] $stack0;
        java.io.ObjectStreamField $stack1;

        <jdk.internal.org.xml.sax.SAXException: long serialVersionUID> = 583241635256073760L;

        $stack0 = newarray (java.io.ObjectStreamField)[1];

        $stack2 = 0;

        $stack1 = new java.io.ObjectStreamField;

        specialinvoke $stack1.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("exception", class "Ljava/lang/Exception;");

        $stack0[$stack2] = $stack1;

        <jdk.internal.org.xml.sax.SAXException: java.io.ObjectStreamField[] serialPersistentFields> = $stack0;

        return;
    }
}
