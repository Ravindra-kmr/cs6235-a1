final class jdk.internal.loader.AbstractClassLoaderValue$Memoizer extends java.lang.Object implements java.util.function.Supplier
{
    private final java.lang.ClassLoader cl;
    private final jdk.internal.loader.AbstractClassLoaderValue clv;
    private final java.util.function.BiFunction mappingFunction;
    private volatile java.lang.Object v;
    private volatile java.lang.Throwable t;
    private boolean inCall;

    void <init>(java.lang.ClassLoader, jdk.internal.loader.AbstractClassLoaderValue, java.util.function.BiFunction)
    {
        java.util.function.BiFunction mappingFunction;
        jdk.internal.loader.AbstractClassLoaderValue$Memoizer this;
        java.lang.ClassLoader cl;
        jdk.internal.loader.AbstractClassLoaderValue clv;

        this := @this: jdk.internal.loader.AbstractClassLoaderValue$Memoizer;

        cl := @parameter0: java.lang.ClassLoader;

        clv := @parameter1: jdk.internal.loader.AbstractClassLoaderValue;

        mappingFunction := @parameter2: java.util.function.BiFunction;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<jdk.internal.loader.AbstractClassLoaderValue$Memoizer: java.lang.ClassLoader cl> = cl;

        this.<jdk.internal.loader.AbstractClassLoaderValue$Memoizer: jdk.internal.loader.AbstractClassLoaderValue clv> = clv;

        this.<jdk.internal.loader.AbstractClassLoaderValue$Memoizer: java.util.function.BiFunction mappingFunction> = mappingFunction;

        return;

        nop;
    }

    public java.lang.Object get() throws jdk.internal.loader.AbstractClassLoaderValue$Memoizer$RecursiveInvocationException
    {
        java.util.function.BiFunction $stack20;
        jdk.internal.loader.AbstractClassLoaderValue$Memoizer$RecursiveInvocationException $stack23;
        bottom_type v, t, $stack14;
        boolean $stack7, $stack8, $stack17;
        java.lang.ClassLoader $stack19;
        java.lang.Throwable $stack16, $stack24, l6, $stack26, l5, $stack27, x, t#2;
        java.lang.Error $stack11;
        jdk.internal.loader.AbstractClassLoaderValue$Memoizer this, l3, $stack12, $stack25, $stack14#3, $stack14#4;
        java.lang.RuntimeException $stack10;
        java.lang.reflect.UndeclaredThrowableException $stack9;
        java.lang.Object $stack13, $stack15, $stack21, $stack22, v#1;
        jdk.internal.loader.AbstractClassLoaderValue $stack18;

        this := @this: jdk.internal.loader.AbstractClassLoaderValue$Memoizer;

        v#1 = this.<jdk.internal.loader.AbstractClassLoaderValue$Memoizer: java.lang.Object v>;

        if v#1 == null goto label01;

        return v#1;

     label01:
        t#2 = this.<jdk.internal.loader.AbstractClassLoaderValue$Memoizer: java.lang.Throwable t>;

        if t#2 != null goto label14;

        $stack12 = this;

        l3 = $stack12;

        entermonitor $stack12;

     label02:
        $stack13 = this.<jdk.internal.loader.AbstractClassLoaderValue$Memoizer: java.lang.Object v>;

        v#1 = $stack13;

        if $stack13 != null goto label10;

        $stack16 = this.<jdk.internal.loader.AbstractClassLoaderValue$Memoizer: java.lang.Throwable t>;

        t#2 = $stack16;

        if $stack16 != null goto label10;

        $stack17 = this.<jdk.internal.loader.AbstractClassLoaderValue$Memoizer: boolean inCall>;

        if $stack17 == 0 goto label03;

        $stack23 = new jdk.internal.loader.AbstractClassLoaderValue$Memoizer$RecursiveInvocationException;

        specialinvoke $stack23.<jdk.internal.loader.AbstractClassLoaderValue$Memoizer$RecursiveInvocationException: void <init>()>();

        throw $stack23;

     label03:
        this.<jdk.internal.loader.AbstractClassLoaderValue$Memoizer: boolean inCall> = 1;

     label04:
        $stack20 = this.<jdk.internal.loader.AbstractClassLoaderValue$Memoizer: java.util.function.BiFunction mappingFunction>;

        $stack19 = this.<jdk.internal.loader.AbstractClassLoaderValue$Memoizer: java.lang.ClassLoader cl>;

        $stack18 = this.<jdk.internal.loader.AbstractClassLoaderValue$Memoizer: jdk.internal.loader.AbstractClassLoaderValue clv>;

        $stack21 = interfaceinvoke $stack20.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>($stack19, $stack18);

        $stack22 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($stack21);

        v#1 = $stack22;

        this.<jdk.internal.loader.AbstractClassLoaderValue$Memoizer: java.lang.Object v> = $stack22;

     label05:
        this.<jdk.internal.loader.AbstractClassLoaderValue$Memoizer: boolean inCall> = 0;

        goto label10;

     label06:
        $stack27 := @caughtexception;

        x = $stack27;

        t#2 = x;

        this.<jdk.internal.loader.AbstractClassLoaderValue$Memoizer: java.lang.Throwable t> = x;

     label07:
        this.<jdk.internal.loader.AbstractClassLoaderValue$Memoizer: boolean inCall> = 0;

        goto label10;

     label08:
        $stack26 := @caughtexception;

        l5 = $stack26;

     label09:
        this.<jdk.internal.loader.AbstractClassLoaderValue$Memoizer: boolean inCall> = 0;

        throw l5;

     label10:
        $stack14#3 = l3;

        $stack14#4 = $stack14#3;

        exitmonitor $stack14#4;

     label11:
        goto label14;

     label12:
        $stack24 := @caughtexception;

        l6 = $stack24;

        $stack25 = l3;

        exitmonitor $stack25;

     label13:
        throw l6;

     label14:
        $stack15 = v#1;

        if $stack15 == null goto label15;

        return v#1;

     label15:
        $stack7 = t#2 instanceof java.lang.Error;

        if $stack7 == 0 goto label16;

        $stack11 = (java.lang.Error) t#2;

        throw $stack11;

     label16:
        $stack8 = t#2 instanceof java.lang.RuntimeException;

        if $stack8 == 0 goto label17;

        $stack10 = (java.lang.RuntimeException) t#2;

        throw $stack10;

     label17:
        $stack9 = new java.lang.reflect.UndeclaredThrowableException;

        specialinvoke $stack9.<java.lang.reflect.UndeclaredThrowableException: void <init>(java.lang.Throwable)>(t#2);

        throw $stack9;

        nop;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label02 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }
}
