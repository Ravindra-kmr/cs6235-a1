public abstract class jdk.internal.util.xml.impl.Parser extends java.lang.Object
{
    public static final java.lang.String FAULT;
    protected static final int BUFFSIZE_READER;
    protected static final int BUFFSIZE_PARSER;
    public static final char EOS;
    private jdk.internal.util.xml.impl.Pair mNoNS;
    private jdk.internal.util.xml.impl.Pair mXml;
    private java.util.Map mEnt;
    private java.util.Map mPEnt;
    protected boolean mIsSAlone;
    protected boolean mIsSAloneSet;
    protected boolean mIsNSAware;
    protected int mPh;
    protected static final int PH_BEFORE_DOC;
    protected static final int PH_DOC_START;
    protected static final int PH_MISC_DTD;
    protected static final int PH_DTD;
    protected static final int PH_DTD_MISC;
    protected static final int PH_DOCELM;
    protected static final int PH_DOCELM_MISC;
    protected static final int PH_AFTER_DOC;
    protected int mEvt;
    protected static final int EV_NULL;
    protected static final int EV_ELM;
    protected static final int EV_ELMS;
    protected static final int EV_ELME;
    protected static final int EV_TEXT;
    protected static final int EV_WSPC;
    protected static final int EV_PI;
    protected static final int EV_CDAT;
    protected static final int EV_COMM;
    protected static final int EV_DTD;
    protected static final int EV_ENT;
    private char mESt;
    protected char[] mBuff;
    protected int mBuffIdx;
    protected jdk.internal.util.xml.impl.Pair mPref;
    protected jdk.internal.util.xml.impl.Pair mElm;
    protected jdk.internal.util.xml.impl.Pair mAttL;
    protected jdk.internal.util.xml.impl.Input mDoc;
    protected jdk.internal.util.xml.impl.Input mInp;
    private char[] mChars;
    private int mChLen;
    private int mChIdx;
    protected jdk.internal.util.xml.impl.Attrs mAttrs;
    private java.lang.String[] mItems;
    private char mAttrIdx;
    private java.lang.String mUnent;
    private jdk.internal.util.xml.impl.Pair mDltd;
    private static final char[] NONS;
    private static final char[] XML;
    private static final char[] XMLNS;
    private static final byte[] asctyp;
    private static final byte[] nmttyp;

    protected void <init>()
    {
        jdk.internal.util.xml.impl.Pair $stack3, $stack4, $stack5, $stack6, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack15, $stack16;
        byte $b0;
        int $i0;
        jdk.internal.util.xml.impl.Parser this;
        jdk.internal.util.xml.impl.Attrs $stack2, $u0;
        char[] $stack1, $stack7, $stack14;

        this := @this: jdk.internal.util.xml.impl.Parser;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $b0 = -1;

        $i0 = (int) $b0;

        this.<jdk.internal.util.xml.impl.Parser: int mPh> = $i0;

        $stack1 = newarray (char)[128];

        this.<jdk.internal.util.xml.impl.Parser: char[] mBuff> = $stack1;

        $u0 = new jdk.internal.util.xml.impl.Attrs;

        $stack2 = $u0;

        specialinvoke $u0.<jdk.internal.util.xml.impl.Attrs: void <init>()>();

        this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Attrs mAttrs> = $stack2;

        $stack3 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

        $stack4 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair pair(jdk.internal.util.xml.impl.Pair)>($stack3);

        this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref> = $stack4;

        $stack5 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

        $stack5.<jdk.internal.util.xml.impl.Pair: java.lang.String name> = "";

        $stack6 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

        $stack6.<jdk.internal.util.xml.impl.Pair: java.lang.String value> = "";

        $stack8 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

        $stack7 = <jdk.internal.util.xml.impl.Parser: char[] NONS>;

        $stack8.<jdk.internal.util.xml.impl.Pair: char[] chars> = $stack7;

        $stack9 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

        this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mNoNS> = $stack9;

        $stack10 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

        $stack11 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair pair(jdk.internal.util.xml.impl.Pair)>($stack10);

        this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref> = $stack11;

        $stack12 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

        $stack12.<jdk.internal.util.xml.impl.Pair: java.lang.String name> = "xml";

        $stack13 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

        $stack13.<jdk.internal.util.xml.impl.Pair: java.lang.String value> = "http://www.w3.org/XML/1998/namespace";

        $stack15 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

        $stack14 = <jdk.internal.util.xml.impl.Parser: char[] XML>;

        $stack15.<jdk.internal.util.xml.impl.Pair: char[] chars> = $stack14;

        $stack16 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

        this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mXml> = $stack16;

        return;

        nop;
    }

    protected void init()
    {
        jdk.internal.util.xml.impl.Parser this;
        char[] $stack6;
        java.util.HashMap $stack2, $stack3;
        jdk.internal.util.xml.impl.Input $stack4, $stack5;
        jdk.internal.util.xml.impl.Pair $stack1;

        this := @this: jdk.internal.util.xml.impl.Parser;

        this.<jdk.internal.util.xml.impl.Parser: java.lang.String mUnent> = null;

        this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm> = null;

        $stack1 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mXml>;

        this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref> = $stack1;

        this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mAttL> = null;

        $stack2 = new java.util.HashMap;

        specialinvoke $stack2.<java.util.HashMap: void <init>()>();

        this.<jdk.internal.util.xml.impl.Parser: java.util.Map mPEnt> = $stack2;

        $stack3 = new java.util.HashMap;

        specialinvoke $stack3.<java.util.HashMap: void <init>()>();

        this.<jdk.internal.util.xml.impl.Parser: java.util.Map mEnt> = $stack3;

        $stack4 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mDoc> = $stack4;

        $stack5 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack6 = $stack5.<jdk.internal.util.xml.impl.Input: char[] chars>;

        this.<jdk.internal.util.xml.impl.Parser: char[] mChars> = $stack6;

        this.<jdk.internal.util.xml.impl.Parser: int mPh> = 0;

        return;

        nop;
    }

    protected void cleanup()
    {
        java.io.Reader $stack9, $stack19;
        jdk.internal.util.xml.impl.Pair $stack2, $stack3, $stack4, $stack5, $stack21, $stack22, $stack25, $stack26, $stack28, $stack29, $stack30, $stack31, $stack33, $stack34, $stack35, $stack36, $stack37, $stack38, $stack39, $stack41, $stack42, $stack43;
        jdk.internal.util.xml.impl.Parser this, $stack20, $stack23, $stack24, $stack27, $stack32, $stack40, $stack45, $stack46, $stack47, $stack11#1, $stack11#2, $stack13#5, $stack13#6, $stack15#9, $stack15#10, $stack17#13, $stack17#14;
        java.io.IOException $stack48;
        jdk.internal.util.xml.impl.Input $stack6, $stack7, $stack8, $stack18;

        this := @this: jdk.internal.util.xml.impl.Parser;

     label01:
        $stack32 = this;

        $stack2 = $stack32.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mAttL>;

        if $stack2 == null goto label05;

     label02:
        $stack40 = this;

        $stack28 = $stack40.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mAttL>;

        $stack29 = $stack28.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list>;

        if $stack29 == null goto label04;

        $stack33 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mAttL>;

        $stack34 = $stack33.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list>;

        $stack35 = $stack34.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list>;

        if $stack35 == null goto label03;

        $stack41 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mAttL>;

        $stack42 = $stack41.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list>;

        $stack43 = $stack42.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list>;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair del(jdk.internal.util.xml.impl.Pair)>($stack43);

     label03:
        $stack45 = this;

        $stack38 = $stack45.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mAttL>;

        $stack47 = this;

        $stack46 = this;

        $stack36 = $stack46.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mAttL>;

        $stack37 = $stack36.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list>;

        $stack39 = virtualinvoke $stack47.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair del(jdk.internal.util.xml.impl.Pair)>($stack37);

        $stack38.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list> = $stack39;

        goto label02;

     label04:
        $stack30 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mAttL>;

        $stack31 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair del(jdk.internal.util.xml.impl.Pair)>($stack30);

        this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mAttL> = $stack31;

        goto label01;

     label05:
        $stack27 = this;

        $stack3 = $stack27.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm>;

        if $stack3 == null goto label06;

        $stack25 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm>;

        $stack26 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair del(jdk.internal.util.xml.impl.Pair)>($stack25);

        this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm> = $stack26;

        goto label05;

     label06:
        $stack23 = this;

        $stack5 = $stack23.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

        $stack24 = this;

        $stack4 = $stack24.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mXml>;

        if $stack5 == $stack4 goto label07;

        $stack21 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

        $stack22 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair del(jdk.internal.util.xml.impl.Pair)>($stack21);

        this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref> = $stack22;

        goto label06;

     label07:
        $stack20 = this;

        $stack6 = $stack20.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        if $stack6 == null goto label08;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void pop()>();

        goto label07;

     label08:
        $stack7 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mDoc>;

        if $stack7 == null goto label12;

        $stack8 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mDoc>;

        $stack9 = $stack8.<jdk.internal.util.xml.impl.Input: java.io.Reader src>;

        if $stack9 == null goto label12;

     label09:
        $stack18 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mDoc>;

        $stack19 = $stack18.<jdk.internal.util.xml.impl.Input: java.io.Reader src>;

        virtualinvoke $stack19.<java.io.Reader: void close()>();

     label10:
        goto label12;

     label11:
        $stack48 := @caughtexception;

     label12:
        $stack11#1 = this;

        $stack11#2 = $stack11#1;

        $stack11#2.<jdk.internal.util.xml.impl.Parser: java.util.Map mPEnt> = null;

        $stack13#5 = this;

        $stack13#6 = $stack13#5;

        $stack13#6.<jdk.internal.util.xml.impl.Parser: java.util.Map mEnt> = null;

        $stack15#9 = this;

        $stack15#10 = $stack15#9;

        $stack15#10.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mDoc> = null;

        $stack17#13 = this;

        $stack17#14 = $stack17#13;

        $stack17#14.<jdk.internal.util.xml.impl.Parser: int mPh> = 6;

        return;

        catch java.io.IOException from label09 to label10 with label11;
    }

    protected int step() throws java.lang.Exception
    {
        byte $stack112, st#1;
        jdk.internal.util.xml.impl.Pair $stack24, $stack26, $stack55, $stack56, $stack58, $stack60, $stack61, $stack63, $stack64, $stack65, $stack66, $stack67, $stack69, $stack70, $stack71, $stack72, att, $stack75, $stack82, $stack92, $stack93, $stack95, $stack99, $stack100, $stack108, i#7, $stack86#8;
        java.lang.String $stack12, $stack13, $stack14, $stack62, $stack84#9;
        jdk.internal.util.xml.impl.Parser this, $stack11, $stack17, $stack19, $stack22, $stack32, $stack34, $stack40, $stack46, $stack47, $stack48, $stack49, $stack52, $stack81, $stack85, $stack88, $stack90, $stack94, $stack96, $stack97, $stack98, $stack102, $stack104, $stack105, $stack106, $stack107;
        char[] chars, $stack36, $stack50, $stack51, $stack59, $stack68, $stack83, $stack111;
        boolean $stack25, $stack57, $stack74;
        int $stack6, $stack7, $stack8, $stack9, $stack27, $stack28, $stack29, $stack33, $stack39, $stack41, $stack43, $stack109, $stack110, i#4, $stack101#6, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        char $stack15, $stack18, $stack20, $stack23, $stack30, $stack37, $stack38, $stack44, $stack54, $stack76, $stack79, $stack10#2, ch#3, ch#5;

        this := @this: jdk.internal.util.xml.impl.Parser;

        this.<jdk.internal.util.xml.impl.Parser: int mEvt> = 0;

        st#1 = 0;

     label01:
        $stack11 = this;

        $stack6 = $stack11.<jdk.internal.util.xml.impl.Parser: int mEvt>;

        if $stack6 != 0 goto label47;

        $stack9 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack8 = this.<jdk.internal.util.xml.impl.Parser: int mChLen>;

        if $stack9 >= $stack8 goto label02;

        $stack111 = this.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack109 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack110 = $stack109 + 1;

        this.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack110;

        $stack10#2 = $stack111[$stack109];

        goto label03;

     label02:
        $stack10#2 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

     label03:
        ch#3 = $stack10#2;

        $stack112 = st#1;

        tableswitch($stack112)
        {
            case 0: goto label04;
            case 1: goto label31;
            case 2: goto label37;
            default: goto label45;
        };

     label04:
        $i0 = (int) ch#3;

        if $i0 == 60 goto label05;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        $i1 = (int) -1;

        this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx> = $i1;

        st#1 = 1;

        goto label46;

     label05:
        $stack23 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        $i2 = (int) $stack23;

        lookupswitch($i2)
        {
            case 33: goto label14;
            case 47: goto label06;
            case 63: goto label18;
            default: goto label19;
        };

     label06:
        this.<jdk.internal.util.xml.impl.Parser: int mEvt> = 3;

        $stack24 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm>;

        if $stack24 != null goto label07;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label07:
        $stack46 = this;

        $i3 = (int) -1;

        $stack46.<jdk.internal.util.xml.impl.Parser: int mBuffIdx> = $i3;

        $stack48 = this;

        $stack47 = this;

        $stack25 = $stack47.<jdk.internal.util.xml.impl.Parser: boolean mIsNSAware>;

        virtualinvoke $stack48.<jdk.internal.util.xml.impl.Parser: void bname(boolean)>($stack25);

        $stack49 = this;

        $stack26 = $stack49.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm>;

        $stack50 = $stack26.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        chars = $stack50;

        $stack51 = chars;

        $stack29 = lengthof $stack51;

        $stack52 = this;

        $stack27 = $stack52.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack28 = $stack27 + 1;

        if $stack29 != $stack28 goto label11;

        i#4 = 1;

     label08:
        $stack41 = i#4;

        $stack40 = this;

        $stack33 = $stack40.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        if $stack41 > $stack33 goto label10;

        $stack38 = chars[i#4];

        $stack36 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack37 = $stack36[i#4];

        $i4 = (int) $stack38;

        $i5 = (int) $stack37;

        if $i4 == $i5 goto label09;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label09:
        $stack43 = i#4;

        $stack39 = $stack43 + 1;

        $stack44 = (char) $stack39;

        i#4 = $stack44;

        goto label08;

     label10:
        goto label12;

     label11:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label12:
        $stack34 = this;

        $stack30 = virtualinvoke $stack34.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        $i6 = (int) $stack30;

        if $i6 == 62 goto label13;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label13:
        $stack32 = this;

        virtualinvoke $stack32.<jdk.internal.util.xml.impl.Parser: char getch()>();

        goto label30;

     label14:
        $stack54 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        ch#5 = $stack54;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        $i7 = (int) ch#5;

        lookupswitch($i7)
        {
            case 45: goto label15;
            case 91: goto label16;
            default: goto label17;
        };

     label15:
        this.<jdk.internal.util.xml.impl.Parser: int mEvt> = 8;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void comm()>();

        goto label30;

     label16:
        this.<jdk.internal.util.xml.impl.Parser: int mEvt> = 7;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void cdat()>();

        goto label30;

     label17:
        this.<jdk.internal.util.xml.impl.Parser: int mEvt> = 9;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void dtd()>();

        goto label30;

     label18:
        this.<jdk.internal.util.xml.impl.Parser: int mEvt> = 6;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void pi()>();

        goto label30;

     label19:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        $stack55 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm>;

        $stack56 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair pair(jdk.internal.util.xml.impl.Pair)>($stack55);

        this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm> = $stack56;

        $stack58 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm>;

        $stack57 = this.<jdk.internal.util.xml.impl.Parser: boolean mIsNSAware>;

        $stack59 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char[] qname(boolean)>($stack57);

        $stack58.<jdk.internal.util.xml.impl.Pair: char[] chars> = $stack59;

        $stack61 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm>;

        $stack60 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm>;

        $stack62 = virtualinvoke $stack60.<jdk.internal.util.xml.impl.Pair: java.lang.String local()>();

        $stack61.<jdk.internal.util.xml.impl.Pair: java.lang.String name> = $stack62;

        $stack65 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm>;

        $stack63 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm>;

        $stack64 = $stack63.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair next>;

        if $stack64 == null goto label20;

        $stack99 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm>;

        $stack100 = $stack99.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair next>;

        $stack101#6 = $stack100.<jdk.internal.util.xml.impl.Pair: int id>;

        goto label21;

     label20:
        $stack101#6 = 0;

     label21:
        $stack65.<jdk.internal.util.xml.impl.Pair: int id> = $stack101#6;

        $stack102 = this;

        $stack66 = $stack102.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm>;

        $stack66.<jdk.internal.util.xml.impl.Pair: int num> = 0;

        $stack106 = this;

        $stack104 = this;

        $stack69 = $stack104.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mAttL>;

        $stack105 = this;

        $stack67 = $stack105.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm>;

        $stack68 = $stack67.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        $stack70 = virtualinvoke $stack106.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair find(jdk.internal.util.xml.impl.Pair,char[])>($stack69, $stack68);

        i#7 = $stack70;

        $stack107 = this;

        $stack71 = $stack107.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm>;

        $stack108 = i#7;

        if $stack108 == null goto label22;

        $stack86#8 = i#7.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list>;

        goto label23;

     label22:
        $stack86#8 = null;

     label23:
        $stack71.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list> = $stack86#8;

        $stack88 = this;

        $stack88.<jdk.internal.util.xml.impl.Parser: char mAttrIdx> = 0;

        $stack90 = this;

        $stack72 = virtualinvoke $stack90.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair pair(jdk.internal.util.xml.impl.Pair)>(null);

        att = $stack72;

        $stack92 = att;

        $stack92.<jdk.internal.util.xml.impl.Pair: int num> = 0;

        $stack94 = this;

        $stack93 = att;

        virtualinvoke $stack94.<jdk.internal.util.xml.impl.Parser: void attr(jdk.internal.util.xml.impl.Pair)>($stack93);

        $stack96 = this;

        $stack95 = att;

        virtualinvoke $stack96.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair del(jdk.internal.util.xml.impl.Pair)>($stack95);

        $stack97 = this;

        $stack75 = $stack97.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm>;

        $stack98 = this;

        $stack74 = $stack98.<jdk.internal.util.xml.impl.Parser: boolean mIsNSAware>;

        if $stack74 == 0 goto label24;

        $stack82 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm>;

        $stack83 = $stack82.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        $stack84#9 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: java.lang.String rslv(char[])>($stack83);

        goto label25;

     label24:
        $stack84#9 = null;

     label25:
        $stack75.<jdk.internal.util.xml.impl.Pair: java.lang.String value> = $stack84#9;

        $stack85 = this;

        $stack76 = virtualinvoke $stack85.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        $i8 = (int) $stack76;

        lookupswitch($i8)
        {
            case 47: goto label27;
            case 62: goto label26;
            default: goto label29;
        };

     label26:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        this.<jdk.internal.util.xml.impl.Parser: int mEvt> = 2;

        goto label30;

     label27:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        $stack79 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        $i9 = (int) $stack79;

        if $i9 == 62 goto label28;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label28:
        $stack81 = this;

        $stack81.<jdk.internal.util.xml.impl.Parser: int mEvt> = 1;

        goto label30;

     label29:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label30:
        goto label46;

     label31:
        $i10 = (int) ch#3;

        lookupswitch($i10)
        {
            case 9: goto label32;
            case 10: goto label32;
            case 13: goto label33;
            case 32: goto label32;
            case 60: goto label35;
            default: goto label36;
        };

     label32:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(ch#3);

        goto label46;

     label33:
        $stack20 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        $i11 = (int) $stack20;

        if $i11 == 10 goto label34;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

     label34:
        $stack22 = this;

        virtualinvoke $stack22.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(10);

        goto label46;

     label35:
        this.<jdk.internal.util.xml.impl.Parser: int mEvt> = 5;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bflash_ws()>();

        goto label46;

     label36:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        st#1 = 2;

        goto label46;

     label37:
        $i12 = (int) ch#3;

        lookupswitch($i12)
        {
            case 13: goto label41;
            case 38: goto label38;
            case 60: goto label40;
            case 65535: goto label43;
            default: goto label44;
        };

     label38:
        $stack12 = this.<jdk.internal.util.xml.impl.Parser: java.lang.String mUnent>;

        if $stack12 != null goto label39;

        $stack14 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: java.lang.String ent(char)>(120);

        this.<jdk.internal.util.xml.impl.Parser: java.lang.String mUnent> = $stack14;

        if $stack14 == null goto label46;

        this.<jdk.internal.util.xml.impl.Parser: int mEvt> = 4;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void setch(char)>(38);

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bflash()>();

        goto label46;

     label39:
        this.<jdk.internal.util.xml.impl.Parser: int mEvt> = 10;

        $stack13 = this.<jdk.internal.util.xml.impl.Parser: java.lang.String mUnent>;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void skippedEnt(java.lang.String)>($stack13);

        this.<jdk.internal.util.xml.impl.Parser: java.lang.String mUnent> = null;

        goto label46;

     label40:
        this.<jdk.internal.util.xml.impl.Parser: int mEvt> = 4;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bflash()>();

        goto label46;

     label41:
        $stack15 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        $i13 = (int) $stack15;

        if $i13 == 10 goto label42;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

     label42:
        $stack17 = this;

        virtualinvoke $stack17.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(10);

        goto label46;

     label43:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label44:
        $stack19 = this;

        $stack18 = ch#3;

        virtualinvoke $stack19.<jdk.internal.util.xml.impl.Parser: void bappend(char)>($stack18);

        goto label46;

     label45:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label46:
        goto label01;

     label47:
        $stack7 = this.<jdk.internal.util.xml.impl.Parser: int mEvt>;

        return $stack7;
    }

    private void dtd() throws java.lang.Exception
    {
        byte st#3, $stack13#4, $stack13#5;
        boolean $stack10, $stack19, $stack38;
        java.io.Reader $stack20, $stack25;
        jdk.internal.util.xml.impl.Pair $stack34, psid#2, $stack22#14, $stack22#15;
        int $i0, $i1, $i2, $i3;
        java.lang.String $stack8, $stack9, $stack14, $stack15, $stack28, $stack30, $stack35, $stack36, $stack39, name#1;
        jdk.internal.util.xml.impl.Parser this, $stack42, $stack23#12, $stack23#13;
        char $stack11, ch, $stack12, $stack32, $stack33, $stack37;
        java.io.IOException $stack44, $stack45;
        jdk.internal.org.xml.sax.InputSource $stack16, is, $stack26#7, $stack26#8;
        jdk.internal.util.xml.impl.Input $stack27, $stack29, $stack31, $u0;
        java.io.InputStream $stack24, $stack21#9, $stack21#10;

        this := @this: jdk.internal.util.xml.impl.Parser;

        name#1 = null;

        psid#2 = null;

        $stack8 = "DOCTYPE";

        $stack9 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: java.lang.String name(boolean)>(0);

        $stack10 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>($stack9);

        if $stack10 == 1 goto label01;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label01:
        $stack42 = this;

        $stack42.<jdk.internal.util.xml.impl.Parser: int mPh> = 2;

        st#3 = 0;

     label02:
        $stack13#4 = st#3;

        $stack13#5 = $stack13#4;

        if $stack13#5 < 0 goto label30;

        $stack11 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        ch = $stack11;

        tableswitch(st#3)
        {
            case 0: goto label03;
            case 1: goto label04;
            case 2: goto label09;
            case 3: goto label14;
            default: goto label29;
        };

     label03:
        $stack37 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char chtyp(char)>(ch);

        $i0 = (int) $stack37;

        if $i0 == 32 goto label02;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        $stack38 = this.<jdk.internal.util.xml.impl.Parser: boolean mIsNSAware>;

        $stack39 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: java.lang.String name(boolean)>($stack38);

        name#1 = $stack39;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        st#3 = 1;

        goto label02;

     label04:
        $stack33 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char chtyp(char)>(ch);

        $i1 = (int) $stack33;

        lookupswitch($i1)
        {
            case 62: goto label07;
            case 65: goto label05;
            case 91: goto label06;
            default: goto label08;
        };

     label05:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        $stack34 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair pubsys(char)>(32);

        psid#2 = $stack34;

        st#3 = 2;

        $stack36 = psid#2.<jdk.internal.util.xml.impl.Pair: java.lang.String name>;

        $stack35 = psid#2.<jdk.internal.util.xml.impl.Pair: java.lang.String value>;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void docType(java.lang.String,java.lang.String,java.lang.String)>(name#1, $stack36, $stack35);

        goto label02;

     label06:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        st#3 = 2;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void docType(java.lang.String,java.lang.String,java.lang.String)>(name#1, null, null);

        goto label02;

     label07:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        st#3 = 3;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void docType(java.lang.String,java.lang.String,java.lang.String)>(name#1, null, null);

        goto label02;

     label08:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label02;

     label09:
        $stack32 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char chtyp(char)>(ch);

        $i2 = (int) $stack32;

        lookupswitch($i2)
        {
            case 32: goto label12;
            case 62: goto label11;
            case 91: goto label10;
            default: goto label13;
        };

     label10:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void dtdsub()>();

        st#3 = 3;

        goto label02;

     label11:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        st#3 = 3;

        goto label02;

     label12:
        goto label02;

     label13:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label02;

     label14:
        $stack12 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char chtyp(char)>(ch);

        $i3 = (int) $stack12;

        lookupswitch($i3)
        {
            case 32: goto label27;
            case 62: goto label15;
            default: goto label28;
        };

     label15:
        if psid#2 == null goto label26;

        $stack15 = psid#2.<jdk.internal.util.xml.impl.Pair: java.lang.String name>;

        $stack14 = psid#2.<jdk.internal.util.xml.impl.Pair: java.lang.String value>;

        $stack16 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.org.xml.sax.InputSource resolveEnt(java.lang.String,java.lang.String,java.lang.String)>(name#1, $stack15, $stack14);

        is = $stack16;

        if is == null goto label24;

        $stack19 = this.<jdk.internal.util.xml.impl.Parser: boolean mIsSAlone>;

        if $stack19 != 0 goto label16;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void setch(char)>(93);

        $u0 = new jdk.internal.util.xml.impl.Input;

        $stack27 = $u0;

        specialinvoke $u0.<jdk.internal.util.xml.impl.Input: void <init>(int)>(512);

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void push(jdk.internal.util.xml.impl.Input)>($stack27);

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void setinp(jdk.internal.org.xml.sax.InputSource)>(is);

        $stack29 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack28 = psid#2.<jdk.internal.util.xml.impl.Pair: java.lang.String name>;

        $stack29.<jdk.internal.util.xml.impl.Input: java.lang.String pubid> = $stack28;

        $stack31 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack30 = psid#2.<jdk.internal.util.xml.impl.Pair: java.lang.String value>;

        $stack31.<jdk.internal.util.xml.impl.Input: java.lang.String sysid> = $stack30;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void dtdsub()>();

        goto label25;

     label16:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void skippedEnt(java.lang.String)>("[dtd]");

        $stack20 = virtualinvoke is.<jdk.internal.org.xml.sax.InputSource: java.io.Reader getCharacterStream()>();

        if $stack20 == null goto label20;

     label17:
        $stack25 = virtualinvoke is.<jdk.internal.org.xml.sax.InputSource: java.io.Reader getCharacterStream()>();

        virtualinvoke $stack25.<java.io.Reader: void close()>();

     label18:
        goto label20;

     label19:
        $stack45 := @caughtexception;

     label20:
        $stack26#7 = is;

        $stack26#8 = $stack26#7;

        $stack21#9 = virtualinvoke $stack26#8.<jdk.internal.org.xml.sax.InputSource: java.io.InputStream getByteStream()>();

        $stack21#10 = $stack21#9;

        if $stack21#10 == null goto label25;

     label21:
        $stack24 = virtualinvoke is.<jdk.internal.org.xml.sax.InputSource: java.io.InputStream getByteStream()>();

        virtualinvoke $stack24.<java.io.InputStream: void close()>();

     label22:
        goto label25;

     label23:
        $stack44 := @caughtexception;

        goto label25;

     label24:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void skippedEnt(java.lang.String)>("[dtd]");

     label25:
        $stack23#12 = this;

        $stack23#13 = $stack23#12;

        $stack22#14 = psid#2;

        $stack22#15 = $stack22#14;

        virtualinvoke $stack23#13.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair del(jdk.internal.util.xml.impl.Pair)>($stack22#15);

     label26:
        st#3 = -1;

        goto label02;

     label27:
        goto label02;

     label28:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label02;

     label29:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label02;

     label30:
        return;

        catch java.io.IOException from label17 to label18 with label19;
        catch java.io.IOException from label21 to label22 with label23;
    }

    private void dtdsub() throws java.lang.Exception
    {
        byte $stack7, st#1, $stack4#2, $stack4#3, $stack11#7, $stack11#8;
        bottom_type st, ch, $stack4, $stack11;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        jdk.internal.util.xml.impl.Parser this;
        char $stack3, $stack5, $stack6, $stack8, $stack9, $stack10, ch#4, ch#5, ch#6;

        this := @this: jdk.internal.util.xml.impl.Parser;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void startInternalSub()>();

        st#1 = 0;

     label01:
        $stack4#2 = st#1;

        $stack4#3 = $stack4#2;

        if $stack4#3 < 0 goto label25;

        $stack3 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        ch#4 = $stack3;

        lookupswitch(st#1)
        {
            case 0: goto label02;
            case 1: goto label20;
            default: goto label24;
        };

     label02:
        $stack5 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char chtyp(char)>(ch#4);

        $i0 = (int) $stack5;

        lookupswitch($i0)
        {
            case 32: goto label16;
            case 37: goto label14;
            case 60: goto label03;
            case 90: goto label17;
            case 93: goto label15;
            default: goto label19;
        };

     label03:
        $stack8 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        ch#5 = $stack8;

        $i1 = (int) ch#5;

        lookupswitch($i1)
        {
            case 33: goto label05;
            case 63: goto label04;
            default: goto label13;
        };

     label04:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void pi()>();

        goto label01;

     label05:
        $stack9 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        ch#6 = $stack9;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        $i2 = (int) ch#6;

        if $i2 != 45 goto label06;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void comm()>();

        goto label01;

     label06:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bntok()>();

        $stack10 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char bkeyword()>();

        $i3 = (int) $stack10;

        lookupswitch($i3)
        {
            case 97: goto label08;
            case 101: goto label09;
            case 110: goto label07;
            case 111: goto label10;
            default: goto label11;
        };

     label07:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void dtdent()>();

        goto label12;

     label08:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void dtdattl()>();

        goto label12;

     label09:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void dtdelm()>();

        goto label12;

     label10:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void dtdnot()>();

        goto label12;

     label11:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label12:
        $stack11#7 = 1;

        $stack11#8 = $stack11#7;

        st#1 = $stack11#8;

        goto label01;

     label13:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label14:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void pent(char)>(32);

        goto label01;

     label15:
        st#1 = -1;

        goto label01;

     label16:
        goto label01;

     label17:
        $stack6 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        $i4 = (int) $stack6;

        if $i4 == 93 goto label18;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label18:
        $stack7 = -1;

        st#1 = $stack7;

        goto label01;

     label19:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label20:
        $i5 = (int) ch#4;

        lookupswitch($i5)
        {
            case 9: goto label22;
            case 10: goto label22;
            case 13: goto label22;
            case 32: goto label22;
            case 62: goto label21;
            default: goto label23;
        };

     label21:
        st#1 = 0;

        goto label01;

     label22:
        goto label01;

     label23:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label24:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label25:
        return;

        nop;
    }

    private void dtdent() throws java.lang.Exception
    {
        byte st#5, $stack15#6, $stack15#7;
        java.util.Map $stack23, $stack28, $stack32, $stack37, $stack49, $stack61, $stack69, $stack76, $stack87;
        jdk.internal.util.xml.impl.Pair $stack9, $stack58, ids#10, $stack63#14, $stack63#15, ids#24, $stack20#28, $stack20#29;
        java.lang.String $stack11, $stack12, $stack17, $stack18, $stack19, $stack26, $stack27, $stack42, $stack44, $stack46, $stack55, $stack67, $stack68, $stack80, $stack82, $stack84, $stack90, str#1;
        jdk.internal.util.xml.impl.Parser this, $stack31, $stack64#12, $stack64#13, $stack21#26, $stack21#27;
        char[] $stack36, $stack75, val#18, val#20;
        jdk.internal.util.xml.impl.Input $stack25, $stack40, $stack41, $stack43, $stack45, $stack47, $stack66, $stack78, $stack79, $stack81, $stack83, $stack85, inp#11, inp#19, inp#21, inp#25, $u0, $u1, $u2, $u3;
        boolean $stack13, $stack24, $stack38, $stack62, $stack77;
        int $stack34, $stack35, $stack71, $stack72, $stack73, $stack74, $i0, $i1, $i2, $i3, $i4, $i5;
        char $stack7, $stack8, $stack10, $stack48, $stack51, $stack52, $stack53, $stack56, $stack57, $stack59, $stack86, ch#8, ch#9;
        java.lang.Object $stack33;

        this := @this: jdk.internal.util.xml.impl.Parser;

        str#1 = null;

        st#5 = 0;

     label01:
        $stack15#6 = st#5;

        $stack15#7 = $stack15#6;

        if $stack15#7 < 0 goto label24;

        $stack7 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        ch#8 = $stack7;

        lookupswitch(st#5)
        {
            case 0: goto label02;
            case 1: goto label13;
            default: goto label23;
        };

     label02:
        $stack51 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char chtyp(char)>(ch#8);

        $i0 = (int) $stack51;

        lookupswitch($i0)
        {
            case 32: goto label03;
            case 37: goto label04;
            default: goto label12;
        };

     label03:
        goto label01;

     label04:
        $stack52 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        ch#9 = $stack52;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        $stack53 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char chtyp(char)>(ch#9);

        $i1 = (int) $stack53;

        if $i1 != 32 goto label11;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        $stack55 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: java.lang.String name(boolean)>(0);

        str#1 = $stack55;

        $stack56 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        $stack57 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char chtyp(char)>($stack56);

        $i2 = (int) $stack57;

        lookupswitch($i2)
        {
            case 34: goto label08;
            case 39: goto label08;
            case 65: goto label05;
            default: goto label10;
        };

     label05:
        $stack58 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair pubsys(char)>(32);

        ids#10 = $stack58;

        $stack59 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        $i3 = (int) $stack59;

        if $i3 != 62 goto label06;

        $stack61 = this.<jdk.internal.util.xml.impl.Parser: java.util.Map mPEnt>;

        $stack62 = interfaceinvoke $stack61.<java.util.Map: boolean containsKey(java.lang.Object)>(str#1);

        if $stack62 != 0 goto label07;

        $u0 = new jdk.internal.util.xml.impl.Input;

        $stack66 = $u0;

        specialinvoke $u0.<jdk.internal.util.xml.impl.Input: void <init>()>();

        inp#11 = $stack66;

        $stack67 = ids#10.<jdk.internal.util.xml.impl.Pair: java.lang.String name>;

        inp#11.<jdk.internal.util.xml.impl.Input: java.lang.String pubid> = $stack67;

        $stack68 = ids#10.<jdk.internal.util.xml.impl.Pair: java.lang.String value>;

        inp#11.<jdk.internal.util.xml.impl.Input: java.lang.String sysid> = $stack68;

        $stack69 = this.<jdk.internal.util.xml.impl.Parser: java.util.Map mPEnt>;

        interfaceinvoke $stack69.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(str#1, inp#11);

        goto label07;

     label06:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label07:
        $stack64#12 = this;

        $stack64#13 = $stack64#12;

        $stack63#14 = ids#10;

        $stack63#15 = $stack63#14;

        virtualinvoke $stack64#13.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair del(jdk.internal.util.xml.impl.Pair)>($stack63#15);

        st#5 = -1;

        goto label01;

     label08:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bqstr(char)>(100);

        $stack71 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack72 = $stack71 + 1;

        val#18 = newarray (char)[$stack72];

        $stack75 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack73 = lengthof val#18;

        $stack74 = $stack73 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack75, 1, val#18, 1, $stack74);

        val#18[0] = 32;

        $stack76 = this.<jdk.internal.util.xml.impl.Parser: java.util.Map mPEnt>;

        $stack77 = interfaceinvoke $stack76.<java.util.Map: boolean containsKey(java.lang.Object)>(str#1);

        if $stack77 != 0 goto label09;

        $u1 = new jdk.internal.util.xml.impl.Input;

        $stack78 = $u1;

        specialinvoke $u1.<jdk.internal.util.xml.impl.Input: void <init>(char[])>(val#18);

        inp#19 = $stack78;

        $stack79 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack80 = $stack79.<jdk.internal.util.xml.impl.Input: java.lang.String pubid>;

        inp#19.<jdk.internal.util.xml.impl.Input: java.lang.String pubid> = $stack80;

        $stack81 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack82 = $stack81.<jdk.internal.util.xml.impl.Input: java.lang.String sysid>;

        inp#19.<jdk.internal.util.xml.impl.Input: java.lang.String sysid> = $stack82;

        $stack83 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack84 = $stack83.<jdk.internal.util.xml.impl.Input: java.lang.String xmlenc>;

        inp#19.<jdk.internal.util.xml.impl.Input: java.lang.String xmlenc> = $stack84;

        $stack85 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack86 = $stack85.<jdk.internal.util.xml.impl.Input: char xmlver>;

        inp#19.<jdk.internal.util.xml.impl.Input: char xmlver> = $stack86;

        $stack87 = this.<jdk.internal.util.xml.impl.Parser: java.util.Map mPEnt>;

        interfaceinvoke $stack87.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(str#1, inp#19);

     label09:
        st#5 = -1;

        goto label01;

     label10:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label11:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void pent(char)>(32);

        goto label01;

     label12:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        $stack90 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: java.lang.String name(boolean)>(0);

        str#1 = $stack90;

        st#5 = 1;

        goto label01;

     label13:
        $stack8 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char chtyp(char)>(ch#8);

        $i4 = (int) $stack8;

        lookupswitch($i4)
        {
            case 32: goto label21;
            case 34: goto label14;
            case 39: goto label14;
            case 65: goto label16;
            default: goto label22;
        };

     label14:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bqstr(char)>(100);

        $stack32 = this.<jdk.internal.util.xml.impl.Parser: java.util.Map mEnt>;

        $stack33 = interfaceinvoke $stack32.<java.util.Map: java.lang.Object get(java.lang.Object)>(str#1);

        if $stack33 != null goto label15;

        $stack34 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        val#20 = newarray (char)[$stack34];

        $stack36 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack35 = lengthof val#20;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack36, 1, val#20, 0, $stack35);

        $stack37 = this.<jdk.internal.util.xml.impl.Parser: java.util.Map mEnt>;

        $stack38 = interfaceinvoke $stack37.<java.util.Map: boolean containsKey(java.lang.Object)>(str#1);

        if $stack38 != 0 goto label15;

        $u2 = new jdk.internal.util.xml.impl.Input;

        $stack40 = $u2;

        specialinvoke $u2.<jdk.internal.util.xml.impl.Input: void <init>(char[])>(val#20);

        inp#21 = $stack40;

        $stack41 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack42 = $stack41.<jdk.internal.util.xml.impl.Input: java.lang.String pubid>;

        inp#21.<jdk.internal.util.xml.impl.Input: java.lang.String pubid> = $stack42;

        $stack43 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack44 = $stack43.<jdk.internal.util.xml.impl.Input: java.lang.String sysid>;

        inp#21.<jdk.internal.util.xml.impl.Input: java.lang.String sysid> = $stack44;

        $stack45 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack46 = $stack45.<jdk.internal.util.xml.impl.Input: java.lang.String xmlenc>;

        inp#21.<jdk.internal.util.xml.impl.Input: java.lang.String xmlenc> = $stack46;

        $stack47 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack48 = $stack47.<jdk.internal.util.xml.impl.Input: char xmlver>;

        inp#21.<jdk.internal.util.xml.impl.Input: char xmlver> = $stack48;

        $stack49 = this.<jdk.internal.util.xml.impl.Parser: java.util.Map mEnt>;

        interfaceinvoke $stack49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(str#1, inp#21);

     label15:
        st#5 = -1;

        goto label01;

     label16:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        $stack9 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair pubsys(char)>(32);

        ids#24 = $stack9;

        $stack10 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        $i5 = (int) $stack10;

        lookupswitch($i5)
        {
            case 62: goto label17;
            case 78: goto label18;
            default: goto label19;
        };

     label17:
        $stack23 = this.<jdk.internal.util.xml.impl.Parser: java.util.Map mEnt>;

        $stack24 = interfaceinvoke $stack23.<java.util.Map: boolean containsKey(java.lang.Object)>(str#1);

        if $stack24 != 0 goto label20;

        $u3 = new jdk.internal.util.xml.impl.Input;

        $stack25 = $u3;

        specialinvoke $u3.<jdk.internal.util.xml.impl.Input: void <init>()>();

        inp#25 = $stack25;

        $stack26 = ids#24.<jdk.internal.util.xml.impl.Pair: java.lang.String name>;

        inp#25.<jdk.internal.util.xml.impl.Input: java.lang.String pubid> = $stack26;

        $stack27 = ids#24.<jdk.internal.util.xml.impl.Pair: java.lang.String value>;

        inp#25.<jdk.internal.util.xml.impl.Input: java.lang.String sysid> = $stack27;

        $stack28 = this.<jdk.internal.util.xml.impl.Parser: java.util.Map mEnt>;

        interfaceinvoke $stack28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(str#1, inp#25);

        goto label20;

     label18:
        $stack11 = "NDATA";

        $stack12 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: java.lang.String name(boolean)>(0);

        $stack13 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>($stack12);

        if $stack13 != 1 goto label19;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        $stack17 = ids#24.<jdk.internal.util.xml.impl.Pair: java.lang.String name>;

        $stack18 = ids#24.<jdk.internal.util.xml.impl.Pair: java.lang.String value>;

        $stack19 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: java.lang.String name(boolean)>(0);

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void unparsedEntDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(str#1, $stack17, $stack18, $stack19);

        goto label20;

     label19:
        $stack31 = this;

        virtualinvoke $stack31.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label20:
        $stack21#26 = this;

        $stack21#27 = $stack21#26;

        $stack20#28 = ids#24;

        $stack20#29 = $stack20#28;

        virtualinvoke $stack21#27.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair del(jdk.internal.util.xml.impl.Pair)>($stack20#29);

        st#5 = -1;

        goto label01;

     label21:
        goto label01;

     label22:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label23:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label24:
        return;
    }

    private void dtdelm() throws java.lang.Exception
    {
        jdk.internal.util.xml.impl.Parser this, $stack6;
        char $stack2, $stack5, ch, $stack7;
        int $i0;
        java.lang.String $stack4;
        boolean $stack3;

        this := @this: jdk.internal.util.xml.impl.Parser;

        $stack2 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        $stack3 = this.<jdk.internal.util.xml.impl.Parser: boolean mIsNSAware>;

        $stack4 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: java.lang.String name(boolean)>($stack3);

     label1:
        $stack6 = this;

        $stack5 = virtualinvoke $stack6.<jdk.internal.util.xml.impl.Parser: char getch()>();

        ch = $stack5;

        $stack7 = ch;

        $i0 = (int) $stack7;

        lookupswitch($i0)
        {
            case 62: goto label2;
            case 65535: goto label3;
            default: goto label4;
        };

     label2:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        return;

     label3:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label4:
        goto label1;

        nop;
    }

    private void dtdattl() throws java.lang.Exception
    {
        jdk.internal.util.xml.impl.Pair $stack12, $stack13, $stack14, $stack15, elm#2;
        byte st#3, $stack8#4, $stack8#5;
        int $i0, $i1, $i2;
        boolean $stack10;
        jdk.internal.util.xml.impl.Parser this;
        char $stack5, ch, $stack6, $stack7, $stack9;
        char[] $stack11, elmqn#6;

        this := @this: jdk.internal.util.xml.impl.Parser;

        elm#2 = null;

        st#3 = 0;

     label01:
        $stack8#4 = st#3;

        $stack8#5 = $stack8#4;

        if $stack8#5 < 0 goto label14;

        $stack5 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        ch = $stack5;

        lookupswitch(st#3)
        {
            case 0: goto label02;
            case 1: goto label08;
            default: goto label13;
        };

     label02:
        $stack9 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char chtyp(char)>(ch);

        $i0 = (int) $stack9;

        lookupswitch($i0)
        {
            case 32: goto label05;
            case 37: goto label06;
            case 58: goto label03;
            case 65: goto label03;
            case 88: goto label03;
            case 95: goto label03;
            case 97: goto label03;
            default: goto label07;
        };

     label03:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        $stack10 = this.<jdk.internal.util.xml.impl.Parser: boolean mIsNSAware>;

        $stack11 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char[] qname(boolean)>($stack10);

        elmqn#6 = $stack11;

        $stack12 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mAttL>;

        $stack13 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair find(jdk.internal.util.xml.impl.Pair,char[])>($stack12, elmqn#6);

        elm#2 = $stack13;

        if elm#2 != null goto label04;

        $stack14 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mAttL>;

        $stack15 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair pair(jdk.internal.util.xml.impl.Pair)>($stack14);

        elm#2 = $stack15;

        elm#2.<jdk.internal.util.xml.impl.Pair: char[] chars> = elmqn#6;

        this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mAttL> = elm#2;

     label04:
        st#3 = 1;

        goto label01;

     label05:
        goto label01;

     label06:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void pent(char)>(32);

        goto label01;

     label07:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label08:
        $stack6 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char chtyp(char)>(ch);

        $i1 = (int) $stack6;

        lookupswitch($i1)
        {
            case 32: goto label10;
            case 37: goto label11;
            case 58: goto label09;
            case 65: goto label09;
            case 88: goto label09;
            case 95: goto label09;
            case 97: goto label09;
            default: goto label12;
        };

     label09:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void dtdatt(jdk.internal.util.xml.impl.Pair)>(elm#2);

        $stack7 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        $i2 = (int) $stack7;

        if $i2 != 62 goto label01;

        return;

     label10:
        goto label01;

     label11:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void pent(char)>(32);

        goto label01;

     label12:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label13:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label14:
        return;
    }

    private void dtdatt(jdk.internal.util.xml.impl.Pair) throws java.lang.Exception
    {
        byte st#3, $stack51#4, $stack51#5;
        jdk.internal.util.xml.impl.Pair $stack7, $stack14, $stack15, $stack21, $stack26, $stack30, $stack37, $stack44, elm, $stack76, $stack77, $stack78, $stack80, $stack81, att#2, att#8;
        jdk.internal.util.xml.impl.Parser this, $stack70, $stack82, $stack63#10, $stack63#11, $stack58#14, $stack58#15;
        char[] $stack8, $stack13, $stack16, $stack19, $stack20, $stack22, $stack25, $stack27, $stack29, $stack31, $stack35, $stack36, $stack38, $stack43, $stack45, $stack50, $stack75, attqn#7;
        boolean $stack74;
        int $stack9, $stack10, $stack11, $stack12, $stack17, $stack18, $stack23, $stack24, $stack28, $stack32, $stack33, $stack34, $stack39, $stack40, $stack41, $stack42, $stack46, $stack47, $stack48, $stack49, $stack56, $stack61, $stack67, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        char $stack6, $stack52, $stack53, $stack60, $stack65, $stack66, $stack68, $stack73, ch#6;

        this := @this: jdk.internal.util.xml.impl.Parser;

        elm := @parameter0: jdk.internal.util.xml.impl.Pair;

        att#2 = null;

        st#3 = 0;

     label01:
        $stack51#4 = st#3;

        $stack51#5 = $stack51#4;

        if $stack51#5 < 0 goto label52;

        $stack6 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        ch#6 = $stack6;

        tableswitch(st#3)
        {
            case 0: goto label02;
            case 1: goto label09;
            case 2: goto label18;
            case 3: goto label27;
            case 4: goto label36;
            case 5: goto label48;
            default: goto label51;
        };

     label02:
        $stack73 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char chtyp(char)>(ch#6);

        $i0 = (int) $stack73;

        lookupswitch($i0)
        {
            case 32: goto label07;
            case 37: goto label06;
            case 58: goto label03;
            case 65: goto label03;
            case 88: goto label03;
            case 95: goto label03;
            case 97: goto label03;
            default: goto label08;
        };

     label03:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        $stack74 = this.<jdk.internal.util.xml.impl.Parser: boolean mIsNSAware>;

        $stack75 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char[] qname(boolean)>($stack74);

        attqn#7 = $stack75;

        $stack76 = elm.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list>;

        $stack77 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair find(jdk.internal.util.xml.impl.Pair,char[])>($stack76, attqn#7);

        att#8 = $stack77;

        if att#8 != null goto label04;

        $stack80 = elm.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list>;

        $stack81 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair pair(jdk.internal.util.xml.impl.Pair)>($stack80);

        att#2 = $stack81;

        att#2.<jdk.internal.util.xml.impl.Pair: char[] chars> = attqn#7;

        elm.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list> = att#2;

        goto label05;

     label04:
        $stack78 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair pair(jdk.internal.util.xml.impl.Pair)>(null);

        att#2 = $stack78;

        att#2.<jdk.internal.util.xml.impl.Pair: char[] chars> = attqn#7;

        att#2.<jdk.internal.util.xml.impl.Pair: int id> = 99;

     label05:
        $stack82 = this;

        virtualinvoke $stack82.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        st#3 = 1;

        goto label01;

     label06:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void pent(char)>(32);

        goto label01;

     label07:
        goto label01;

     label08:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label09:
        $stack65 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char chtyp(char)>(ch#6);

        $i1 = (int) $stack65;

        lookupswitch($i1)
        {
            case 32: goto label12;
            case 37: goto label11;
            case 40: goto label10;
            default: goto label13;
        };

     label10:
        att#2.<jdk.internal.util.xml.impl.Pair: int id> = 117;

        st#3 = 2;

        goto label01;

     label11:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void pent(char)>(32);

        goto label01;

     label12:
        goto label01;

     label13:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bntok()>();

        $stack66 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char bkeyword()>();

        $i2 = (int) $stack66;

        att#2.<jdk.internal.util.xml.impl.Pair: int id> = $i2;

        $stack67 = att#2.<jdk.internal.util.xml.impl.Pair: int id>;

        lookupswitch($stack67)
        {
            case 78: goto label16;
            case 82: goto label16;
            case 84: goto label16;
            case 99: goto label16;
            case 105: goto label16;
            case 110: goto label16;
            case 111: goto label14;
            case 114: goto label16;
            case 116: goto label16;
            default: goto label17;
        };

     label14:
        $stack68 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        $i3 = (int) $stack68;

        if $i3 == 40 goto label15;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label15:
        $stack70 = this;

        virtualinvoke $stack70.<jdk.internal.util.xml.impl.Parser: char getch()>();

        st#3 = 2;

        goto label01;

     label16:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        st#3 = 4;

        goto label01;

     label17:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label18:
        $stack60 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char chtyp(char)>(ch#6);

        $i4 = (int) $stack60;

        lookupswitch($i4)
        {
            case 32: goto label25;
            case 37: goto label24;
            case 45: goto label19;
            case 46: goto label19;
            case 58: goto label19;
            case 65: goto label19;
            case 88: goto label19;
            case 95: goto label19;
            case 97: goto label19;
            case 100: goto label19;
            default: goto label26;
        };

     label19:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        $stack61 = att#2.<jdk.internal.util.xml.impl.Pair: int id>;

        lookupswitch($stack61)
        {
            case 111: goto label21;
            case 117: goto label20;
            default: goto label22;
        };

     label20:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bntok()>();

        goto label23;

     label21:
        $i5 = (int) -1;

        this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx> = $i5;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bname(boolean)>(0);

        goto label23;

     label22:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label23:
        $stack63#10 = this;

        $stack63#11 = $stack63#10;

        virtualinvoke $stack63#11.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        st#3 = 3;

        goto label01;

     label24:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void pent(char)>(32);

        goto label01;

     label25:
        goto label01;

     label26:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label27:
        $i6 = (int) ch#6;

        lookupswitch($i6)
        {
            case 37: goto label34;
            case 41: goto label28;
            case 124: goto label29;
            default: goto label35;
        };

     label28:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        st#3 = 4;

        goto label01;

     label29:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        $stack56 = att#2.<jdk.internal.util.xml.impl.Pair: int id>;

        lookupswitch($stack56)
        {
            case 111: goto label31;
            case 117: goto label30;
            default: goto label32;
        };

     label30:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bntok()>();

        goto label33;

     label31:
        $i7 = (int) -1;

        this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx> = $i7;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bname(boolean)>(0);

        goto label33;

     label32:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label33:
        $stack58#14 = this;

        $stack58#15 = $stack58#14;

        virtualinvoke $stack58#15.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        goto label01;

     label34:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void pent(char)>(32);

        goto label01;

     label35:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label36:
        $i8 = (int) ch#6;

        lookupswitch($i8)
        {
            case 9: goto label45;
            case 10: goto label45;
            case 13: goto label45;
            case 32: goto label45;
            case 34: goto label44;
            case 35: goto label37;
            case 37: goto label46;
            case 39: goto label44;
            default: goto label47;
        };

     label37:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bntok()>();

        $stack52 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char bkeyword()>();

        $i9 = (int) $stack52;

        lookupswitch($i9)
        {
            case 70: goto label38;
            case 73: goto label42;
            case 81: goto label42;
            default: goto label43;
        };

     label38:
        $stack53 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        $i10 = (int) $stack53;

        lookupswitch($i10)
        {
            case 34: goto label39;
            case 39: goto label39;
            case 65535: goto label40;
            default: goto label41;
        };

     label39:
        st#3 = 5;

        goto label01;

     label40:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label41:
        st#3 = -1;

        goto label01;

     label42:
        st#3 = -1;

        goto label01;

     label43:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label44:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        st#3 = 5;

        goto label01;

     label45:
        goto label01;

     label46:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void pent(char)>(32);

        goto label01;

     label47:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        st#3 = -1;

        goto label01;

     label48:
        $i11 = (int) ch#6;

        lookupswitch($i11)
        {
            case 34: goto label49;
            case 39: goto label49;
            default: goto label50;
        };

     label49:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bqstr(char)>(100);

        $stack7 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair pair(jdk.internal.util.xml.impl.Pair)>(null);

        att#2.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list> = $stack7;

        $stack14 = att#2.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list>;

        $stack8 = att#2.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        $stack10 = lengthof $stack8;

        $stack9 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack11 = $stack10 + $stack9;

        $stack12 = $stack11 + 3;

        $stack13 = newarray (char)[$stack12];

        $stack14.<jdk.internal.util.xml.impl.Pair: char[] chars> = $stack13;

        $stack20 = att#2.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        $stack15 = att#2.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list>;

        $stack19 = $stack15.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        $stack16 = att#2.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        $stack17 = lengthof $stack16;

        $stack18 = $stack17 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack20, 1, $stack19, 0, $stack18);

        $stack21 = att#2.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list>;

        $stack25 = $stack21.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        $stack22 = att#2.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        $stack23 = lengthof $stack22;

        $stack24 = $stack23 - 1;

        $stack25[$stack24] = 61;

        $stack26 = att#2.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list>;

        $stack29 = $stack26.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        $stack27 = att#2.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        $stack28 = lengthof $stack27;

        $stack29[$stack28] = ch#6;

        $stack36 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack30 = att#2.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list>;

        $stack35 = $stack30.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        $stack31 = att#2.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        $stack32 = lengthof $stack31;

        $stack34 = $stack32 + 1;

        $stack33 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack36, 1, $stack35, $stack34, $stack33);

        $stack37 = att#2.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list>;

        $stack43 = $stack37.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        $stack38 = att#2.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        $stack40 = lengthof $stack38;

        $stack39 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack41 = $stack40 + $stack39;

        $stack42 = $stack41 + 1;

        $stack43[$stack42] = ch#6;

        $stack44 = att#2.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list>;

        $stack50 = $stack44.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        $stack45 = att#2.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        $stack47 = lengthof $stack45;

        $stack46 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack48 = $stack47 + $stack46;

        $stack49 = $stack48 + 2;

        $stack50[$stack49] = 32;

        st#3 = -1;

        goto label01;

     label50:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label51:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label52:
        return;
    }

    private void dtdnot() throws java.lang.Exception
    {
        jdk.internal.util.xml.impl.Parser this;
        char $stack3, $stack5;
        jdk.internal.util.xml.impl.Pair $stack6, ids, $stack9;
        java.lang.String $stack4, name, $stack7, $stack8;

        this := @this: jdk.internal.util.xml.impl.Parser;

        $stack3 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        $stack4 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: java.lang.String name(boolean)>(0);

        name = $stack4;

        $stack5 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        $stack6 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair pubsys(char)>(78);

        ids = $stack6;

        $stack8 = ids.<jdk.internal.util.xml.impl.Pair: java.lang.String name>;

        $stack7 = ids.<jdk.internal.util.xml.impl.Pair: java.lang.String value>;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void notDecl(java.lang.String,java.lang.String,java.lang.String)>(name, $stack8, $stack7);

        $stack9 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair del(jdk.internal.util.xml.impl.Pair)>(ids);

        return;

        nop;
    }

    private void attr(jdk.internal.util.xml.impl.Pair) throws java.lang.Exception
    {
        byte $stack62, $stack66, $stack70, $stack81, $stack88, $stack95, $stack99, $stack135, $stack57#22, $stack57#23;
        int $stack13, $stack16, $stack19, $stack20, $stack23, $stack26, $stack29, $stack31, $stack34, $stack36, $stack38, $stack40, $stack41, $stack42, $stack46, $stack51, $stack58, $stack102, $stack103, $stack108, $stack109, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        jdk.internal.util.xml.impl.Attrs $stack105, $stack106;
        bottom_type inp, def, act, $stack44, $stack45, $stack50, $stack53, $stack54, $stack55, $stack56, $stack57, $stack60, $stack124, $stack125;
        jdk.internal.util.xml.impl.Pair att, $stack18, $stack48, $stack69, $stack72, $stack76, $stack86, $stack91, $stack96, $stack98, $stack100, $stack110, $stack116, $stack118, $stack119, $stack120, $stack122, $stack128, $stack129, $stack130, $stack131, def#2, act#3, $stack124#4, $stack124#5, $stack125#6, $stack125#7, act#10, $stack56#18, $stack56#19;
        java.lang.String $stack9, $stack10, $stack15, $stack32, $stack64, $stack68, inp#8, def#9, $stack60#11, $stack50#26, $u1;
        jdk.internal.util.xml.impl.Parser this, $stack61, $stack65, $stack73, $stack74, $stack77, $stack78, $stack80, $stack83, $stack87, $stack90, $stack92, $stack93, $stack94, $stack97, $stack101, $stack112, $stack113, $stack114, $stack115, $stack126, $stack127, $stack132, $stack133, $stack134, $stack53#12, $stack53#13;
        char[] $stack8, $stack17, $stack49, $stack117, $stack123, $stack44#20, $stack44#21;
        jdk.internal.util.xml.impl.Input $stack111, $stack121, inp#1, $u0;
        boolean $stack7, $stack21, $stack33, $stack71, $stack75, $stack79, $stack84, $stack54#16, $stack54#17;
        java.lang.String[] $stack30, $stack35, $stack37, $stack39, $stack43, $stack47, $stack52, $stack59, $stack107;
        char $stack6, $stack11, $stack12, $stack14, $stack22, $stack24, $stack25, $stack27, $stack28, idx, $stack63, $stack67, $stack82, $stack85, $stack89, $stack104, $stack55#14, $stack55#15, $stack45#24, $stack45#25;

        this := @this: jdk.internal.util.xml.impl.Parser;

        att := @parameter0: jdk.internal.util.xml.impl.Pair;

        $stack6 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        $i0 = (int) $stack6;

        lookupswitch($i0)
        {
            case 47: goto label01;
            case 62: goto label01;
            case 65535: goto label07;
            default: goto label08;
        };

     label01:
        $stack102 = att.<jdk.internal.util.xml.impl.Pair: int num>;

        $stack103 = $stack102 & 2;

        if $stack103 != 0 goto label06;

        $stack108 = att.<jdk.internal.util.xml.impl.Pair: int num>;

        $stack109 = $stack108 | 2;

        att.<jdk.internal.util.xml.impl.Pair: int num> = $stack109;

        inp#1 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack110 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm>;

        def#2 = $stack110.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list>;

     label02:
        $stack120 = def#2;

        if $stack120 == null goto label05;

        $stack116 = def#2.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list>;

        if $stack116 != null goto label03;

        goto label04;

     label03:
        $stack118 = att.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair next>;

        $stack117 = def#2.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        $stack119 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair find(jdk.internal.util.xml.impl.Pair,char[])>($stack118, $stack117);

        act#3 = $stack119;

        if act#3 != null goto label04;

        $u0 = new jdk.internal.util.xml.impl.Input;

        $stack121 = $u0;

        $stack122 = def#2.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list>;

        $stack123 = $stack122.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        specialinvoke $u0.<jdk.internal.util.xml.impl.Input: void <init>(char[])>($stack123);

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void push(jdk.internal.util.xml.impl.Input)>($stack121);

     label04:
        $stack124#4 = def#2;

        $stack124#5 = $stack124#4;

        $stack125#6 = $stack124#5.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair next>;

        $stack125#7 = $stack125#6;

        def#2 = $stack125#7;

        goto label02;

     label05:
        $stack111 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        if $stack111 == inp#1 goto label06;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void attr(jdk.internal.util.xml.impl.Pair)>(att);

        return;

     label06:
        $stack112 = this;

        $stack105 = $stack112.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Attrs mAttrs>;

        $stack113 = this;

        $stack104 = $stack113.<jdk.internal.util.xml.impl.Parser: char mAttrIdx>;

        virtualinvoke $stack105.<jdk.internal.util.xml.impl.Attrs: void setLength(char)>($stack104);

        $stack115 = this;

        $stack114 = this;

        $stack106 = $stack114.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Attrs mAttrs>;

        $stack107 = $stack106.<jdk.internal.util.xml.impl.Attrs: java.lang.String[] mItems>;

        $stack115.<jdk.internal.util.xml.impl.Parser: java.lang.String[] mItems> = $stack107;

        return;

     label07:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label08:
        $stack128 = att;

        $stack127 = this;

        $stack126 = this;

        $stack7 = $stack126.<jdk.internal.util.xml.impl.Parser: boolean mIsNSAware>;

        $stack8 = virtualinvoke $stack127.<jdk.internal.util.xml.impl.Parser: char[] qname(boolean)>($stack7);

        $stack128.<jdk.internal.util.xml.impl.Pair: char[] chars> = $stack8;

        $stack130 = att;

        $stack129 = att;

        $stack9 = virtualinvoke $stack129.<jdk.internal.util.xml.impl.Pair: java.lang.String local()>();

        $stack130.<jdk.internal.util.xml.impl.Pair: java.lang.String name> = $stack9;

        $stack132 = this;

        $stack131 = att;

        $stack10 = virtualinvoke $stack132.<jdk.internal.util.xml.impl.Parser: java.lang.String atype(jdk.internal.util.xml.impl.Pair)>($stack131);

        inp#8 = $stack10;

        $stack133 = this;

        $stack11 = virtualinvoke $stack133.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        $stack134 = this;

        $stack12 = virtualinvoke $stack134.<jdk.internal.util.xml.impl.Parser: char getch()>();

        $stack135 = 61;

        $i1 = (int) $stack12;

        if $i1 == $stack135 goto label09;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label09:
        $stack92 = this;

        $stack91 = att;

        $stack13 = $stack91.<jdk.internal.util.xml.impl.Pair: int id>;

        $stack14 = (char) $stack13;

        virtualinvoke $stack92.<jdk.internal.util.xml.impl.Parser: void bqstr(char)>($stack14);

        $u1 = new java.lang.String;

        $stack15 = $u1;

        $stack93 = this;

        $stack17 = $stack93.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack95 = 1;

        $stack94 = this;

        $stack16 = $stack94.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        specialinvoke $u1.<java.lang.String: void <init>(char[],int,int)>($stack17, $stack95, $stack16);

        def#9 = $stack15;

        $stack97 = this;

        $stack96 = att;

        $stack18 = virtualinvoke $stack97.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair pair(jdk.internal.util.xml.impl.Pair)>($stack96);

        act#10 = $stack18;

        $stack100 = act#10;

        $stack98 = att;

        $stack19 = $stack98.<jdk.internal.util.xml.impl.Pair: int num>;

        $stack99 = -2;

        $i2 = (int) $stack99;

        $stack20 = $stack19 & $i2;

        $stack100.<jdk.internal.util.xml.impl.Pair: int num> = $stack20;

        $stack101 = this;

        $stack21 = $stack101.<jdk.internal.util.xml.impl.Parser: boolean mIsNSAware>;

        if $stack21 == 0 goto label10;

        $stack71 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: boolean isdecl(jdk.internal.util.xml.impl.Pair,java.lang.String)>(att, def#9);

        if $stack71 != 0 goto label19;

     label10:
        $stack74 = this;

        $stack22 = $stack74.<jdk.internal.util.xml.impl.Parser: char mAttrIdx>;

        $stack75 = 1;

        $i3 = (int) $stack22;

        $stack23 = $i3 + $stack75;

        $stack24 = (char) $stack23;

        $stack74.<jdk.internal.util.xml.impl.Parser: char mAttrIdx> = $stack24;

        $stack77 = this;

        $stack76 = act#10;

        virtualinvoke $stack77.<jdk.internal.util.xml.impl.Parser: void attr(jdk.internal.util.xml.impl.Pair)>($stack76);

        $stack78 = this;

        $stack25 = $stack78.<jdk.internal.util.xml.impl.Parser: char mAttrIdx>;

        $stack79 = 1;

        $i4 = (int) $stack25;

        $stack26 = $i4 - $stack79;

        $stack27 = (char) $stack26;

        $stack78.<jdk.internal.util.xml.impl.Parser: char mAttrIdx> = $stack27;

        $stack80 = this;

        $stack28 = $stack80.<jdk.internal.util.xml.impl.Parser: char mAttrIdx>;

        $stack81 = 3;

        $i5 = (int) $stack28;

        $stack29 = $i5 << $stack81;

        $stack82 = (char) $stack29;

        idx = $stack82;

        $stack83 = this;

        $stack30 = $stack83.<jdk.internal.util.xml.impl.Parser: java.lang.String[] mItems>;

        $stack85 = idx;

        $stack84 = 1;

        $i6 = (int) $stack85;

        $stack31 = $i6 + $stack84;

        $stack86 = att;

        $stack32 = virtualinvoke $stack86.<jdk.internal.util.xml.impl.Pair: java.lang.String qname()>();

        $stack30[$stack31] = $stack32;

        $stack87 = this;

        $stack35 = $stack87.<jdk.internal.util.xml.impl.Parser: java.lang.String[] mItems>;

        $stack89 = idx;

        $stack88 = 2;

        $i7 = (int) $stack89;

        $stack34 = $i7 + $stack88;

        $stack90 = this;

        $stack33 = $stack90.<jdk.internal.util.xml.impl.Parser: boolean mIsNSAware>;

        if $stack33 == 0 goto label11;

        $stack60#11 = att.<jdk.internal.util.xml.impl.Pair: java.lang.String name>;

        goto label12;

     label11:
        $stack60#11 = "";

     label12:
        $stack35[$stack34] = $stack60#11;

        $stack61 = this;

        $stack37 = $stack61.<jdk.internal.util.xml.impl.Parser: java.lang.String[] mItems>;

        $stack63 = idx;

        $stack62 = 3;

        $i8 = (int) $stack63;

        $stack36 = $i8 + $stack62;

        $stack64 = def#9;

        $stack37[$stack36] = $stack64;

        $stack65 = this;

        $stack39 = $stack65.<jdk.internal.util.xml.impl.Parser: java.lang.String[] mItems>;

        $stack67 = idx;

        $stack66 = 4;

        $i9 = (int) $stack67;

        $stack38 = $i9 + $stack66;

        $stack68 = inp#8;

        $stack39[$stack38] = $stack68;

        $stack69 = att;

        $stack40 = $stack69.<jdk.internal.util.xml.impl.Pair: int num>;

        $stack70 = 3;

        $stack41 = $stack40 & $stack70;

        lookupswitch($stack41)
        {
            case 0: goto label13;
            case 1: goto label14;
            default: goto label15;
        };

     label13:
        $stack52 = this.<jdk.internal.util.xml.impl.Parser: java.lang.String[] mItems>;

        $i10 = (int) idx;

        $stack51 = $i10 + 5;

        $stack52[$stack51] = null;

        goto label16;

     label14:
        $stack43 = this.<jdk.internal.util.xml.impl.Parser: java.lang.String[] mItems>;

        $i11 = (int) idx;

        $stack42 = $i11 + 5;

        $stack43[$stack42] = "d";

        goto label16;

     label15:
        $stack59 = this.<jdk.internal.util.xml.impl.Parser: java.lang.String[] mItems>;

        $i12 = (int) idx;

        $stack58 = $i12 + 5;

        $stack59[$stack58] = "D";

     label16:
        $stack53#12 = this;

        $stack53#13 = $stack53#12;

        $stack47 = $stack53#13.<jdk.internal.util.xml.impl.Parser: java.lang.String[] mItems>;

        $stack55#14 = idx;

        $stack55#15 = $stack55#14;

        $stack54#16 = 0;

        $stack54#17 = $stack54#16;

        $i13 = (int) $stack55#15;

        $stack46 = $i13 + $stack54#17;

        $stack56#18 = att;

        $stack56#19 = $stack56#18;

        $stack44#20 = $stack56#19.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        $stack44#21 = $stack44#20;

        $stack57#22 = 0;

        $stack57#23 = $stack57#22;

        $stack45#24 = $stack44#21[$stack57#23];

        $stack45#25 = $stack45#24;

        if $stack45#25 == 0 goto label17;

        $stack49 = att.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        $stack50#26 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: java.lang.String rslv(char[])>($stack49);

        goto label18;

     label17:
        $stack50#26 = "";

     label18:
        $stack47[$stack46] = $stack50#26;

        goto label20;

     label19:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void newPrefix()>();

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void attr(jdk.internal.util.xml.impl.Pair)>(act#10);

     label20:
        $stack73 = this;

        $stack72 = act#10;

        $stack48 = virtualinvoke $stack73.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair del(jdk.internal.util.xml.impl.Pair)>($stack72);

        return;

        nop;
    }

    private java.lang.String atype(jdk.internal.util.xml.impl.Pair) throws java.lang.Exception
    {
        jdk.internal.util.xml.impl.Parser this;
        jdk.internal.util.xml.impl.Pair att, $stack3, $stack4, $stack5, $stack7, $stack8, attr;
        int $stack9, $stack10, $stack11;
        char[] $stack6;
        java.lang.String $stack12;

        this := @this: jdk.internal.util.xml.impl.Parser;

        att := @parameter0: jdk.internal.util.xml.impl.Pair;

        att.<jdk.internal.util.xml.impl.Pair: int id> = 99;

        $stack3 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm>;

        $stack4 = $stack3.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list>;

        if $stack4 == null goto label01;

        $stack5 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm>;

        $stack7 = $stack5.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list>;

        $stack6 = att.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        $stack8 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair find(jdk.internal.util.xml.impl.Pair,char[])>($stack7, $stack6);

        attr = $stack8;

        if $stack8 != null goto label02;

     label01:
        $stack12 = "CDATA";

        return $stack12;

     label02:
        $stack9 = att.<jdk.internal.util.xml.impl.Pair: int num>;

        $stack10 = $stack9 | 1;

        att.<jdk.internal.util.xml.impl.Pair: int num> = $stack10;

        att.<jdk.internal.util.xml.impl.Pair: int id> = 105;

        $stack11 = attr.<jdk.internal.util.xml.impl.Pair: int id>;

        tableswitch($stack11)
        {
            case 78: goto label07;
            case 79: goto label13;
            case 80: goto label13;
            case 81: goto label13;
            case 82: goto label05;
            case 83: goto label13;
            case 84: goto label09;
            case 85: goto label13;
            case 86: goto label13;
            case 87: goto label13;
            case 88: goto label13;
            case 89: goto label13;
            case 90: goto label13;
            case 91: goto label13;
            case 92: goto label13;
            case 93: goto label13;
            case 94: goto label13;
            case 95: goto label13;
            case 96: goto label13;
            case 97: goto label13;
            case 98: goto label13;
            case 99: goto label12;
            case 100: goto label13;
            case 101: goto label13;
            case 102: goto label13;
            case 103: goto label13;
            case 104: goto label13;
            case 105: goto label03;
            case 106: goto label13;
            case 107: goto label13;
            case 108: goto label13;
            case 109: goto label13;
            case 110: goto label06;
            case 111: goto label11;
            case 112: goto label13;
            case 113: goto label13;
            case 114: goto label04;
            case 115: goto label13;
            case 116: goto label08;
            case 117: goto label10;
            default: goto label13;
        };

     label03:
        return "ID";

     label04:
        return "IDREF";

     label05:
        return "IDREFS";

     label06:
        return "ENTITY";

     label07:
        return "ENTITIES";

     label08:
        return "NMTOKEN";

     label09:
        return "NMTOKENS";

     label10:
        return "NMTOKEN";

     label11:
        return "NOTATION";

     label12:
        att.<jdk.internal.util.xml.impl.Pair: int id> = 99;

        return "CDATA";

     label13:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        return null;

        nop;
    }

    private void comm() throws java.lang.Exception
    {
        byte $stack13, $stack19, $stack21, st#1, $stack7#2, $stack7#3;
        bottom_type st, $stack6, $stack7;
        int $stack3, $stack4, $stack5, $stack8, $stack9, $stack14, $stack15, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $stack11;
        jdk.internal.util.xml.impl.Parser this, $stack12, $stack20;
        char ch, $stack17, $stack18, $stack6#4;
        char[] $stack10, $stack16;

        this := @this: jdk.internal.util.xml.impl.Parser;

        $stack3 = this.<jdk.internal.util.xml.impl.Parser: int mPh>;

        if $stack3 != 0 goto label01;

        this.<jdk.internal.util.xml.impl.Parser: int mPh> = 1;

     label01:
        $stack20 = this;

        $stack19 = -1;

        $i0 = (int) $stack19;

        $stack20.<jdk.internal.util.xml.impl.Parser: int mBuffIdx> = $i0;

        $stack21 = 0;

        st#1 = $stack21;

     label02:
        $stack7#2 = st#1;

        $stack7#3 = $stack7#2;

        if $stack7#3 < 0 goto label18;

        $stack5 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack4 = this.<jdk.internal.util.xml.impl.Parser: int mChLen>;

        if $stack5 >= $stack4 goto label03;

        $stack16 = this.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack14 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack15 = $stack14 + 1;

        this.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack15;

        $stack6#4 = $stack16[$stack14];

        goto label04;

     label03:
        $stack6#4 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

     label04:
        ch = $stack6#4;

        $stack18 = ch;

        $stack17 = 65535;

        $i1 = (int) $stack18;

        $i2 = (int) $stack17;

        if $i1 != $i2 goto label05;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label05:
        $stack13 = st#1;

        tableswitch($stack13)
        {
            case 0: goto label06;
            case 1: goto label08;
            case 2: goto label10;
            case 3: goto label13;
            case 4: goto label16;
            default: goto label17;
        };

     label06:
        $i3 = (int) ch;

        if $i3 != 45 goto label07;

        st#1 = 1;

        goto label02;

     label07:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label02;

     label08:
        $i4 = (int) ch;

        if $i4 != 45 goto label09;

        st#1 = 2;

        goto label02;

     label09:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label02;

     label10:
        $i5 = (int) ch;

        lookupswitch($i5)
        {
            case 45: goto label11;
            default: goto label12;
        };

     label11:
        st#1 = 3;

        goto label02;

     label12:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(ch);

        goto label02;

     label13:
        $i6 = (int) ch;

        lookupswitch($i6)
        {
            case 45: goto label14;
            default: goto label15;
        };

     label14:
        st#1 = 4;

        goto label02;

     label15:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(45);

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(ch);

        st#1 = 2;

        goto label02;

     label16:
        $i7 = (int) ch;

        if $i7 != 62 goto label17;

        $stack10 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack8 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack9 = $stack8 + 1;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void comm(char[],int)>($stack10, $stack9);

        st#1 = -1;

        goto label02;

     label17:
        $stack12 = this;

        $stack11 = "";

        virtualinvoke $stack12.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>($stack11);

        goto label02;

     label18:
        return;

        nop;
    }

    private void pi() throws java.lang.Exception
    {
        byte $stack16, $stack17, $stack26, st#2, $stack5#3, $stack5#4, $b0;
        bottom_type str, st, $stack5, $stack13, $stack23;
        boolean $stack12, $stack22;
        jdk.internal.util.xml.impl.Pair $stack19;
        int $stack7, $stack8, $stack13#7, $stack13#8, $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $stack6, $stack11, $stack20, $stack21, $stack24, str#1, $u0;
        jdk.internal.util.xml.impl.Parser this, $stack15, $stack18, $stack25, $stack23#5, $stack23#6;
        char $stack4, ch, $stack10, $stack14, $c0;
        char[] $stack9;

        this := @this: jdk.internal.util.xml.impl.Parser;

        str#1 = null;

        $b0 = -1;

        $i0 = (int) $b0;

        this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx> = $i0;

        st#2 = 0;

     label01:
        $stack5#3 = st#2;

        $stack5#4 = $stack5#3;

        if $stack5#4 < 0 goto label17;

        $stack4 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        ch = $stack4;

        $i1 = (int) ch;

        $c0 = 65535;

        $i2 = (int) $c0;

        if $i1 != $i2 goto label02;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label02:
        $stack26 = st#2;

        tableswitch($stack26)
        {
            case 0: goto label03;
            case 1: goto label09;
            case 2: goto label12;
            default: goto label16;
        };

     label03:
        $stack10 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char chtyp(char)>(ch);

        $i3 = (int) $stack10;

        lookupswitch($i3)
        {
            case 58: goto label04;
            case 65: goto label04;
            case 88: goto label04;
            case 95: goto label04;
            case 97: goto label04;
            default: goto label08;
        };

     label04:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        $stack11 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: java.lang.String name(boolean)>(0);

        str#1 = $stack11;

        $stack12 = virtualinvoke str#1.<java.lang.String: boolean isEmpty()>();

        if $stack12 != 0 goto label05;

        $stack19 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mXml>;

        $stack20 = $stack19.<jdk.internal.util.xml.impl.Pair: java.lang.String name>;

        $stack21 = virtualinvoke str#1.<java.lang.String: java.lang.String toLowerCase()>();

        $stack22 = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>($stack21);

        if $stack22 != 1 goto label06;

     label05:
        $stack25 = this;

        $stack24 = "";

        virtualinvoke $stack25.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>($stack24);

     label06:
        $stack23#5 = this;

        $stack23#6 = $stack23#5;

        $stack13#7 = $stack23#6.<jdk.internal.util.xml.impl.Parser: int mPh>;

        $stack13#8 = $stack13#7;

        if $stack13#8 != 0 goto label07;

        this.<jdk.internal.util.xml.impl.Parser: int mPh> = 1;

     label07:
        $stack15 = this;

        $stack14 = virtualinvoke $stack15.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        $stack16 = 1;

        st#2 = $stack16;

        $stack18 = this;

        $stack17 = -1;

        $i4 = (int) $stack17;

        $stack18.<jdk.internal.util.xml.impl.Parser: int mBuffIdx> = $i4;

        goto label01;

     label08:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label09:
        $i5 = (int) ch;

        lookupswitch($i5)
        {
            case 63: goto label10;
            default: goto label11;
        };

     label10:
        st#2 = 2;

        goto label01;

     label11:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(ch);

        goto label01;

     label12:
        $i6 = (int) ch;

        lookupswitch($i6)
        {
            case 62: goto label13;
            case 63: goto label14;
            default: goto label15;
        };

     label13:
        $u0 = new java.lang.String;

        $stack6 = $u0;

        $stack9 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack7 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack8 = $stack7 + 1;

        specialinvoke $u0.<java.lang.String: void <init>(char[],int,int)>($stack9, 0, $stack8);

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void pi(java.lang.String,java.lang.String)>(str#1, $stack6);

        st#2 = -1;

        goto label01;

     label14:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(63);

        goto label01;

     label15:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(63);

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(ch);

        st#2 = 1;

        goto label01;

     label16:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label17:
        return;

        nop;
    }

    private void cdat() throws java.lang.Exception
    {
        byte $stack5, $stack7, $stack16, st#1, $stack4#2, $stack4#3, $b0;
        bottom_type st, $stack4;
        int $stack10, $stack11, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $stack9, $stack13, $u0;
        boolean $stack14;
        jdk.internal.util.xml.impl.Parser this, $stack6, $stack15;
        char $stack3, ch, $stack8;
        char[] $stack12;

        this := @this: jdk.internal.util.xml.impl.Parser;

        $b0 = -1;

        $i0 = (int) $b0;

        this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx> = $i0;

        st#1 = 0;

     label01:
        $stack4#2 = st#1;

        $stack4#3 = $stack4#2;

        if $stack4#3 < 0 goto label18;

        $stack3 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        ch = $stack3;

        tableswitch(st#1)
        {
            case 0: goto label02;
            case 1: goto label04;
            case 2: goto label07;
            case 3: goto label09;
            case 4: goto label11;
            case 5: goto label13;
            default: goto label17;
        };

     label02:
        $i1 = (int) ch;

        if $i1 != 91 goto label03;

        st#1 = 1;

        goto label01;

     label03:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label04:
        $stack8 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char chtyp(char)>(ch);

        $i2 = (int) $stack8;

        if $i2 != 65 goto label05;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(ch);

        goto label01;

     label05:
        $stack13 = "CDATA";

        $u0 = new java.lang.String;

        $stack9 = $u0;

        $stack12 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack10 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack11 = $stack10 + 1;

        specialinvoke $u0.<java.lang.String: void <init>(char[],int,int)>($stack12, 0, $stack11);

        $stack14 = virtualinvoke $stack13.<java.lang.String: boolean equals(java.lang.Object)>($stack9);

        if $stack14 == 1 goto label06;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label06:
        $stack15 = this;

        virtualinvoke $stack15.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        $stack16 = 2;

        st#1 = $stack16;

        goto label01;

     label07:
        $i3 = (int) ch;

        if $i3 == 91 goto label08;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label08:
        $stack6 = this;

        $stack5 = -1;

        $i4 = (int) $stack5;

        $stack6.<jdk.internal.util.xml.impl.Parser: int mBuffIdx> = $i4;

        $stack7 = 3;

        st#1 = $stack7;

        goto label01;

     label09:
        $i5 = (int) ch;

        if $i5 == 93 goto label10;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(ch);

        goto label01;

     label10:
        st#1 = 4;

        goto label01;

     label11:
        $i6 = (int) ch;

        if $i6 == 93 goto label12;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(93);

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(ch);

        st#1 = 3;

        goto label01;

     label12:
        st#1 = 5;

        goto label01;

     label13:
        $i7 = (int) ch;

        lookupswitch($i7)
        {
            case 62: goto label15;
            case 93: goto label14;
            default: goto label16;
        };

     label14:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(93);

        goto label01;

     label15:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bflash()>();

        st#1 = -1;

        goto label01;

     label16:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(93);

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(93);

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(ch);

        st#1 = 3;

        goto label01;

     label17:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label18:
        return;

        nop;
    }

    protected java.lang.String name(boolean) throws java.lang.Exception
    {
        jdk.internal.util.xml.impl.Parser this;
        byte $b0;
        int $stack3, $i0;
        char[] $stack4;
        java.lang.String $stack2, $u0;
        boolean ns;

        this := @this: jdk.internal.util.xml.impl.Parser;

        ns := @parameter0: boolean;

        $b0 = -1;

        $i0 = (int) $b0;

        this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx> = $i0;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bname(boolean)>(ns);

        $u0 = new java.lang.String;

        $stack2 = $u0;

        $stack4 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack3 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        specialinvoke $u0.<java.lang.String: void <init>(char[],int,int)>($stack4, 1, $stack3);

        return $stack2;

        nop;
    }

    protected char[] qname(boolean) throws java.lang.Exception
    {
        jdk.internal.util.xml.impl.Parser this;
        byte $b0;
        int $stack3, $stack4, $stack5, $stack6, $i0;
        char[] chars, $stack7;
        boolean ns;

        this := @this: jdk.internal.util.xml.impl.Parser;

        ns := @parameter0: boolean;

        $b0 = -1;

        $i0 = (int) $b0;

        this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx> = $i0;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bname(boolean)>(ns);

        $stack3 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack4 = $stack3 + 1;

        chars = newarray (char)[$stack4];

        $stack7 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack5 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack6 = $stack5 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack7, 0, chars, 0, $stack6);

        return chars;

        nop;
    }

    private void pubsys(jdk.internal.util.xml.impl.Input) throws java.lang.Exception
    {
        jdk.internal.util.xml.impl.Parser this;
        java.lang.String $stack4, $stack5;
        jdk.internal.util.xml.impl.Input inp;
        jdk.internal.util.xml.impl.Pair $stack3, pair, $stack6;

        this := @this: jdk.internal.util.xml.impl.Parser;

        inp := @parameter0: jdk.internal.util.xml.impl.Input;

        $stack3 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair pubsys(char)>(32);

        pair = $stack3;

        $stack4 = pair.<jdk.internal.util.xml.impl.Pair: java.lang.String name>;

        inp.<jdk.internal.util.xml.impl.Input: java.lang.String pubid> = $stack4;

        $stack5 = pair.<jdk.internal.util.xml.impl.Pair: java.lang.String value>;

        inp.<jdk.internal.util.xml.impl.Input: java.lang.String sysid> = $stack5;

        $stack6 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair del(jdk.internal.util.xml.impl.Pair)>(pair);

        return;

        nop;
    }

    private jdk.internal.util.xml.impl.Pair pubsys(char) throws java.lang.Exception
    {
        jdk.internal.util.xml.impl.Pair $stack4, ids, $stack18, $stack19#1, $stack19#2;
        int $stack11, $stack14, $stack21, $i0, $i1;
        java.lang.String $stack5, str, $stack6, $stack8, $stack10, $stack13, $stack20, $u0, $u1, $u2;
        boolean $stack7, $stack9;
        jdk.internal.util.xml.impl.Parser this;
        char $stack16, flag, $stack24;
        char[] $stack12, $stack15, $stack22;

        this := @this: jdk.internal.util.xml.impl.Parser;

        flag := @parameter0: char;

        $stack4 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair pair(jdk.internal.util.xml.impl.Pair)>(null);

        ids = $stack4;

        $stack5 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: java.lang.String name(boolean)>(0);

        str = $stack5;

        $stack6 = "PUBLIC";

        $stack7 = virtualinvoke $stack6.<java.lang.String: boolean equals(java.lang.Object)>(str);

        if $stack7 != 1 goto label6;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bqstr(char)>(105);

        $u0 = new java.lang.String;

        $stack13 = $u0;

        $stack15 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack14 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        specialinvoke $u0.<java.lang.String: void <init>(char[],int,int)>($stack15, 1, $stack14);

        ids.<jdk.internal.util.xml.impl.Pair: java.lang.String name> = $stack13;

        $stack16 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        $i0 = (int) $stack16;

        lookupswitch($i0)
        {
            case 34: goto label1;
            case 39: goto label1;
            case 65535: goto label2;
            default: goto label3;
        };

     label1:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bqstr(char)>(32);

        $u1 = new java.lang.String;

        $stack20 = $u1;

        $stack22 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack21 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        specialinvoke $u1.<java.lang.String: void <init>(char[],int,int)>($stack22, 1, $stack21);

        ids.<jdk.internal.util.xml.impl.Pair: java.lang.String value> = $stack20;

        goto label5;

     label2:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label3:
        $stack24 = flag;

        $i1 = (int) $stack24;

        if $i1 == 78 goto label4;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label4:
        $stack18 = ids;

        $stack18.<jdk.internal.util.xml.impl.Pair: java.lang.String value> = null;

     label5:
        $stack19#1 = ids;

        $stack19#2 = $stack19#1;

        return $stack19#2;

     label6:
        $stack8 = "SYSTEM";

        $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>(str);

        if $stack9 != 1 goto label7;

        ids.<jdk.internal.util.xml.impl.Pair: java.lang.String name> = null;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bqstr(char)>(32);

        $u2 = new java.lang.String;

        $stack10 = $u2;

        $stack12 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack11 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        specialinvoke $u2.<java.lang.String: void <init>(char[],int,int)>($stack12, 1, $stack11);

        ids.<jdk.internal.util.xml.impl.Pair: java.lang.String value> = $stack10;

        return ids;

     label7:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        return null;
    }

    protected java.lang.String eqstr(char) throws java.lang.Exception
    {
        byte $stack9, $stack12#3, $stack12#4;
        bottom_type $stack5, $stack12, $stack13;
        int $stack3, $i0, $i1, $i2;
        java.lang.String $stack2, $u0;
        jdk.internal.util.xml.impl.Parser this, $stack6, $stack7, $stack8;
        char flag, $stack10, $stack11, $stack13#1, $stack13#2, $stack5#5;
        char[] $stack4;

        this := @this: jdk.internal.util.xml.impl.Parser;

        flag := @parameter0: char;

        $i0 = (int) flag;

        if $i0 != 61 goto label1;

        $stack10 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char wsskip()>();

        $stack11 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        $i1 = (int) $stack11;

        if $i1 == 61 goto label1;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label1:
        $stack6 = this;

        $stack13#1 = flag;

        $stack13#2 = $stack13#1;

        $stack12#3 = 61;

        $stack12#4 = $stack12#3;

        $i2 = (int) $stack13#2;

        if $i2 != $stack12#4 goto label2;

        $stack5#5 = 45;

        goto label3;

     label2:
        $stack5#5 = flag;

     label3:
        virtualinvoke $stack6.<jdk.internal.util.xml.impl.Parser: void bqstr(char)>($stack5#5);

        $u0 = new java.lang.String;

        $stack2 = $u0;

        $stack7 = this;

        $stack4 = $stack7.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack9 = 1;

        $stack8 = this;

        $stack3 = $stack8.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        specialinvoke $u0.<java.lang.String: void <init>(char[],int,int)>($stack4, $stack9, $stack3);

        return $stack2;

        nop;
    }

    private java.lang.String ent(char) throws java.lang.Exception
    {
        byte $stack86, st#3, $stack13#4, $stack13#5;
        java.util.Map $stack56;
        java.lang.String $stack14, $stack33, $stack51, $stack61, $stack62, $stack65, $stack67, str#2, $u0, $u2, $u3;
        jdk.internal.util.xml.impl.Parser this, $stack26, $stack45, $stack73, $stack75, $stack90, $stack96, $stack78#8, $stack78#9, $stack80#12, $stack80#13, $stack32#24, $stack32#25;
        java.lang.NumberFormatException $stack87, $stack93;
        char[] $stack18, $stack37, $stack55, $stack60, $stack85;
        jdk.internal.util.xml.impl.Input $stack21, $stack22, $stack40, $stack41, $stack64, $stack66, $stack68, inp#18, $u1;
        boolean $stack71;
        int $stack8, idx, $stack9, $stack10, $stack15, $stack16, $stack17, $stack19, $stack20, $stack27, $stack30, $stack34, $stack35, $stack36, $stack38, $stack39, $stack46, $stack50, $stack52, $stack53, $stack54, $stack58, $stack69, $stack83, $stack84, $stack89, $stack95, is#22, is#28, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        char $stack12, flag, $stack24, $stack25, $stack28, $stack29, $stack43, $stack44, $stack47, $stack48, $stack49, $stack70, $stack72, $stack74, $stack92, $stack98, $stack11#6, ch#7, $stack77#10, $stack77#11, $stack79#14, $stack79#15;
        jdk.internal.org.xml.sax.InputSource $stack63, is#19;
        java.lang.Object $stack57;

        this := @this: jdk.internal.util.xml.impl.Parser;

        flag := @parameter0: char;

        $stack8 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        idx = $stack8 + 1;

        str#2 = null;

        this.<jdk.internal.util.xml.impl.Parser: char mESt> = 256;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(38);

        st#3 = 0;

     label01:
        $stack13#4 = st#3;

        $stack13#5 = $stack13#4;

        if $stack13#5 < 0 goto label44;

        $stack10 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack9 = this.<jdk.internal.util.xml.impl.Parser: int mChLen>;

        if $stack10 >= $stack9 goto label02;

        $stack85 = this.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack83 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack84 = $stack83 + 1;

        this.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack84;

        $stack11#6 = $stack85[$stack83];

        goto label03;

     label02:
        $stack11#6 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

     label03:
        ch#7 = $stack11#6;

        $stack86 = st#3;

        tableswitch($stack86)
        {
            case 0: goto label04;
            case 1: goto label04;
            case 2: goto label20;
            case 3: goto label32;
            default: goto label43;
        };

     label04:
        $stack48 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char chtyp(char)>(ch#7);

        $i0 = (int) $stack48;

        lookupswitch($i0)
        {
            case 35: goto label17;
            case 45: goto label05;
            case 46: goto label05;
            case 58: goto label07;
            case 59: goto label09;
            case 65: goto label06;
            case 88: goto label06;
            case 95: goto label06;
            case 97: goto label06;
            case 100: goto label05;
            default: goto label19;
        };

     label05:
        if st#3 == 1 goto label06;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label06:
        $stack78#8 = this;

        $stack78#9 = $stack78#8;

        $stack77#10 = ch#7;

        $stack77#11 = $stack77#10;

        virtualinvoke $stack78#9.<jdk.internal.util.xml.impl.Parser: void bappend(char)>($stack77#11);

        $stack80#12 = this;

        $stack80#13 = $stack80#12;

        $stack79#14 = ch#7;

        $stack79#15 = $stack79#14;

        virtualinvoke $stack80#13.<jdk.internal.util.xml.impl.Parser: void eappend(char)>($stack79#15);

        st#3 = 1;

        goto label01;

     label07:
        $stack71 = this.<jdk.internal.util.xml.impl.Parser: boolean mIsNSAware>;

        if $stack71 == 0 goto label08;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label08:
        $stack73 = this;

        $stack72 = ch#7;

        virtualinvoke $stack73.<jdk.internal.util.xml.impl.Parser: void bappend(char)>($stack72);

        $stack75 = this;

        $stack74 = ch#7;

        virtualinvoke $stack75.<jdk.internal.util.xml.impl.Parser: void eappend(char)>($stack74);

        st#3 = 1;

        goto label01;

     label09:
        $stack49 = this.<jdk.internal.util.xml.impl.Parser: char mESt>;

        $i1 = (int) $stack49;

        if $i1 >= 256 goto label10;

        $stack69 = idx - 1;

        this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx> = $stack69;

        $stack70 = this.<jdk.internal.util.xml.impl.Parser: char mESt>;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>($stack70);

        st#3 = -1;

        goto label01;

     label10:
        $stack50 = this.<jdk.internal.util.xml.impl.Parser: int mPh>;

        if $stack50 != 2 goto label11;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(59);

        st#3 = -1;

        goto label01;

     label11:
        $u0 = new java.lang.String;

        $stack51 = $u0;

        $stack55 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack54 = idx + 1;

        $stack52 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack53 = $stack52 - idx;

        specialinvoke $u0.<java.lang.String: void <init>(char[],int,int)>($stack55, $stack54, $stack53);

        str#2 = $stack51;

        $stack56 = this.<jdk.internal.util.xml.impl.Parser: java.util.Map mEnt>;

        $stack57 = interfaceinvoke $stack56.<java.util.Map: java.lang.Object get(java.lang.Object)>(str#2);

        inp#18 = (jdk.internal.util.xml.impl.Input) $stack57;

        $stack58 = idx - 1;

        this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx> = $stack58;

        if inp#18 == null goto label15;

        $stack60 = inp#18.<jdk.internal.util.xml.impl.Input: char[] chars>;

        if $stack60 != null goto label14;

        $stack62 = inp#18.<jdk.internal.util.xml.impl.Input: java.lang.String pubid>;

        $stack61 = inp#18.<jdk.internal.util.xml.impl.Input: java.lang.String sysid>;

        $stack63 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.org.xml.sax.InputSource resolveEnt(java.lang.String,java.lang.String,java.lang.String)>(str#2, $stack62, $stack61);

        is#19 = $stack63;

        if is#19 == null goto label12;

        $u1 = new jdk.internal.util.xml.impl.Input;

        $stack64 = $u1;

        specialinvoke $u1.<jdk.internal.util.xml.impl.Input: void <init>(int)>(512);

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void push(jdk.internal.util.xml.impl.Input)>($stack64);

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void setinp(jdk.internal.org.xml.sax.InputSource)>(is#19);

        $stack66 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack65 = inp#18.<jdk.internal.util.xml.impl.Input: java.lang.String pubid>;

        $stack66.<jdk.internal.util.xml.impl.Input: java.lang.String pubid> = $stack65;

        $stack68 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack67 = inp#18.<jdk.internal.util.xml.impl.Input: java.lang.String sysid>;

        $stack68.<jdk.internal.util.xml.impl.Input: java.lang.String sysid> = $stack67;

        str#2 = null;

        goto label13;

     label12:
        $i2 = (int) flag;

        if $i2 == 120 goto label13;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label13:
        goto label16;

     label14:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void push(jdk.internal.util.xml.impl.Input)>(inp#18);

        str#2 = null;

        goto label16;

     label15:
        $i3 = (int) flag;

        if $i3 == 120 goto label16;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label16:
        st#3 = -1;

        goto label01;

     label17:
        if st#3 == 0 goto label18;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label18:
        st#3 = 2;

        goto label01;

     label19:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label20:
        $stack29 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char chtyp(char)>(ch#7);

        $i4 = (int) $stack29;

        lookupswitch($i4)
        {
            case 59: goto label22;
            case 97: goto label30;
            case 100: goto label21;
            default: goto label31;
        };

     label21:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(ch#7);

        goto label01;

     label22:
        $u2 = new java.lang.String;

        $stack33 = $u2;

        $stack37 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack36 = idx + 1;

        $stack34 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack35 = $stack34 - idx;

        specialinvoke $u2.<java.lang.String: void <init>(char[],int,int)>($stack37, $stack36, $stack35);

        $stack38 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($stack33, 10);

        is#22 = $stack38;

        $i5 = (int) 65535;

        if is#22 < $i5 goto label23;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label23:
        $stack46 = is#22;

        $stack47 = (char) $stack46;

        ch#7 = $stack47;

     label24:
        goto label26;

     label25:
        $stack93 := @caughtexception;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label26:
        $stack96 = this;

        $stack95 = idx;

        $stack39 = $stack95 - 1;

        $stack96.<jdk.internal.util.xml.impl.Parser: int mBuffIdx> = $stack39;

        $stack98 = ch#7;

        $i6 = (int) $stack98;

        if $i6 == 32 goto label27;

        $stack40 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack41 = $stack40.<jdk.internal.util.xml.impl.Input: jdk.internal.util.xml.impl.Input next>;

        if $stack41 == null goto label28;

     label27:
        $stack45 = this;

        $stack43 = ch#7;

        $stack44 = flag;

        virtualinvoke $stack45.<jdk.internal.util.xml.impl.Parser: void bappend(char,char)>($stack43, $stack44);

        goto label29;

     label28:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(ch#7);

     label29:
        st#3 = -1;

        goto label01;

     label30:
        $stack30 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        if $stack30 != idx goto label31;

        $i7 = (int) ch#7;

        if $i7 != 120 goto label31;

        st#3 = 3;

        goto label01;

     label31:
        $stack32#24 = this;

        $stack32#25 = $stack32#24;

        virtualinvoke $stack32#25.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label32:
        $stack12 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char chtyp(char)>(ch#7);

        $i8 = (int) $stack12;

        lookupswitch($i8)
        {
            case 59: goto label34;
            case 65: goto label33;
            case 97: goto label33;
            case 100: goto label33;
            default: goto label42;
        };

     label33:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(ch#7);

        goto label01;

     label34:
        $u3 = new java.lang.String;

        $stack14 = $u3;

        $stack18 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack17 = idx + 1;

        $stack15 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack16 = $stack15 - idx;

        specialinvoke $u3.<java.lang.String: void <init>(char[],int,int)>($stack18, $stack17, $stack16);

        $stack19 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($stack14, 16);

        is#28 = $stack19;

        $i9 = (int) 65535;

        if is#28 < $i9 goto label35;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label35:
        $stack27 = is#28;

        $stack28 = (char) $stack27;

        ch#7 = $stack28;

     label36:
        goto label38;

     label37:
        $stack87 := @caughtexception;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label38:
        $stack90 = this;

        $stack89 = idx;

        $stack20 = $stack89 - 1;

        $stack90.<jdk.internal.util.xml.impl.Parser: int mBuffIdx> = $stack20;

        $stack92 = ch#7;

        $i10 = (int) $stack92;

        if $i10 == 32 goto label39;

        $stack21 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack22 = $stack21.<jdk.internal.util.xml.impl.Input: jdk.internal.util.xml.impl.Input next>;

        if $stack22 == null goto label40;

     label39:
        $stack26 = this;

        $stack24 = ch#7;

        $stack25 = flag;

        virtualinvoke $stack26.<jdk.internal.util.xml.impl.Parser: void bappend(char,char)>($stack24, $stack25);

        goto label41;

     label40:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(ch#7);

     label41:
        st#3 = -1;

        goto label01;

     label42:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label43:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label44:
        return str#2;

        catch java.lang.NumberFormatException from label22 to label24 with label25;
        catch java.lang.NumberFormatException from label34 to label36 with label37;
    }

    private void pent(char) throws java.lang.Exception
    {
        java.util.Map $stack16;
        java.lang.StringBuilder $stack19, $stack20, $stack21, $stack29, $stack30, $stack31, $u2, $u3;
        int $stack7, idx, $stack8, $stack10, $stack11, $stack12, $stack13, $stack18, $stack50, $i0, $i1, $i2;
        java.lang.String $stack9, $stack22, $stack26, $stack27, $stack32, $stack34, $stack36, $stack47, str#3, $u0;
        jdk.internal.util.xml.impl.Parser this, $stack25, $stack39, $stack41, $stack42, $stack44, $stack46, $stack51;
        char $stack15, flag;
        jdk.internal.org.xml.sax.InputSource $stack28, is, $stack40;
        char[] $stack14, $stack23;
        java.lang.Object $stack17;
        jdk.internal.util.xml.impl.Input $stack24, $stack33, $stack35, $stack37, $stack43, $stack45, $stack48, $stack52, inp#4, $u1;

        this := @this: jdk.internal.util.xml.impl.Parser;

        flag := @parameter0: char;

        $stack7 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        idx = $stack7 + 1;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(37);

        $stack8 = this.<jdk.internal.util.xml.impl.Parser: int mPh>;

        if $stack8 == 2 goto label01;

        return;

     label01:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bname(boolean)>(0);

        $u0 = new java.lang.String;

        $stack9 = $u0;

        $stack14 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack13 = idx + 2;

        $stack10 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack11 = $stack10 - idx;

        $stack12 = $stack11 - 1;

        specialinvoke $u0.<java.lang.String: void <init>(char[],int,int)>($stack14, $stack13, $stack12);

        str#3 = $stack9;

        $stack15 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        $i0 = (int) $stack15;

        if $i0 == 59 goto label02;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label02:
        $stack46 = this;

        $stack16 = $stack46.<jdk.internal.util.xml.impl.Parser: java.util.Map mPEnt>;

        $stack47 = str#3;

        $stack17 = interfaceinvoke $stack16.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack47);

        $stack48 = (jdk.internal.util.xml.impl.Input) $stack17;

        inp#4 = $stack48;

        $stack51 = this;

        $stack50 = idx;

        $stack18 = $stack50 - 1;

        $stack51.<jdk.internal.util.xml.impl.Parser: int mBuffIdx> = $stack18;

        $stack52 = inp#4;

        if $stack52 == null goto label09;

        $stack23 = inp#4.<jdk.internal.util.xml.impl.Input: char[] chars>;

        if $stack23 != null goto label06;

        $stack27 = inp#4.<jdk.internal.util.xml.impl.Input: java.lang.String pubid>;

        $stack26 = inp#4.<jdk.internal.util.xml.impl.Input: java.lang.String sysid>;

        $stack28 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.org.xml.sax.InputSource resolveEnt(java.lang.String,java.lang.String,java.lang.String)>(str#3, $stack27, $stack26);

        is = $stack28;

        if is == null goto label04;

        $i1 = (int) flag;

        if $i1 == 45 goto label03;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(32);

     label03:
        $stack39 = this;

        $u1 = new jdk.internal.util.xml.impl.Input;

        $stack33 = $u1;

        specialinvoke $u1.<jdk.internal.util.xml.impl.Input: void <init>(int)>(512);

        virtualinvoke $stack39.<jdk.internal.util.xml.impl.Parser: void push(jdk.internal.util.xml.impl.Input)>($stack33);

        $stack41 = this;

        $stack40 = is;

        virtualinvoke $stack41.<jdk.internal.util.xml.impl.Parser: void setinp(jdk.internal.org.xml.sax.InputSource)>($stack40);

        $stack42 = this;

        $stack35 = $stack42.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack43 = inp#4;

        $stack34 = $stack43.<jdk.internal.util.xml.impl.Input: java.lang.String pubid>;

        $stack35.<jdk.internal.util.xml.impl.Input: java.lang.String pubid> = $stack34;

        $stack44 = this;

        $stack37 = $stack44.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack45 = inp#4;

        $stack36 = $stack45.<jdk.internal.util.xml.impl.Input: java.lang.String sysid>;

        $stack37.<jdk.internal.util.xml.impl.Input: java.lang.String sysid> = $stack36;

        goto label05;

     label04:
        $u2 = new java.lang.StringBuilder;

        $stack29 = $u2;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(str#3);

        $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void skippedEnt(java.lang.String)>($stack32);

     label05:
        goto label10;

     label06:
        $i2 = (int) flag;

        if $i2 != 45 goto label07;

        inp#4.<jdk.internal.util.xml.impl.Input: int chIdx> = 1;

        goto label08;

     label07:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(32);

        inp#4.<jdk.internal.util.xml.impl.Input: int chIdx> = 0;

     label08:
        $stack25 = this;

        $stack24 = inp#4;

        virtualinvoke $stack25.<jdk.internal.util.xml.impl.Parser: void push(jdk.internal.util.xml.impl.Input)>($stack24);

        goto label10;

     label09:
        $u3 = new java.lang.StringBuilder;

        $stack19 = $u3;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(str#3);

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void skippedEnt(java.lang.String)>($stack22);

     label10:
        return;
    }

    private boolean isdecl(jdk.internal.util.xml.impl.Pair, java.lang.String)
    {
        boolean $stack7, $stack32, $stack33;
        jdk.internal.util.xml.impl.Pair name, $stack10, $stack11, $stack12, $stack13, $stack14, $stack16, $stack19, $stack20, $stack24, $stack27, $stack34, $stack35, $stack36, $stack37, $stack38, $stack39, $stack41, $stack42;
        int $stack9, len, $stack17, $stack21, $stack28, $stack29, $stack43, $stack44;
        java.lang.String $stack8, value, $stack15, $stack26, $stack30, $stack31;
        jdk.internal.util.xml.impl.Parser this;
        char $stack5, $stack22;
        char[] $stack4, $stack6, $stack18, $stack23, $stack25, $stack40;

        this := @this: jdk.internal.util.xml.impl.Parser;

        name := @parameter0: jdk.internal.util.xml.impl.Pair;

        value := @parameter1: java.lang.String;

        $stack4 = name.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        $stack5 = $stack4[0];

        if $stack5 != 0 goto label1;

        $stack31 = "xmlns";

        $stack30 = name.<jdk.internal.util.xml.impl.Pair: java.lang.String name>;

        $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>($stack30);

        if $stack32 != 1 goto label2;

        $stack34 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

        $stack35 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair pair(jdk.internal.util.xml.impl.Pair)>($stack34);

        this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref> = $stack35;

        $stack37 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

        $stack36 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm>;

        $stack37.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list> = $stack36;

        $stack38 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

        $stack38.<jdk.internal.util.xml.impl.Pair: java.lang.String value> = value;

        $stack39 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

        $stack39.<jdk.internal.util.xml.impl.Pair: java.lang.String name> = "";

        $stack41 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

        $stack40 = <jdk.internal.util.xml.impl.Parser: char[] NONS>;

        $stack41.<jdk.internal.util.xml.impl.Pair: char[] chars> = $stack40;

        $stack42 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm>;

        $stack43 = $stack42.<jdk.internal.util.xml.impl.Pair: int num>;

        $stack44 = $stack43 + 1;

        $stack42.<jdk.internal.util.xml.impl.Pair: int num> = $stack44;

        return 1;

     label1:
        $stack6 = <jdk.internal.util.xml.impl.Parser: char[] XMLNS>;

        $stack7 = virtualinvoke name.<jdk.internal.util.xml.impl.Pair: boolean eqpref(char[])>($stack6);

        if $stack7 != 1 goto label2;

        $stack8 = name.<jdk.internal.util.xml.impl.Pair: java.lang.String name>;

        $stack9 = virtualinvoke $stack8.<java.lang.String: int length()>();

        len = $stack9;

        $stack10 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

        $stack11 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair pair(jdk.internal.util.xml.impl.Pair)>($stack10);

        this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref> = $stack11;

        $stack13 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

        $stack12 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm>;

        $stack13.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list> = $stack12;

        $stack14 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

        $stack14.<jdk.internal.util.xml.impl.Pair: java.lang.String value> = value;

        $stack16 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

        $stack15 = name.<jdk.internal.util.xml.impl.Pair: java.lang.String name>;

        $stack16.<jdk.internal.util.xml.impl.Pair: java.lang.String name> = $stack15;

        $stack19 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

        $stack17 = len + 1;

        $stack18 = newarray (char)[$stack17];

        $stack19.<jdk.internal.util.xml.impl.Pair: char[] chars> = $stack18;

        $stack20 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

        $stack23 = $stack20.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        $stack21 = len + 1;

        $stack22 = (char) $stack21;

        $stack23[0] = $stack22;

        $stack26 = name.<jdk.internal.util.xml.impl.Pair: java.lang.String name>;

        $stack24 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

        $stack25 = $stack24.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        virtualinvoke $stack26.<java.lang.String: void getChars(int,int,char[],int)>(0, len, $stack25, 1);

        $stack27 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mElm>;

        $stack28 = $stack27.<jdk.internal.util.xml.impl.Pair: int num>;

        $stack29 = $stack28 + 1;

        $stack27.<jdk.internal.util.xml.impl.Pair: int num> = $stack29;

        return 1;

     label2:
        $stack33 = 0;

        return $stack33;

        nop;
    }

    private java.lang.String rslv(char[]) throws java.lang.Exception
    {
        jdk.internal.util.xml.impl.Parser this, $stack5;
        char $stack3, $stack8;
        jdk.internal.util.xml.impl.Pair $stack9, $stack12, pref#1, pref#2;
        char[] qname, $stack7;
        java.lang.String $stack10, $stack13;
        boolean $stack11;

        this := @this: jdk.internal.util.xml.impl.Parser;

        qname := @parameter0: char[];

        pref#1 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

     label1:
        $stack12 = pref#1;

        if $stack12 == null goto label3;

        $stack11 = virtualinvoke pref#1.<jdk.internal.util.xml.impl.Pair: boolean eqpref(char[])>(qname);

        if $stack11 != 1 goto label2;

        $stack13 = pref#1.<jdk.internal.util.xml.impl.Pair: java.lang.String value>;

        return $stack13;

     label2:
        pref#1 = pref#1.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair next>;

        goto label1;

     label3:
        $stack3 = qname[0];

        if $stack3 != 1 goto label6;

        pref#2 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mPref>;

     label4:
        $stack9 = pref#2;

        if $stack9 == null goto label6;

        $stack7 = pref#2.<jdk.internal.util.xml.impl.Pair: char[] chars>;

        $stack8 = $stack7[0];

        if $stack8 != 0 goto label5;

        $stack10 = pref#2.<jdk.internal.util.xml.impl.Pair: java.lang.String value>;

        return $stack10;

     label5:
        pref#2 = pref#2.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair next>;

        goto label4;

     label6:
        $stack5 = this;

        virtualinvoke $stack5.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        return null;
    }

    protected char wsskip() throws java.io.IOException
    {
        byte[] $stack7;
        short $stack17;
        byte $stack8;
        bottom_type $stack4;
        int $stack2, $stack3, $stack5, $stack6, $stack14, $stack15, $i0, $i1, $i2;
        boolean $stack12;
        jdk.internal.util.xml.impl.Parser this, $stack9, $stack10, $stack11;
        char ch, $stack13, $stack18, $stack4#1;
        char[] $stack16;

        this := @this: jdk.internal.util.xml.impl.Parser;

     label1:
        $stack9 = this;

        $stack3 = $stack9.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack10 = this;

        $stack2 = $stack10.<jdk.internal.util.xml.impl.Parser: int mChLen>;

        if $stack3 >= $stack2 goto label2;

        $stack16 = this.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack14 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack15 = $stack14 + 1;

        this.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack15;

        $stack4#1 = $stack16[$stack14];

        goto label3;

     label2:
        $stack4#1 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

     label3:
        ch = $stack4#1;

        $stack18 = ch;

        $stack17 = 128;

        $i0 = (int) $stack18;

        if $i0 >= $stack17 goto label4;

        $stack7 = <jdk.internal.util.xml.impl.Parser: byte[] nmttyp>;

        $i1 = (int) ch;

        $stack8 = $stack7[$i1];

        $i2 = (int) $stack8;

        if $i2 == 3 goto label1;

        goto label4;

     label4:
        $stack11 = this;

        $stack5 = $stack11.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack12 = 1;

        $stack6 = $stack5 - $stack12;

        $stack11.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack6;

        $stack13 = ch;

        return $stack13;

        nop;
    }

    protected abstract void docType(java.lang.String, java.lang.String, java.lang.String) throws jdk.internal.org.xml.sax.SAXException;

    public abstract void startInternalSub() throws jdk.internal.org.xml.sax.SAXException;

    protected abstract void comm(char[], int);

    protected abstract void pi(java.lang.String, java.lang.String) throws java.lang.Exception;

    protected abstract void newPrefix() throws java.lang.Exception;

    protected abstract void skippedEnt(java.lang.String) throws java.lang.Exception;

    protected abstract jdk.internal.org.xml.sax.InputSource resolveEnt(java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception;

    protected abstract void notDecl(java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception;

    protected abstract void unparsedEntDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception;

    protected abstract void panic(java.lang.String) throws java.lang.Exception;

    private void bname(boolean) throws java.lang.Exception
    {
        byte[] $stack34;
        byte $stack35, $stack46#5;
        bottom_type bcolon, bchidx, bstart, cstart, st, $stack12, $stack13, type, $stack17, $stack18, $stack33, $stack46;
        short $stack23, $stack43, $stack44, $stack47, st#6, $stack33#16, $stack33#17;
        jdk.internal.util.xml.impl.Parser this, $stack39, $stack40, $stack17#7, $stack17#8, $stack18#11, $stack18#12;
        char[] $stack16, $stack28;
        boolean ns, $stack19, $stack22, $stack41;
        int $stack10, $stack11, bqname, $stack14, $stack15, $stack20, $stack21, $stack24, $stack25, $stack26, $stack29, $stack30, $stack31, $stack32, $stack37, $stack38, bcolon#1, bchidx#2, bstart#3, cstart#4, $stack13#9, $stack13#10, $stack12#13, $stack12#14, type#15, $i0, $i1, $i2, $i3;
        char ch, $stack27, $stack36, $stack42, $stack45, $c0;

        this := @this: jdk.internal.util.xml.impl.Parser;

        ns := @parameter0: boolean;

        $stack10 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack11 = $stack10 + 1;

        this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx> = $stack11;

        bqname = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        bcolon#1 = bqname;

        bchidx#2 = bqname + 1;

        bstart#3 = bchidx#2;

        cstart#4 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        if ns != 1 goto label01;

        $stack46#5 = 0;

        goto label02;

     label01:
        $stack46#5 = 2;

     label02:
        $stack47 = (short) $stack46#5;

        st#6 = $stack47;

     label03:
        $stack17#7 = this;

        $stack17#8 = $stack17#7;

        $stack13#9 = $stack17#8.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack13#10 = $stack13#9;

        $stack18#11 = this;

        $stack18#12 = $stack18#11;

        $stack12#13 = $stack18#12.<jdk.internal.util.xml.impl.Parser: int mChLen>;

        $stack12#14 = $stack12#13;

        if $stack13#10 < $stack12#14 goto label04;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bcopy(int,int)>(cstart#4, bstart#3);

        $stack36 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        $stack37 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack38 = $stack37 - 1;

        this.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack38;

        cstart#4 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        bstart#3 = bchidx#2;

     label04:
        $stack39 = this;

        $stack16 = $stack39.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack40 = this;

        $stack14 = $stack40.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack41 = 1;

        $stack15 = $stack14 + $stack41;

        $stack40.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack15;

        $stack42 = $stack16[$stack14];

        ch = $stack42;

        $stack43 = 0;

        type#15 = $stack43;

        $stack45 = ch;

        $stack44 = 128;

        $i0 = (int) $stack45;

        if $i0 >= $stack44 goto label05;

        $stack34 = <jdk.internal.util.xml.impl.Parser: byte[] nmttyp>;

        $i1 = (int) ch;

        $stack35 = $stack34[$i1];

        type#15 = (char) $stack35;

        goto label06;

     label05:
        $i2 = (int) ch;

        $c0 = 65535;

        $i3 = (int) $c0;

        if $i2 != $i3 goto label06;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label06:
        $stack33#16 = st#6;

        $stack33#17 = $stack33#16;

        tableswitch($stack33#17)
        {
            case 0: goto label07;
            case 1: goto label11;
            case 2: goto label07;
            case 3: goto label11;
            default: goto label16;
        };

     label07:
        lookupswitch(type#15)
        {
            case 0: goto label08;
            case 1: goto label09;
            default: goto label10;
        };

     label08:
        bchidx#2 = bchidx#2 + 1;

        $stack32 = st#6 + 1;

        st#6 = (short) $stack32;

        goto label03;

     label09:
        $stack29 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack30 = $stack29 - 1;

        this.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack30;

        $stack31 = st#6 + 1;

        st#6 = (short) $stack31;

        goto label03;

     label10:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label03;

     label11:
        tableswitch(type#15)
        {
            case 0: goto label12;
            case 1: goto label13;
            case 2: goto label12;
            default: goto label15;
        };

     label12:
        bchidx#2 = bchidx#2 + 1;

        goto label03;

     label13:
        bchidx#2 = bchidx#2 + 1;

        if ns != 1 goto label03;

        if bcolon#1 == bqname goto label14;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label14:
        $stack20 = bchidx#2;

        $stack19 = 1;

        $stack21 = $stack20 - $stack19;

        bcolon#1 = $stack21;

        $stack23 = st#6;

        $stack22 = 1;

        if $stack23 != $stack22 goto label03;

        st#6 = 2;

        goto label03;

     label15:
        $stack24 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack25 = $stack24 - 1;

        this.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack25;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bcopy(int,int)>(cstart#4, bstart#3);

        $stack28 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack26 = bcolon#1 - bqname;

        $stack27 = (char) $stack26;

        $stack28[bqname] = $stack27;

        return;

     label16:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label03;

        nop;
    }

    private void bntok() throws java.lang.Exception
    {
        jdk.internal.util.xml.impl.Parser this, $stack4, $stack6, $stack7;
        char $stack2, ch, $stack3, $stack5;
        byte $b0;
        int $i0, $i1;

        this := @this: jdk.internal.util.xml.impl.Parser;

        $b0 = -1;

        $i0 = (int) $b0;

        this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx> = $i0;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(0);

     label1:
        $stack4 = this;

        $stack2 = virtualinvoke $stack4.<jdk.internal.util.xml.impl.Parser: char getch()>();

        ch = $stack2;

        $stack6 = this;

        $stack5 = ch;

        $stack3 = virtualinvoke $stack6.<jdk.internal.util.xml.impl.Parser: char chtyp(char)>($stack5);

        $i1 = (int) $stack3;

        lookupswitch($i1)
        {
            case 45: goto label2;
            case 46: goto label2;
            case 58: goto label2;
            case 65: goto label2;
            case 88: goto label2;
            case 90: goto label3;
            case 95: goto label2;
            case 97: goto label2;
            case 100: goto label2;
            default: goto label4;
        };

     label2:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(ch);

        goto label1;

     label3:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label4:
        $stack7 = this;

        virtualinvoke $stack7.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        return;

        nop;
    }

    private char bkeyword() throws java.lang.Exception
    {
        bottom_type $stack10, $stack13, $stack16, $stack19, $stack24, $stack27, $stack30, $stack33, $stack34, $stack39, $stack42, $stack47, $stack50, $stack53, $stack56;
        java.lang.String $stack2, str, $stack8, $stack11, $stack14, $stack17, $stack22, $stack25, $stack28, $stack31, $stack37, $stack40, $stack45, $stack48, $stack51, $stack54, $u0;
        jdk.internal.util.xml.impl.Parser this;
        char[] $stack4, $stack6, $stack20, $stack35, $stack43;
        boolean $stack9, $stack12, $stack15, $stack18, $stack23, $stack26, $stack29, $stack32, $stack38, $stack41, $stack46, $stack49, $stack52, $stack55;
        int $stack3, $stack5, $i0, $i1, $i2, $i3;
        char $stack7, $stack21, $stack36, $stack44, $stack56#1, $stack47#2, $stack53#3, $stack50#4, $stack39#5, $stack42#6, $stack27#7, $stack24#8, $stack33#9, $stack30#10, $stack13#11, $stack16#12, $stack10#13, $stack19#14, $stack34#15, $stack34#16;

        this := @this: jdk.internal.util.xml.impl.Parser;

        $u0 = new java.lang.String;

        $stack2 = $u0;

        $stack4 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack3 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        specialinvoke $u0.<java.lang.String: void <init>(char[],int,int)>($stack4, 1, $stack3);

        str = $stack2;

        $stack5 = virtualinvoke str.<java.lang.String: int length()>();

        tableswitch($stack5)
        {
            case 2: goto label01;
            case 3: goto label51;
            case 4: goto label51;
            case 5: goto label04;
            case 6: goto label15;
            case 7: goto label23;
            case 8: goto label37;
            default: goto label51;
        };

     label01:
        $stack54 = "ID";

        $stack55 = virtualinvoke $stack54.<java.lang.String: boolean equals(java.lang.Object)>(str);

        if $stack55 != 1 goto label02;

        $stack56#1 = 105;

        goto label03;

     label02:
        $stack56#1 = 63;

     label03:
        return $stack56#1;

     label04:
        $stack43 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack44 = $stack43[1];

        $i0 = (int) $stack44;

        lookupswitch($i0)
        {
            case 67: goto label08;
            case 70: goto label11;
            case 73: goto label05;
            default: goto label14;
        };

     label05:
        $stack45 = "IDREF";

        $stack46 = virtualinvoke $stack45.<java.lang.String: boolean equals(java.lang.Object)>(str);

        if $stack46 != 1 goto label06;

        $stack47#2 = 114;

        goto label07;

     label06:
        $stack47#2 = 63;

     label07:
        return $stack47#2;

     label08:
        $stack51 = "CDATA";

        $stack52 = virtualinvoke $stack51.<java.lang.String: boolean equals(java.lang.Object)>(str);

        if $stack52 != 1 goto label09;

        $stack53#3 = 99;

        goto label10;

     label09:
        $stack53#3 = 63;

     label10:
        return $stack53#3;

     label11:
        $stack48 = "FIXED";

        $stack49 = virtualinvoke $stack48.<java.lang.String: boolean equals(java.lang.Object)>(str);

        if $stack49 != 1 goto label12;

        $stack50#4 = 70;

        goto label13;

     label12:
        $stack50#4 = 63;

     label13:
        return $stack50#4;

     label14:
        goto label51;

     label15:
        $stack35 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack36 = $stack35[1];

        $i1 = (int) $stack36;

        lookupswitch($i1)
        {
            case 69: goto label19;
            case 73: goto label16;
            default: goto label22;
        };

     label16:
        $stack37 = "IDREFS";

        $stack38 = virtualinvoke $stack37.<java.lang.String: boolean equals(java.lang.Object)>(str);

        if $stack38 != 1 goto label17;

        $stack39#5 = 82;

        goto label18;

     label17:
        $stack39#5 = 63;

     label18:
        return $stack39#5;

     label19:
        $stack40 = "ENTITY";

        $stack41 = virtualinvoke $stack40.<java.lang.String: boolean equals(java.lang.Object)>(str);

        if $stack41 != 1 goto label20;

        $stack42#6 = 110;

        goto label21;

     label20:
        $stack42#6 = 63;

     label21:
        return $stack42#6;

     label22:
        goto label51;

     label23:
        $stack20 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack21 = $stack20[1];

        $i2 = (int) $stack21;

        lookupswitch($i2)
        {
            case 65: goto label30;
            case 69: goto label33;
            case 73: goto label24;
            case 78: goto label27;
            default: goto label36;
        };

     label24:
        $stack25 = "IMPLIED";

        $stack26 = virtualinvoke $stack25.<java.lang.String: boolean equals(java.lang.Object)>(str);

        if $stack26 != 1 goto label25;

        $stack27#7 = 73;

        goto label26;

     label25:
        $stack27#7 = 63;

     label26:
        return $stack27#7;

     label27:
        $stack22 = "NMTOKEN";

        $stack23 = virtualinvoke $stack22.<java.lang.String: boolean equals(java.lang.Object)>(str);

        if $stack23 != 1 goto label28;

        $stack24#8 = 116;

        goto label29;

     label28:
        $stack24#8 = 63;

     label29:
        return $stack24#8;

     label30:
        $stack31 = "ATTLIST";

        $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(str);

        if $stack32 != 1 goto label31;

        $stack33#9 = 97;

        goto label32;

     label31:
        $stack33#9 = 63;

     label32:
        return $stack33#9;

     label33:
        $stack28 = "ELEMENT";

        $stack29 = virtualinvoke $stack28.<java.lang.String: boolean equals(java.lang.Object)>(str);

        if $stack29 != 1 goto label34;

        $stack30#10 = 101;

        goto label35;

     label34:
        $stack30#10 = 63;

     label35:
        return $stack30#10;

     label36:
        goto label51;

     label37:
        $stack6 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack7 = $stack6[2];

        $i3 = (int) $stack7;

        lookupswitch($i3)
        {
            case 69: goto label47;
            case 77: goto label41;
            case 78: goto label38;
            case 79: goto label44;
            default: goto label50;
        };

     label38:
        $stack11 = "ENTITIES";

        $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(str);

        if $stack12 != 1 goto label39;

        $stack13#11 = 78;

        goto label40;

     label39:
        $stack13#11 = 63;

     label40:
        return $stack13#11;

     label41:
        $stack14 = "NMTOKENS";

        $stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>(str);

        if $stack15 != 1 goto label42;

        $stack16#12 = 84;

        goto label43;

     label42:
        $stack16#12 = 63;

     label43:
        return $stack16#12;

     label44:
        $stack8 = "NOTATION";

        $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>(str);

        if $stack9 != 1 goto label45;

        $stack10#13 = 111;

        goto label46;

     label45:
        $stack10#13 = 63;

     label46:
        return $stack10#13;

     label47:
        $stack17 = "REQUIRED";

        $stack18 = virtualinvoke $stack17.<java.lang.String: boolean equals(java.lang.Object)>(str);

        if $stack18 != 1 goto label48;

        $stack19#14 = 81;

        goto label49;

     label48:
        $stack19#14 = 63;

     label49:
        return $stack19#14;

     label50:
        goto label51;

     label51:
        $stack34#15 = 63;

        $stack34#16 = $stack34#15;

        return $stack34#16;

        nop;
    }

    private void bqstr(char) throws java.lang.Exception
    {
        byte $stack30, $stack35, st#1, $stack13#2, $stack13#3, $b0;
        bottom_type st, $stack12, ch, $stack13, $stack16, $stack17, $stack18;
        int $stack5, $stack8, $stack9, $stack10, $stack11, $stack32, $stack33, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String $stack26;
        jdk.internal.util.xml.impl.Parser this, $stack22, $stack25, $stack29, $stack18#6, $stack18#7;
        char flag, $stack7, $stack19, $stack20, $stack21, $stack24, $stack28, $stack31, $stack12#4, ch#5, $stack16#8, $stack16#9, $stack17#10, $stack17#11;
        char[] $stack6, $stack34;
        jdk.internal.util.xml.impl.Input inp, $stack14, $stack15, $stack23, $stack27;

        this := @this: jdk.internal.util.xml.impl.Parser;

        flag := @parameter0: char;

        inp = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $b0 = -1;

        $i0 = (int) $b0;

        this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx> = $i0;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(0);

        st#1 = 0;

     label01:
        $stack13#2 = st#1;

        $stack13#3 = $stack13#2;

        if $stack13#3 < 0 goto label26;

        $stack11 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack10 = this.<jdk.internal.util.xml.impl.Parser: int mChLen>;

        if $stack11 >= $stack10 goto label02;

        $stack34 = this.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack32 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack33 = $stack32 + 1;

        this.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack33;

        $stack12#4 = $stack34[$stack32];

        goto label03;

     label02:
        $stack12#4 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

     label03:
        ch#5 = $stack12#4;

        $stack35 = st#1;

        tableswitch($stack35)
        {
            case 0: goto label04;
            case 1: goto label25;
            case 2: goto label09;
            case 3: goto label09;
            default: goto label25;
        };

     label04:
        lookupswitch(ch#5)
        {
            case 9: goto label05;
            case 10: goto label05;
            case 13: goto label05;
            case 32: goto label05;
            case 34: goto label07;
            case 39: goto label06;
            default: goto label08;
        };

     label05:
        goto label01;

     label06:
        st#1 = 2;

        goto label01;

     label07:
        st#1 = 3;

        goto label01;

     label08:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label09:
        lookupswitch(ch#5)
        {
            case 13: goto label22;
            case 34: goto label12;
            case 37: goto label16;
            case 38: goto label14;
            case 39: goto label10;
            case 60: goto label18;
            case 65535: goto label21;
            default: goto label24;
        };

     label10:
        if st#1 != 2 goto label11;

        $stack23 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        if $stack23 != inp goto label11;

        st#1 = -1;

        goto label01;

     label11:
        $stack25 = this;

        $stack24 = ch#5;

        virtualinvoke $stack25.<jdk.internal.util.xml.impl.Parser: void bappend(char)>($stack24);

        goto label01;

     label12:
        if st#1 != 3 goto label13;

        $stack27 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        if $stack27 != inp goto label13;

        st#1 = -1;

        goto label01;

     label13:
        $stack29 = this;

        $stack28 = ch#5;

        virtualinvoke $stack29.<jdk.internal.util.xml.impl.Parser: void bappend(char)>($stack28);

        goto label01;

     label14:
        $i1 = (int) flag;

        if $i1 == 100 goto label15;

        $stack26 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: java.lang.String ent(char)>(flag);

        goto label01;

     label15:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(ch#5);

        goto label01;

     label16:
        $i2 = (int) flag;

        if $i2 != 100 goto label17;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void pent(char)>(45);

        goto label01;

     label17:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(ch#5);

        goto label01;

     label18:
        $i3 = (int) flag;

        if $i3 == 45 goto label19;

        $i4 = (int) flag;

        if $i4 != 100 goto label20;

     label19:
        $stack22 = this;

        $stack21 = ch#5;

        virtualinvoke $stack22.<jdk.internal.util.xml.impl.Parser: void bappend(char)>($stack21);

        goto label01;

     label20:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label21:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label22:
        $stack31 = flag;

        $stack30 = 32;

        $i5 = (int) $stack31;

        if $i5 == $stack30 goto label24;

        $stack14 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack15 = $stack14.<jdk.internal.util.xml.impl.Input: jdk.internal.util.xml.impl.Input next>;

        if $stack15 != null goto label24;

        $stack19 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        $i6 = (int) $stack19;

        if $i6 == 10 goto label23;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

     label23:
        $stack20 = 10;

        ch#5 = $stack20;

     label24:
        $stack18#6 = this;

        $stack18#7 = $stack18#6;

        $stack16#8 = ch#5;

        $stack16#9 = $stack16#8;

        $stack17#10 = flag;

        $stack17#11 = $stack17#10;

        virtualinvoke $stack18#7.<jdk.internal.util.xml.impl.Parser: void bappend(char,char)>($stack16#9, $stack17#11);

        goto label01;

     label25:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label26:
        $i7 = (int) flag;

        if $i7 != 105 goto label27;

        $stack6 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack5 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack7 = $stack6[$stack5];

        $i8 = (int) $stack7;

        if $i8 != 32 goto label27;

        $stack8 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack9 = $stack8 - 1;

        this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx> = $stack9;

     label27:
        return;

        nop;
    }

    protected abstract void bflash() throws java.lang.Exception;

    protected abstract void bflash_ws() throws java.lang.Exception;

    private void bappend(char, char)
    {
        bottom_type ch, $stack7, $stack8, $stack9, $stack10, $stack11, $stack16, $stack17, $stack18, $stack19;
        boolean $stack17#6, $stack17#7;
        int $stack3, $stack4, $stack12, $stack13, $stack14, $stack7#4, $stack7#5, $stack8#8, $stack8#9, $stack11#12, $stack11#13, $stack10#18, $stack10#19, $i0, $i1;
        jdk.internal.util.xml.impl.Parser this, $stack16#2, $stack16#3, $stack18#10, $stack18#11, $stack19#14, $stack19#15;
        char mode, $stack6, ch#1;
        char[] $stack5, $stack15, $stack9#16, $stack9#17;

        this := @this: jdk.internal.util.xml.impl.Parser;

        ch#1 := @parameter0: char;

        mode := @parameter1: char;

        $i0 = (int) mode;

        lookupswitch($i0)
        {
            case 99: goto label05;
            case 105: goto label01;
            default: goto label08;
        };

     label01:
        lookupswitch(ch#1)
        {
            case 9: goto label02;
            case 10: goto label02;
            case 13: goto label02;
            case 32: goto label02;
            default: goto label04;
        };

     label02:
        $stack3 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        if $stack3 <= 0 goto label03;

        $stack5 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack4 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack6 = $stack5[$stack4];

        $i1 = (int) $stack6;

        if $i1 == 32 goto label03;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(32);

     label03:
        return;

     label04:
        goto label08;

     label05:
        tableswitch(ch#1)
        {
            case 9: goto label06;
            case 10: goto label06;
            case 11: goto label07;
            case 12: goto label07;
            case 13: goto label06;
            default: goto label07;
        };

     label06:
        ch#1 = 32;

        goto label08;

     label07:
        goto label08;

     label08:
        $stack16#2 = this;

        $stack16#3 = $stack16#2;

        $stack7#4 = $stack16#3.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack7#5 = $stack7#4;

        $stack17#6 = 1;

        $stack17#7 = $stack17#6;

        $stack8#8 = $stack7#5 + $stack17#7;

        $stack8#9 = $stack8#8;

        $stack16#3.<jdk.internal.util.xml.impl.Parser: int mBuffIdx> = $stack8#9;

        $stack18#10 = this;

        $stack18#11 = $stack18#10;

        $stack11#12 = $stack18#11.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack11#13 = $stack11#12;

        $stack19#14 = this;

        $stack19#15 = $stack19#14;

        $stack9#16 = $stack19#15.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack9#17 = $stack9#16;

        $stack10#18 = lengthof $stack9#17;

        $stack10#19 = $stack10#18;

        if $stack11#13 >= $stack10#19 goto label09;

        $stack15 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack14 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack15[$stack14] = ch#1;

        goto label10;

     label09:
        $stack12 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack13 = $stack12 - 1;

        this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx> = $stack13;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bappend(char)>(ch#1);

     label10:
        return;

        nop;
    }

    private void bappend(char)
    {
        int $stack4, $stack5, $stack9, $stack10, $stack12, $stack14;
        jdk.internal.util.xml.impl.Parser this;
        char ch;
        java.lang.Exception $stack7, exp;
        char[] $stack6, $stack8, buff, $stack11, $stack13, $stack15;

        this := @this: jdk.internal.util.xml.impl.Parser;

        ch := @parameter0: char;

     label1:
        $stack6 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack4 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack5 = $stack4 + 1;

        this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx> = $stack5;

        $stack6[$stack5] = ch;

     label2:
        goto label4;

     label3:
        $stack7 := @caughtexception;

        exp = $stack7;

        $stack8 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack9 = lengthof $stack8;

        $stack10 = $stack9 << 1;

        buff = newarray (char)[$stack10];

        $stack13 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack11 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack12 = lengthof $stack11;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack13, 0, buff, 0, $stack12);

        this.<jdk.internal.util.xml.impl.Parser: char[] mBuff> = buff;

        $stack15 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack14 = this.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack15[$stack14] = ch;

     label4:
        return;

        nop;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void bcopy(int, int)
    {
        int cidx, $stack5, length, bidx, $stack6, $stack8, $stack9, $stack12, $stack13, $stack15, $stack16, $stack18, $stack22, $stack23, $stack24, $stack26;
        jdk.internal.util.xml.impl.Parser this, $stack20, $stack21, $stack25;
        char[] $stack7, $stack10, $stack11, $stack14, buff, $stack17, $stack19;

        this := @this: jdk.internal.util.xml.impl.Parser;

        cidx := @parameter0: int;

        bidx := @parameter1: int;

        $stack5 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        length = $stack5 - cidx;

        $stack6 = bidx + length;

        $stack9 = $stack6 + 1;

        $stack7 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack8 = lengthof $stack7;

        if $stack9 < $stack8 goto label1;

        $stack14 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack15 = lengthof $stack14;

        $stack16 = $stack15 + length;

        buff = newarray (char)[$stack16];

        $stack19 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack17 = this.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack18 = lengthof $stack17;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack19, 0, buff, 0, $stack18);

        this.<jdk.internal.util.xml.impl.Parser: char[] mBuff> = buff;

     label1:
        $stack20 = this;

        $stack11 = $stack20.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack22 = cidx;

        $stack21 = this;

        $stack10 = $stack21.<jdk.internal.util.xml.impl.Parser: char[] mBuff>;

        $stack23 = bidx;

        $stack24 = length;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack11, $stack22, $stack10, $stack23, $stack24);

        $stack25 = this;

        $stack12 = $stack25.<jdk.internal.util.xml.impl.Parser: int mBuffIdx>;

        $stack26 = length;

        $stack13 = $stack12 + $stack26;

        $stack25.<jdk.internal.util.xml.impl.Parser: int mBuffIdx> = $stack13;

        return;

        nop;
    }

    private void eappend(char)
    {
        bottom_type $stack3, $stack5, $stack7, $stack9, $stack11, $stack13, $stack15, $stack17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        jdk.internal.util.xml.impl.Parser this, $stack4, $stack6, $stack8, $stack10, $stack12, $stack14, $stack16, $stack18;
        char $stack2, ch, $stack17#1, $stack15#2, $stack13#3, $stack11#4, $stack9#5, $stack7#6, $stack5#7, $stack3#8;

        this := @this: jdk.internal.util.xml.impl.Parser;

        ch := @parameter0: char;

        $stack2 = this.<jdk.internal.util.xml.impl.Parser: char mESt>;

        $i0 = (int) $stack2;

        lookupswitch($i0)
        {
            case 34: goto label35;
            case 38: goto label35;
            case 39: goto label35;
            case 60: goto label35;
            case 62: goto label35;
            case 256: goto label01;
            case 257: goto label07;
            case 258: goto label10;
            case 259: goto label13;
            case 260: goto label17;
            case 261: goto label20;
            case 262: goto label23;
            case 263: goto label26;
            case 264: goto label29;
            case 265: goto label32;
            default: goto label36;
        };

     label01:
        $i1 = (int) ch;

        lookupswitch($i1)
        {
            case 97: goto label04;
            case 103: goto label03;
            case 108: goto label02;
            case 113: goto label05;
            default: goto label06;
        };

     label02:
        this.<jdk.internal.util.xml.impl.Parser: char mESt> = 257;

        goto label36;

     label03:
        this.<jdk.internal.util.xml.impl.Parser: char mESt> = 258;

        goto label36;

     label04:
        this.<jdk.internal.util.xml.impl.Parser: char mESt> = 259;

        goto label36;

     label05:
        this.<jdk.internal.util.xml.impl.Parser: char mESt> = 263;

        goto label36;

     label06:
        this.<jdk.internal.util.xml.impl.Parser: char mESt> = 512;

        goto label36;

     label07:
        $stack18 = this;

        $i2 = (int) ch;

        if $i2 != 116 goto label08;

        $stack17#1 = 60;

        goto label09;

     label08:
        $stack17#1 = 512;

     label09:
        $stack18.<jdk.internal.util.xml.impl.Parser: char mESt> = $stack17#1;

        goto label36;

     label10:
        $stack16 = this;

        $i3 = (int) ch;

        if $i3 != 116 goto label11;

        $stack15#2 = 62;

        goto label12;

     label11:
        $stack15#2 = 512;

     label12:
        $stack16.<jdk.internal.util.xml.impl.Parser: char mESt> = $stack15#2;

        goto label36;

     label13:
        $i4 = (int) ch;

        lookupswitch($i4)
        {
            case 109: goto label14;
            case 112: goto label15;
            default: goto label16;
        };

     label14:
        this.<jdk.internal.util.xml.impl.Parser: char mESt> = 260;

        goto label36;

     label15:
        this.<jdk.internal.util.xml.impl.Parser: char mESt> = 261;

        goto label36;

     label16:
        this.<jdk.internal.util.xml.impl.Parser: char mESt> = 512;

        goto label36;

     label17:
        $stack14 = this;

        $i5 = (int) ch;

        if $i5 != 112 goto label18;

        $stack13#3 = 38;

        goto label19;

     label18:
        $stack13#3 = 512;

     label19:
        $stack14.<jdk.internal.util.xml.impl.Parser: char mESt> = $stack13#3;

        goto label36;

     label20:
        $stack12 = this;

        $i6 = (int) ch;

        if $i6 != 111 goto label21;

        $stack11#4 = 262;

        goto label22;

     label21:
        $stack11#4 = 512;

     label22:
        $stack12.<jdk.internal.util.xml.impl.Parser: char mESt> = $stack11#4;

        goto label36;

     label23:
        $stack10 = this;

        $i7 = (int) ch;

        if $i7 != 115 goto label24;

        $stack9#5 = 39;

        goto label25;

     label24:
        $stack9#5 = 512;

     label25:
        $stack10.<jdk.internal.util.xml.impl.Parser: char mESt> = $stack9#5;

        goto label36;

     label26:
        $stack8 = this;

        $i8 = (int) ch;

        if $i8 != 117 goto label27;

        $stack7#6 = 264;

        goto label28;

     label27:
        $stack7#6 = 512;

     label28:
        $stack8.<jdk.internal.util.xml.impl.Parser: char mESt> = $stack7#6;

        goto label36;

     label29:
        $stack6 = this;

        $i9 = (int) ch;

        if $i9 != 111 goto label30;

        $stack5#7 = 265;

        goto label31;

     label30:
        $stack5#7 = 512;

     label31:
        $stack6.<jdk.internal.util.xml.impl.Parser: char mESt> = $stack5#7;

        goto label36;

     label32:
        $stack4 = this;

        $i10 = (int) ch;

        if $i10 != 116 goto label33;

        $stack3#8 = 34;

        goto label34;

     label33:
        $stack3#8 = 512;

     label34:
        $stack4.<jdk.internal.util.xml.impl.Parser: char mESt> = $stack3#8;

        goto label36;

     label35:
        this.<jdk.internal.util.xml.impl.Parser: char mESt> = 512;

     label36:
        return;

        nop;
    }

    protected void setinp(jdk.internal.org.xml.sax.InputSource) throws java.lang.Exception
    {
        bottom_type reader, $stack10, $stack11, $stack12, $stack13, $stack14, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, expenc;
        java.io.Reader $stack8, $stack17, $stack27, $stack32, $stack37, $stack38, $stack43, $stack46, $stack47, $stack49, reader#1, $stack20#8, $stack20#9;
        java.lang.String $stack15, $stack18, $stack25, $stack28, $stack34, $stack39, $stack40, $stack44, $stack50, expenc#2, expenc#3, $stack12#16, $stack12#17, $stack14#24, $stack14#25;
        jdk.internal.util.xml.impl.Parser this, $stack35, $stack48, $stack52, $stack19#4, $stack19#5, $stack21#10, $stack21#11, $stack23#18, $stack23#19;
        char[] $stack5;
        jdk.internal.util.xml.impl.Input $stack4, $stack6, $stack10#6, $stack10#7, $stack11#12, $stack11#13, $stack13#20, $stack13#21;
        boolean $stack29, $stack30, $stack41, $stack51;
        int $stack7;
        jdk.internal.org.xml.sax.InputSource is, $stack33, $stack53, $stack22#14, $stack22#15, $stack24#22, $stack24#23;
        java.io.InputStream $stack9, $stack16, $stack26, $stack31, $stack36, $stack42, $stack45;

        this := @this: jdk.internal.util.xml.impl.Parser;

        is := @parameter0: jdk.internal.org.xml.sax.InputSource;

        reader#1 = null;

        this.<jdk.internal.util.xml.impl.Parser: int mChIdx> = 0;

        this.<jdk.internal.util.xml.impl.Parser: int mChLen> = 0;

        $stack4 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack5 = $stack4.<jdk.internal.util.xml.impl.Input: char[] chars>;

        this.<jdk.internal.util.xml.impl.Parser: char[] mChars> = $stack5;

        $stack6 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack6.<jdk.internal.util.xml.impl.Input: java.io.Reader src> = null;

        $stack7 = this.<jdk.internal.util.xml.impl.Parser: int mPh>;

        if $stack7 >= 0 goto label01;

        this.<jdk.internal.util.xml.impl.Parser: boolean mIsSAlone> = 0;

     label01:
        $stack52 = this;

        $stack51 = 0;

        $stack52.<jdk.internal.util.xml.impl.Parser: boolean mIsSAloneSet> = $stack51;

        $stack53 = is;

        $stack8 = virtualinvoke $stack53.<jdk.internal.org.xml.sax.InputSource: java.io.Reader getCharacterStream()>();

        if $stack8 == null goto label02;

        $stack49 = virtualinvoke is.<jdk.internal.org.xml.sax.InputSource: java.io.Reader getCharacterStream()>();

        reader#1 = $stack49;

        $stack50 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: java.lang.String xml(java.io.Reader)>(reader#1);

        goto label10;

     label02:
        $stack9 = virtualinvoke is.<jdk.internal.org.xml.sax.InputSource: java.io.InputStream getByteStream()>();

        if $stack9 == null goto label09;

        $stack15 = virtualinvoke is.<jdk.internal.org.xml.sax.InputSource: java.lang.String getEncoding()>();

        if $stack15 == null goto label05;

        $stack39 = virtualinvoke is.<jdk.internal.org.xml.sax.InputSource: java.lang.String getEncoding()>();

        $stack40 = virtualinvoke $stack39.<java.lang.String: java.lang.String toUpperCase()>();

        expenc#2 = $stack40;

        $stack41 = virtualinvoke expenc#2.<java.lang.String: boolean equals(java.lang.Object)>("UTF-16");

        if $stack41 == 0 goto label03;

        $stack45 = virtualinvoke is.<jdk.internal.org.xml.sax.InputSource: java.io.InputStream getByteStream()>();

        $stack46 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: java.io.Reader bom(java.io.InputStream,char)>($stack45, 85);

        reader#1 = $stack46;

        goto label04;

     label03:
        $stack42 = virtualinvoke is.<jdk.internal.org.xml.sax.InputSource: java.io.InputStream getByteStream()>();

        $stack43 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: java.io.Reader enc(java.lang.String,java.io.InputStream)>(expenc#2, $stack42);

        reader#1 = $stack43;

     label04:
        $stack48 = this;

        $stack47 = reader#1;

        $stack44 = virtualinvoke $stack48.<jdk.internal.util.xml.impl.Parser: java.lang.String xml(java.io.Reader)>($stack47);

        goto label10;

     label05:
        $stack16 = virtualinvoke is.<jdk.internal.org.xml.sax.InputSource: java.io.InputStream getByteStream()>();

        $stack17 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: java.io.Reader bom(java.io.InputStream,char)>($stack16, 32);

        reader#1 = $stack17;

        if reader#1 != null goto label06;

        $stack36 = virtualinvoke is.<jdk.internal.org.xml.sax.InputSource: java.io.InputStream getByteStream()>();

        $stack37 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: java.io.Reader utf16(java.io.InputStream)>($stack36);

        reader#1 = $stack37;

     label06:
        $stack38 = reader#1;

        if $stack38 != null goto label08;

        $stack25 = "UTF-8";

        $stack26 = virtualinvoke is.<jdk.internal.org.xml.sax.InputSource: java.io.InputStream getByteStream()>();

        $stack27 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: java.io.Reader enc(java.lang.String,java.io.InputStream)>($stack25, $stack26);

        reader#1 = $stack27;

        $stack28 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: java.lang.String xml(java.io.Reader)>(reader#1);

        expenc#3 = $stack28;

        $stack29 = virtualinvoke expenc#3.<java.lang.String: boolean equals(java.lang.Object)>("UTF-8");

        if $stack29 != 0 goto label10;

        $stack30 = virtualinvoke expenc#3.<java.lang.String: boolean startsWith(java.lang.String)>("UTF-16");

        if $stack30 == 0 goto label07;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label07:
        $stack35 = this;

        $stack34 = expenc#3;

        $stack33 = is;

        $stack31 = virtualinvoke $stack33.<jdk.internal.org.xml.sax.InputSource: java.io.InputStream getByteStream()>();

        $stack32 = virtualinvoke $stack35.<jdk.internal.util.xml.impl.Parser: java.io.Reader enc(java.lang.String,java.io.InputStream)>($stack34, $stack31);

        reader#1 = $stack32;

        goto label10;

     label08:
        $stack18 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: java.lang.String xml(java.io.Reader)>(reader#1);

        goto label10;

     label09:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label10:
        $stack19#4 = this;

        $stack19#5 = $stack19#4;

        $stack10#6 = $stack19#5.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack10#7 = $stack10#6;

        $stack20#8 = reader#1;

        $stack20#9 = $stack20#8;

        $stack10#7.<jdk.internal.util.xml.impl.Input: java.io.Reader src> = $stack20#9;

        $stack21#10 = this;

        $stack21#11 = $stack21#10;

        $stack11#12 = $stack21#11.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack11#13 = $stack11#12;

        $stack22#14 = is;

        $stack22#15 = $stack22#14;

        $stack12#16 = virtualinvoke $stack22#15.<jdk.internal.org.xml.sax.InputSource: java.lang.String getPublicId()>();

        $stack12#17 = $stack12#16;

        $stack11#13.<jdk.internal.util.xml.impl.Input: java.lang.String pubid> = $stack12#17;

        $stack23#18 = this;

        $stack23#19 = $stack23#18;

        $stack13#20 = $stack23#19.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack13#21 = $stack13#20;

        $stack24#22 = is;

        $stack24#23 = $stack24#22;

        $stack14#24 = virtualinvoke $stack24#23.<jdk.internal.org.xml.sax.InputSource: java.lang.String getSystemId()>();

        $stack14#25 = $stack14#24;

        $stack13#21.<jdk.internal.util.xml.impl.Input: java.lang.String sysid> = $stack14#25;

        return;

        nop;
    }

    private java.io.Reader bom(java.io.InputStream, char) throws java.lang.Exception
    {
        jdk.internal.util.xml.impl.ReaderUTF16 $stack6, $stack10, $u1, $u2;
        jdk.internal.util.xml.impl.ReaderUTF8 $stack15, $stack24, $u0, $u3;
        java.io.UnsupportedEncodingException $stack26, $u4;
        int $stack4, val, $stack5, $stack9, $stack13, $stack14, $stack21, $stack22, $stack25, $stack27, $stack28, $stack30, $stack31, $stack32, $stack33, $stack34, $stack35, $stack36, $stack37, $stack38, $stack40, $stack41, $stack43, $stack44, $stack45, $stack46, $stack47, $stack50, $stack51, $stack55, $i0, $i1;
        jdk.internal.util.xml.impl.Parser this;
        char hint, $stack39, $stack48, $stack53;
        char[] $stack23, $stack29, $stack42, $stack52;
        java.io.InputStream is, $stack7, $stack11, $stack16, $stack17, $stack19;

        this := @this: jdk.internal.util.xml.impl.Parser;

        is := @parameter0: java.io.InputStream;

        hint := @parameter1: char;

        $stack4 = virtualinvoke is.<java.io.InputStream: int read()>();

        val = $stack4;

        lookupswitch(val)
        {
            case -1: goto label09;
            case 239: goto label01;
            case 254: goto label05;
            case 255: goto label07;
            default: goto label10;
        };

     label01:
        $i0 = (int) hint;

        if $i0 != 85 goto label02;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label02:
        $stack19 = is;

        $stack13 = virtualinvoke $stack19.<java.io.InputStream: int read()>();

        if $stack13 == 187 goto label03;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label03:
        $stack17 = is;

        $stack14 = virtualinvoke $stack17.<java.io.InputStream: int read()>();

        if $stack14 == 191 goto label04;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label04:
        $u0 = new jdk.internal.util.xml.impl.ReaderUTF8;

        $stack15 = $u0;

        $stack16 = is;

        specialinvoke $u0.<jdk.internal.util.xml.impl.ReaderUTF8: void <init>(java.io.InputStream)>($stack16);

        return $stack15;

     label05:
        $stack9 = virtualinvoke is.<java.io.InputStream: int read()>();

        if $stack9 == 255 goto label06;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label06:
        $u1 = new jdk.internal.util.xml.impl.ReaderUTF16;

        $stack10 = $u1;

        $stack11 = is;

        specialinvoke $u1.<jdk.internal.util.xml.impl.ReaderUTF16: void <init>(java.io.InputStream,char)>($stack11, 98);

        return $stack10;

     label07:
        $stack5 = virtualinvoke is.<java.io.InputStream: int read()>();

        if $stack5 == 254 goto label08;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label08:
        $u2 = new jdk.internal.util.xml.impl.ReaderUTF16;

        $stack6 = $u2;

        $stack7 = is;

        specialinvoke $u2.<jdk.internal.util.xml.impl.ReaderUTF16: void <init>(java.io.InputStream,char)>($stack7, 108);

        return $stack6;

     label09:
        $stack23 = this.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack21 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack22 = $stack21 + 1;

        this.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack22;

        $stack23[$stack21] = 65535;

        $u3 = new jdk.internal.util.xml.impl.ReaderUTF8;

        $stack24 = $u3;

        specialinvoke $u3.<jdk.internal.util.xml.impl.ReaderUTF8: void <init>(java.io.InputStream)>(is);

        return $stack24;

     label10:
        $i1 = (int) hint;

        if $i1 != 85 goto label11;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label11:
        $stack55 = val;

        $stack25 = $stack55 & 240;

        lookupswitch($stack25)
        {
            case 192: goto label12;
            case 208: goto label12;
            case 224: goto label13;
            case 240: goto label14;
            default: goto label15;
        };

     label12:
        $stack42 = this.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack40 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack41 = $stack40 + 1;

        this.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack41;

        $stack43 = val & 31;

        $stack44 = $stack43 << 6;

        $stack45 = virtualinvoke is.<java.io.InputStream: int read()>();

        $stack46 = $stack45 & 63;

        $stack47 = $stack44 | $stack46;

        $stack48 = (char) $stack47;

        $stack42[$stack40] = $stack48;

        goto label16;

     label13:
        $stack29 = this.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack27 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack28 = $stack27 + 1;

        this.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack28;

        $stack30 = val & 15;

        $stack31 = $stack30 << 12;

        $stack32 = virtualinvoke is.<java.io.InputStream: int read()>();

        $stack33 = $stack32 & 63;

        $stack34 = $stack33 << 6;

        $stack35 = $stack31 | $stack34;

        $stack36 = virtualinvoke is.<java.io.InputStream: int read()>();

        $stack37 = $stack36 & 63;

        $stack38 = $stack35 | $stack37;

        $stack39 = (char) $stack38;

        $stack29[$stack27] = $stack39;

        goto label16;

     label14:
        $u4 = new java.io.UnsupportedEncodingException;

        $stack26 = $u4;

        specialinvoke $u4.<java.io.UnsupportedEncodingException: void <init>()>();

        throw $stack26;

     label15:
        $stack52 = this.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack50 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack51 = $stack50 + 1;

        this.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack51;

        $stack53 = (char) val;

        $stack52[$stack50] = $stack53;

     label16:
        return null;
    }

    private java.io.Reader utf16(java.io.InputStream) throws java.lang.Exception
    {
        byte b0, $stack61, $stack50#1, $stack50#2, $stack28#11, $stack28#12;
        jdk.internal.util.xml.impl.Parser this, $stack27#5, $stack27#6, $stack30#15, $stack30#16, $stack31#19, $stack31#20, $stack34#31, $stack34#32, $stack35#35, $stack35#36, $stack38#47, $stack38#48, $stack39#51, $stack39#52;
        char[] $stack7, $stack43, $stack46, $stack52, $stack55, $stack13#7, $stack13#8, $stack16#17, $stack16#18, $stack20#33, $stack20#34, $stack24#49, $stack24#50;
        jdk.internal.util.xml.impl.ReaderUTF16 $stack48, $stack57, $u0, $u1;
        int $stack6, $stack9, b1, $stack10, b2, $stack11, b3, $stack44, $stack45, $stack53, $stack54, $stack14#21, $stack14#22, $stack15#25, $stack15#26, $stack33#27, $stack33#28, $stack18#37, $stack18#38, $stack19#41, $stack19#42, $stack37#43, $stack37#44, $stack22#53, $stack22#54, $stack23#57, $stack23#58, $stack41#59, $stack41#60, $i0, $i1;
        char $stack8, $stack42, $stack47, $stack51, $stack56, $stack12#13, $stack12#14, $stack17#29, $stack17#30, $stack21#45, $stack21#46, $stack25#61, $stack25#62;
        java.io.InputStream is, $stack58, $stack59, $stack60;

        this := @this: jdk.internal.util.xml.impl.Parser;

        is := @parameter0: java.io.InputStream;

        $stack6 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        if $stack6 == 0 goto label4;

        $stack7 = this.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack8 = $stack7[0];

        b0 = (byte) $stack8;

        if b0 == 0 goto label1;

        $i0 = (int) b0;

        if $i0 != 60 goto label4;

     label1:
        $stack58 = is;

        $stack9 = virtualinvoke $stack58.<java.io.InputStream: int read()>();

        b1 = $stack9;

        $stack59 = is;

        $stack10 = virtualinvoke $stack59.<java.io.InputStream: int read()>();

        b2 = $stack10;

        $stack60 = is;

        $stack11 = virtualinvoke $stack60.<java.io.InputStream: int read()>();

        b3 = $stack11;

        $stack61 = b0;

        if $stack61 != 0 goto label2;

        if b1 != 60 goto label2;

        if b2 != 0 goto label2;

        if b3 != 63 goto label2;

        $stack52 = this.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack51 = (char) b1;

        $stack52[0] = $stack51;

        $stack55 = this.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack53 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack54 = $stack53 + 1;

        this.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack54;

        $stack56 = (char) b3;

        $stack55[$stack53] = $stack56;

        $u0 = new jdk.internal.util.xml.impl.ReaderUTF16;

        $stack57 = $u0;

        specialinvoke $u0.<jdk.internal.util.xml.impl.ReaderUTF16: void <init>(java.io.InputStream,char)>(is, 98);

        return $stack57;

     label2:
        $stack50#1 = b0;

        $stack50#2 = $stack50#1;

        $i1 = (int) $stack50#2;

        if $i1 != 60 goto label3;

        if b1 != 0 goto label3;

        if b2 != 63 goto label3;

        if b3 != 0 goto label3;

        $stack43 = this.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack42 = (char) b0;

        $stack43[0] = $stack42;

        $stack46 = this.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack44 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack45 = $stack44 + 1;

        this.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack45;

        $stack47 = (char) b2;

        $stack46[$stack44] = $stack47;

        $u1 = new jdk.internal.util.xml.impl.ReaderUTF16;

        $stack48 = $u1;

        specialinvoke $u1.<jdk.internal.util.xml.impl.ReaderUTF16: void <init>(java.io.InputStream,char)>(is, 108);

        return $stack48;

     label3:
        $stack27#5 = this;

        $stack27#6 = $stack27#5;

        $stack13#7 = $stack27#6.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack13#8 = $stack13#7;

        $stack28#11 = b0;

        $stack28#12 = $stack28#11;

        $stack12#13 = (char) $stack28#12;

        $stack12#14 = $stack12#13;

        $stack13#8[0] = $stack12#14;

        $stack30#15 = this;

        $stack30#16 = $stack30#15;

        $stack16#17 = $stack30#16.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack16#18 = $stack16#17;

        $stack31#19 = this;

        $stack31#20 = $stack31#19;

        $stack14#21 = $stack31#20.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack14#22 = $stack14#21;

        $stack15#25 = $stack14#22 + 1;

        $stack15#26 = $stack15#25;

        $stack31#20.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack15#26;

        $stack33#27 = b1;

        $stack33#28 = $stack33#27;

        $stack17#29 = (char) $stack33#28;

        $stack17#30 = $stack17#29;

        $stack16#18[$stack14#22] = $stack17#30;

        $stack34#31 = this;

        $stack34#32 = $stack34#31;

        $stack20#33 = $stack34#32.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack20#34 = $stack20#33;

        $stack35#35 = this;

        $stack35#36 = $stack35#35;

        $stack18#37 = $stack35#36.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack18#38 = $stack18#37;

        $stack19#41 = $stack18#38 + 1;

        $stack19#42 = $stack19#41;

        $stack35#36.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack19#42;

        $stack37#43 = b2;

        $stack37#44 = $stack37#43;

        $stack21#45 = (char) $stack37#44;

        $stack21#46 = $stack21#45;

        $stack20#34[$stack18#38] = $stack21#46;

        $stack38#47 = this;

        $stack38#48 = $stack38#47;

        $stack24#49 = $stack38#48.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack24#50 = $stack24#49;

        $stack39#51 = this;

        $stack39#52 = $stack39#51;

        $stack22#53 = $stack39#52.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack22#54 = $stack22#53;

        $stack23#57 = $stack22#54 + 1;

        $stack23#58 = $stack23#57;

        $stack39#52.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack23#58;

        $stack41#59 = b3;

        $stack41#60 = $stack41#59;

        $stack25#61 = (char) $stack41#60;

        $stack25#62 = $stack25#61;

        $stack24#50[$stack22#54] = $stack25#62;

     label4:
        return null;
    }

    private java.lang.String xml(java.io.Reader) throws java.lang.Exception
    {
        byte $stack89#14, $stack83#15, $stack81#16, $stack79#17, $stack77#18, st#19, $stack13#20, $stack13#21;
        java.io.Reader reader;
        short $stack71, $stack78, $stack80, $stack82, $stack84, $stack90, st#3, $stack76#4, $stack76#5, $stack103#9, $stack103#10;
        java.lang.String $stack17, $stack18, $stack19, $stack21, $stack23, $stack41, $stack42, $stack48, $stack50, $stack51, enc#2, str#23, $stack25#28, $stack25#29, $stack26#30, $stack26#31, str#32, $stack36#33, $stack36#34;
        jdk.internal.util.xml.impl.Parser this, $stack15, $stack39, $stack44, $stack46, $stack47, $stack54, $stack58, $stack60, $stack66, $stack67, $stack69, $stack92, $stack93, $stack99, $stack100, $stack34#24, $stack34#25, $stack30#41, $stack30#42;
        char[] $stack63, $stack75, $stack88, $stack104;
        jdk.internal.util.xml.impl.Input $stack40, $stack43, $stack53;
        boolean $stack20, $stack22, $stack24, $stack28, $stack52, $stack27#37, $stack27#38;
        int byteRead, $stack8, $stack12, $stack32, $stack64, $stack65, $stack72, $stack73, $stack74, $stack85, $stack86, $stack87, val#7, val#11, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        char $stack9, $stack10, $stack11, $stack16, $stack62, $stack95, $stack97, $stack102, ch#6, $stack98#8, $stack91#12, ch#13, ch#22;

        this := @this: jdk.internal.util.xml.impl.Parser;

        reader := @parameter0: java.io.Reader;

        enc#2 = "UTF-8";

        st#3 = 0;

        byteRead = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

     label01:
        $stack76#4 = st#3;

        $stack76#5 = $stack76#4;

        if $stack76#5 < 0 goto label37;

        $stack65 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack63 = this.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack64 = lengthof $stack63;

        if $stack65 >= $stack64 goto label37;

        if st#3 >= byteRead goto label02;

        $stack104 = this.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        ch#6 = $stack104[st#3];

        goto label05;

     label02:
        $stack72 = virtualinvoke reader.<java.io.Reader: int read()>();

        val#7 = $stack72;

        if $stack72 < 0 goto label03;

        $stack98#8 = (char) val#7;

        goto label04;

     label03:
        $stack98#8 = 65535;

     label04:
        ch#6 = $stack98#8;

        $stack99 = this;

        $stack75 = $stack99.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack100 = this;

        $stack73 = $stack100.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack74 = $stack73 + 1;

        $stack100.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack74;

        $stack102 = ch#6;

        $stack75[$stack73] = $stack102;

     label05:
        $stack103#9 = st#3;

        $stack103#10 = $stack103#9;

        tableswitch($stack103#10)
        {
            case 0: goto label06;
            case 1: goto label14;
            case 2: goto label17;
            case 3: goto label20;
            case 4: goto label23;
            case 5: goto label26;
            case 6: goto label29;
            case 7: goto label33;
            default: goto label36;
        };

     label06:
        $i0 = (int) ch#6;

        lookupswitch($i0)
        {
            case 60: goto label07;
            case 65279: goto label08;
            default: goto label13;
        };

     label07:
        st#3 = 1;

        goto label01;

     label08:
        $stack85 = virtualinvoke reader.<java.io.Reader: int read()>();

        val#11 = $stack85;

        if $stack85 < 0 goto label09;

        $stack91#12 = (char) val#11;

        goto label10;

     label09:
        $stack91#12 = 65535;

     label10:
        ch#13 = $stack91#12;

        $stack92 = this;

        $stack88 = $stack92.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack93 = this;

        $stack86 = $stack93.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack87 = $stack86 - 1;

        $stack95 = ch#13;

        $stack88[$stack87] = $stack95;

        $stack97 = ch#13;

        $i1 = (int) $stack97;

        if $i1 != 60 goto label11;

        $stack89#14 = 1;

        goto label12;

     label11:
        $stack89#14 = -1;

     label12:
        $stack90 = (short) $stack89#14;

        st#3 = $stack90;

        goto label01;

     label13:
        st#3 = -1;

        goto label01;

     label14:
        $i2 = (int) ch#6;

        if $i2 != 63 goto label15;

        $stack83#15 = 2;

        goto label16;

     label15:
        $stack83#15 = -1;

     label16:
        $stack84 = (short) $stack83#15;

        st#3 = $stack84;

        goto label01;

     label17:
        $i3 = (int) ch#6;

        if $i3 != 120 goto label18;

        $stack81#16 = 3;

        goto label19;

     label18:
        $stack81#16 = -1;

     label19:
        $stack82 = (short) $stack81#16;

        st#3 = $stack82;

        goto label01;

     label20:
        $i4 = (int) ch#6;

        if $i4 != 109 goto label21;

        $stack79#17 = 4;

        goto label22;

     label21:
        $stack79#17 = -1;

     label22:
        $stack80 = (short) $stack79#17;

        st#3 = $stack80;

        goto label01;

     label23:
        $i5 = (int) ch#6;

        if $i5 != 108 goto label24;

        $stack77#18 = 5;

        goto label25;

     label24:
        $stack77#18 = -1;

     label25:
        $stack78 = (short) $stack77#18;

        st#3 = $stack78;

        goto label01;

     label26:
        $i6 = (int) ch#6;

        lookupswitch($i6)
        {
            case 9: goto label27;
            case 10: goto label27;
            case 13: goto label27;
            case 32: goto label27;
            default: goto label28;
        };

     label27:
        st#3 = 6;

        goto label01;

     label28:
        st#3 = -1;

        goto label01;

     label29:
        $i7 = (int) ch#6;

        lookupswitch($i7)
        {
            case 63: goto label30;
            case 65535: goto label31;
            default: goto label32;
        };

     label30:
        st#3 = 7;

        goto label01;

     label31:
        st#3 = -2;

        goto label01;

     label32:
        goto label01;

     label33:
        $i8 = (int) ch#6;

        lookupswitch($i8)
        {
            case 62: goto label34;
            case 65535: goto label34;
            default: goto label35;
        };

     label34:
        st#3 = -2;

        goto label01;

     label35:
        st#3 = 6;

        goto label01;

     label36:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label01;

     label37:
        $stack67 = this;

        $stack66 = this;

        $stack8 = $stack66.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack67.<jdk.internal.util.xml.impl.Parser: int mChLen> = $stack8;

        $stack69 = this;

        $stack69.<jdk.internal.util.xml.impl.Parser: int mChIdx> = 0;

        $stack71 = st#3;

        $i9 = (int) -1;

        if $stack71 != $i9 goto label38;

        return "UTF-8";

     label38:
        this.<jdk.internal.util.xml.impl.Parser: int mChIdx> = 5;

        st#19 = 0;

     label39:
        $stack13#20 = st#19;

        $stack13#21 = $stack13#20;

        if $stack13#21 < 0 goto label65;

        $stack9 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        ch#22 = $stack9;

        tableswitch(st#19)
        {
            case 0: goto label40;
            case 1: goto label41;
            case 2: goto label41;
            case 3: goto label41;
            case 4: goto label58;
            default: goto label64;
        };

     label40:
        $stack62 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char chtyp(char)>(ch#22);

        $i10 = (int) $stack62;

        if $i10 == 32 goto label39;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        st#19 = 1;

        goto label39;

     label41:
        $stack16 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char chtyp(char)>(ch#22);

        $i11 = (int) $stack16;

        lookupswitch($i11)
        {
            case 32: goto label54;
            case 63: goto label55;
            case 65: goto label42;
            case 95: goto label42;
            case 97: goto label42;
            default: goto label57;
        };

     label42:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        $stack17 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: java.lang.String name(boolean)>(0);

        $stack18 = virtualinvoke $stack17.<java.lang.String: java.lang.String toLowerCase()>();

        str#23 = $stack18;

        $stack19 = "version";

        $stack20 = virtualinvoke $stack19.<java.lang.String: boolean equals(java.lang.Object)>(str#23);

        if $stack20 != 1 goto label45;

        if st#19 == 1 goto label43;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label43:
        $stack50 = "1.0";

        $stack58 = this;

        $stack51 = virtualinvoke $stack58.<jdk.internal.util.xml.impl.Parser: java.lang.String eqstr(char)>(61);

        $stack52 = virtualinvoke $stack50.<java.lang.String: boolean equals(java.lang.Object)>($stack51);

        if $stack52 == 1 goto label44;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label44:
        $stack54 = this;

        $stack53 = $stack54.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack53.<jdk.internal.util.xml.impl.Input: char xmlver> = 256;

        st#19 = 2;

        goto label39;

     label45:
        $stack21 = "encoding";

        $stack22 = virtualinvoke $stack21.<java.lang.String: boolean equals(java.lang.Object)>(str#23);

        if $stack22 != 1 goto label47;

        if st#19 == 2 goto label46;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label46:
        $stack44 = this;

        $stack40 = $stack44.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack46 = this;

        $stack41 = virtualinvoke $stack46.<jdk.internal.util.xml.impl.Parser: java.lang.String eqstr(char)>(61);

        $stack42 = virtualinvoke $stack41.<java.lang.String: java.lang.String toUpperCase()>();

        $stack40.<jdk.internal.util.xml.impl.Input: java.lang.String xmlenc> = $stack42;

        $stack47 = this;

        $stack43 = $stack47.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack48 = $stack43.<jdk.internal.util.xml.impl.Input: java.lang.String xmlenc>;

        enc#2 = $stack48;

        st#19 = 3;

        goto label39;

     label47:
        $stack23 = "standalone";

        $stack24 = virtualinvoke $stack23.<java.lang.String: boolean equals(java.lang.Object)>(str#23);

        if $stack24 != 1 goto label53;

        if st#19 == 1 goto label48;

        $stack32 = this.<jdk.internal.util.xml.impl.Parser: int mPh>;

        if $stack32 < 0 goto label49;

     label48:
        $stack39 = this;

        virtualinvoke $stack39.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label49:
        $stack34#24 = this;

        $stack34#25 = $stack34#24;

        $stack25#28 = virtualinvoke $stack34#25.<jdk.internal.util.xml.impl.Parser: java.lang.String eqstr(char)>(61);

        $stack25#29 = $stack25#28;

        $stack26#30 = virtualinvoke $stack25#29.<java.lang.String: java.lang.String toLowerCase()>();

        $stack26#31 = $stack26#30;

        str#32 = $stack26#31;

        $stack36#33 = str#32;

        $stack36#34 = $stack36#33;

        $stack27#37 = virtualinvoke $stack36#34.<java.lang.String: boolean equals(java.lang.Object)>("yes");

        $stack27#38 = $stack27#37;

        if $stack27#38 != 1 goto label50;

        this.<jdk.internal.util.xml.impl.Parser: boolean mIsSAlone> = 1;

        goto label52;

     label50:
        $stack28 = virtualinvoke str#32.<java.lang.String: boolean equals(java.lang.Object)>("no");

        if $stack28 != 1 goto label51;

        this.<jdk.internal.util.xml.impl.Parser: boolean mIsSAlone> = 0;

        goto label52;

     label51:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label52:
        $stack30#41 = this;

        $stack30#42 = $stack30#41;

        $stack30#42.<jdk.internal.util.xml.impl.Parser: boolean mIsSAloneSet> = 1;

        st#19 = 4;

        goto label39;

     label53:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label39;

     label54:
        goto label39;

     label55:
        if st#19 != 1 goto label56;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label56:
        $stack60 = this;

        virtualinvoke $stack60.<jdk.internal.util.xml.impl.Parser: void bkch()>();

        st#19 = 4;

        goto label39;

     label57:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label39;

     label58:
        $stack10 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char chtyp(char)>(ch#22);

        $i12 = (int) $stack10;

        lookupswitch($i12)
        {
            case 32: goto label62;
            case 63: goto label59;
            default: goto label63;
        };

     label59:
        $stack11 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        $i13 = (int) $stack11;

        if $i13 == 62 goto label60;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label60:
        $stack15 = this;

        $stack12 = $stack15.<jdk.internal.util.xml.impl.Parser: int mPh>;

        if $stack12 > 0 goto label61;

        this.<jdk.internal.util.xml.impl.Parser: int mPh> = 1;

     label61:
        st#19 = -1;

        goto label39;

     label62:
        goto label39;

     label63:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label39;

     label64:
        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

        goto label39;

     label65:
        return enc#2;
    }

    private java.io.Reader enc(java.lang.String, java.io.InputStream) throws java.io.UnsupportedEncodingException
    {
        jdk.internal.util.xml.impl.ReaderUTF16 $stack7, $stack8;
        jdk.internal.util.xml.impl.Parser this;
        java.io.InputStreamReader $stack6;
        jdk.internal.util.xml.impl.ReaderUTF8 $stack9;
        java.lang.String name;
        boolean $stack3, $stack4, $stack5;
        java.io.InputStream is;

        this := @this: jdk.internal.util.xml.impl.Parser;

        name := @parameter0: java.lang.String;

        is := @parameter1: java.io.InputStream;

        $stack3 = virtualinvoke name.<java.lang.String: boolean equals(java.lang.Object)>("UTF-8");

        if $stack3 == 0 goto label1;

        $stack9 = new jdk.internal.util.xml.impl.ReaderUTF8;

        specialinvoke $stack9.<jdk.internal.util.xml.impl.ReaderUTF8: void <init>(java.io.InputStream)>(is);

        return $stack9;

     label1:
        $stack4 = virtualinvoke name.<java.lang.String: boolean equals(java.lang.Object)>("UTF-16LE");

        if $stack4 == 0 goto label2;

        $stack8 = new jdk.internal.util.xml.impl.ReaderUTF16;

        specialinvoke $stack8.<jdk.internal.util.xml.impl.ReaderUTF16: void <init>(java.io.InputStream,char)>(is, 108);

        return $stack8;

     label2:
        $stack5 = virtualinvoke name.<java.lang.String: boolean equals(java.lang.Object)>("UTF-16BE");

        if $stack5 == 0 goto label3;

        $stack7 = new jdk.internal.util.xml.impl.ReaderUTF16;

        specialinvoke $stack7.<jdk.internal.util.xml.impl.ReaderUTF16: void <init>(java.io.InputStream,char)>(is, 98);

        return $stack7;

     label3:
        $stack6 = new java.io.InputStreamReader;

        specialinvoke $stack6.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(is, name);

        return $stack6;

        nop;
    }

    protected void push(jdk.internal.util.xml.impl.Input)
    {
        jdk.internal.util.xml.impl.Parser this;
        int $stack2, $stack4, $stack8, $stack9;
        char[] $stack7;
        jdk.internal.util.xml.impl.Input $stack3, $stack5, inp, $stack6;

        this := @this: jdk.internal.util.xml.impl.Parser;

        inp := @parameter0: jdk.internal.util.xml.impl.Input;

        $stack3 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack2 = this.<jdk.internal.util.xml.impl.Parser: int mChLen>;

        $stack3.<jdk.internal.util.xml.impl.Input: int chLen> = $stack2;

        $stack5 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack4 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack5.<jdk.internal.util.xml.impl.Input: int chIdx> = $stack4;

        $stack6 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        inp.<jdk.internal.util.xml.impl.Input: jdk.internal.util.xml.impl.Input next> = $stack6;

        this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp> = inp;

        $stack7 = inp.<jdk.internal.util.xml.impl.Input: char[] chars>;

        this.<jdk.internal.util.xml.impl.Parser: char[] mChars> = $stack7;

        $stack8 = inp.<jdk.internal.util.xml.impl.Input: int chLen>;

        this.<jdk.internal.util.xml.impl.Parser: int mChLen> = $stack8;

        $stack9 = inp.<jdk.internal.util.xml.impl.Input: int chIdx>;

        this.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack9;

        return;

        nop;
    }

    protected void pop()
    {
        int $stack10, $stack12;
        jdk.internal.util.xml.impl.Parser this, $stack20, $stack17#1, $stack17#2, $stack16#3, $stack16#4, $stack18#9, $stack18#10;
        java.io.IOException $stack19;
        java.io.Reader $stack3, $stack14;
        char[] $stack8;
        jdk.internal.util.xml.impl.Input $stack2, $stack7, $stack9, $stack11, $stack13, $stack15, $stack4#5, $stack4#6, $stack5#7, $stack5#8, $stack6#11, $stack6#12;

        this := @this: jdk.internal.util.xml.impl.Parser;

        $stack2 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack3 = $stack2.<jdk.internal.util.xml.impl.Input: java.io.Reader src>;

        if $stack3 == null goto label5;

     label1:
        $stack13 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack14 = $stack13.<jdk.internal.util.xml.impl.Input: java.io.Reader src>;

        virtualinvoke $stack14.<java.io.Reader: void close()>();

     label2:
        goto label4;

     label3:
        $stack19 := @caughtexception;

     label4:
        $stack20 = this;

        $stack15 = $stack20.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack15.<jdk.internal.util.xml.impl.Input: java.io.Reader src> = null;

     label5:
        $stack17#1 = this;

        $stack17#2 = $stack17#1;

        $stack16#3 = this;

        $stack16#4 = $stack16#3;

        $stack4#5 = $stack16#4.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack4#6 = $stack4#5;

        $stack5#7 = $stack4#6.<jdk.internal.util.xml.impl.Input: jdk.internal.util.xml.impl.Input next>;

        $stack5#8 = $stack5#7;

        $stack17#2.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp> = $stack5#8;

        $stack18#9 = this;

        $stack18#10 = $stack18#9;

        $stack6#11 = $stack18#10.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack6#12 = $stack6#11;

        if $stack6#12 == null goto label6;

        $stack7 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack8 = $stack7.<jdk.internal.util.xml.impl.Input: char[] chars>;

        this.<jdk.internal.util.xml.impl.Parser: char[] mChars> = $stack8;

        $stack9 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack10 = $stack9.<jdk.internal.util.xml.impl.Input: int chLen>;

        this.<jdk.internal.util.xml.impl.Parser: int mChLen> = $stack10;

        $stack11 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack12 = $stack11.<jdk.internal.util.xml.impl.Input: int chIdx>;

        this.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack12;

        goto label7;

     label6:
        this.<jdk.internal.util.xml.impl.Parser: char[] mChars> = null;

        this.<jdk.internal.util.xml.impl.Parser: int mChLen> = 0;

        this.<jdk.internal.util.xml.impl.Parser: int mChIdx> = 0;

     label7:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected char chtyp(char)
    {
        byte[] $stack3;
        jdk.internal.util.xml.impl.Parser this;
        char ch, $stack5, $stack2#1, $c0;
        byte $stack4;
        bottom_type $stack2;
        int $i0, $i1, $i2, $i3;

        this := @this: jdk.internal.util.xml.impl.Parser;

        ch := @parameter0: char;

        $i0 = (int) ch;

        if $i0 >= 128 goto label1;

        $stack3 = <jdk.internal.util.xml.impl.Parser: byte[] asctyp>;

        $i1 = (int) ch;

        $stack4 = $stack3[$i1];

        $stack5 = (char) $stack4;

        return $stack5;

     label1:
        $i2 = (int) ch;

        $c0 = 65535;

        $i3 = (int) $c0;

        if $i2 == $i3 goto label2;

        $stack2#1 = 88;

        goto label3;

     label2:
        $stack2#1 = 90;

     label3:
        return $stack2#1;

        nop;
    }

    protected char getch() throws java.io.IOException
    {
        byte $stack22;
        bottom_type $stack4, $stack5, $stack6, $stack7, $stack16, $stack17, $stack18;
        boolean $stack18#9, $stack18#10;
        java.io.Reader $stack9, $stack14;
        int $stack2, $stack3, $stack12, $stack15, Num, $stack4#7, $stack4#8, $stack5#11, $stack5#12;
        jdk.internal.util.xml.impl.Parser this, $stack23, $stack16#1, $stack16#2, $stack17#5, $stack17#6;
        char $stack24, $stack25, $stack7#13, $stack7#14;
        char[] $stack11, $stack13, $stack21, $stack6#3, $stack6#4;
        jdk.internal.util.xml.impl.Input $stack8, $stack10, $stack19, $stack20;

        this := @this: jdk.internal.util.xml.impl.Parser;

        $stack3 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack2 = this.<jdk.internal.util.xml.impl.Parser: int mChLen>;

        if $stack3 < $stack2 goto label5;

        $stack8 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack9 = $stack8.<jdk.internal.util.xml.impl.Input: java.io.Reader src>;

        if $stack9 != null goto label1;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void pop()>();

        $stack25 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        return $stack25;

     label1:
        $stack10 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack14 = $stack10.<jdk.internal.util.xml.impl.Input: java.io.Reader src>;

        $stack13 = this.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack11 = this.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack12 = lengthof $stack11;

        $stack15 = virtualinvoke $stack14.<java.io.Reader: int read(char[],int,int)>($stack13, 0, $stack12);

        Num = $stack15;

        if Num >= 0 goto label3;

        $stack20 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mInp>;

        $stack19 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Input mDoc>;

        if $stack20 == $stack19 goto label2;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void pop()>();

        $stack24 = virtualinvoke this.<jdk.internal.util.xml.impl.Parser: char getch()>();

        return $stack24;

     label2:
        $stack21 = this.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack21[0] = 65535;

        this.<jdk.internal.util.xml.impl.Parser: int mChLen> = 1;

        goto label4;

     label3:
        this.<jdk.internal.util.xml.impl.Parser: int mChLen> = Num;

     label4:
        $stack23 = this;

        $stack22 = 0;

        $stack23.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack22;

     label5:
        $stack16#1 = this;

        $stack16#2 = $stack16#1;

        $stack6#3 = $stack16#2.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack6#4 = $stack6#3;

        $stack17#5 = this;

        $stack17#6 = $stack17#5;

        $stack4#7 = $stack17#6.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack4#8 = $stack4#7;

        $stack18#9 = 1;

        $stack18#10 = $stack18#9;

        $stack5#11 = $stack4#8 + $stack18#10;

        $stack5#12 = $stack5#11;

        $stack17#6.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack5#12;

        $stack7#13 = $stack6#4[$stack4#8];

        $stack7#14 = $stack7#13;

        return $stack7#14;

        nop;
    }

    protected void bkch() throws java.lang.Exception
    {
        jdk.internal.util.xml.impl.Parser this, $stack4;
        int $stack1, $stack2, $stack3;
        boolean $stack5;

        this := @this: jdk.internal.util.xml.impl.Parser;

        $stack1 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        if $stack1 > 0 goto label1;

        virtualinvoke this.<jdk.internal.util.xml.impl.Parser: void panic(java.lang.String)>("");

     label1:
        $stack4 = this;

        $stack2 = $stack4.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack5 = 1;

        $stack3 = $stack2 - $stack5;

        $stack4.<jdk.internal.util.xml.impl.Parser: int mChIdx> = $stack3;

        return;

        nop;
    }

    protected void setch(char)
    {
        jdk.internal.util.xml.impl.Parser this;
        int $stack2;
        char[] $stack3;
        char ch;

        this := @this: jdk.internal.util.xml.impl.Parser;

        ch := @parameter0: char;

        $stack3 = this.<jdk.internal.util.xml.impl.Parser: char[] mChars>;

        $stack2 = this.<jdk.internal.util.xml.impl.Parser: int mChIdx>;

        $stack3[$stack2] = ch;

        return;

        nop;
    }

    protected jdk.internal.util.xml.impl.Pair find(jdk.internal.util.xml.impl.Pair, char[])
    {
        jdk.internal.util.xml.impl.Parser this;
        bottom_type pair;
        char[] qname;
        jdk.internal.util.xml.impl.Pair chain, $stack5, pair#1;
        boolean $stack4;

        this := @this: jdk.internal.util.xml.impl.Parser;

        chain := @parameter0: jdk.internal.util.xml.impl.Pair;

        qname := @parameter1: char[];

        pair#1 = chain;

     label1:
        $stack5 = pair#1;

        if $stack5 == null goto label3;

        $stack4 = virtualinvoke pair#1.<jdk.internal.util.xml.impl.Pair: boolean eqname(char[])>(qname);

        if $stack4 != 1 goto label2;

        return pair#1;

     label2:
        pair#1 = pair#1.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair next>;

        goto label1;

     label3:
        return null;

        nop;
    }

    protected jdk.internal.util.xml.impl.Pair pair(jdk.internal.util.xml.impl.Pair)
    {
        jdk.internal.util.xml.impl.Parser this;
        jdk.internal.util.xml.impl.Pair $stack3, $stack4, next, $stack5, $stack6, $stack7, $stack8, pair#1;
        bottom_type pair;

        this := @this: jdk.internal.util.xml.impl.Parser;

        next := @parameter0: jdk.internal.util.xml.impl.Pair;

        $stack3 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mDltd>;

        if $stack3 == null goto label1;

        pair#1 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mDltd>;

        $stack5 = pair#1.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair next>;

        this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mDltd> = $stack5;

        goto label2;

     label1:
        $stack4 = new jdk.internal.util.xml.impl.Pair;

        specialinvoke $stack4.<jdk.internal.util.xml.impl.Pair: void <init>()>();

        pair#1 = $stack4;

     label2:
        $stack7 = pair#1;

        $stack6 = next;

        $stack7.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair next> = $stack6;

        $stack8 = pair#1;

        return $stack8;

        nop;
    }

    protected jdk.internal.util.xml.impl.Pair del(jdk.internal.util.xml.impl.Pair)
    {
        jdk.internal.util.xml.impl.Parser this;
        jdk.internal.util.xml.impl.Pair pair, next, $stack3;

        this := @this: jdk.internal.util.xml.impl.Parser;

        pair := @parameter0: jdk.internal.util.xml.impl.Pair;

        next = pair.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair next>;

        pair.<jdk.internal.util.xml.impl.Pair: java.lang.String name> = null;

        pair.<jdk.internal.util.xml.impl.Pair: java.lang.String value> = null;

        pair.<jdk.internal.util.xml.impl.Pair: char[] chars> = null;

        pair.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair list> = null;

        $stack3 = this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mDltd>;

        pair.<jdk.internal.util.xml.impl.Pair: jdk.internal.util.xml.impl.Pair next> = $stack3;

        this.<jdk.internal.util.xml.impl.Parser: jdk.internal.util.xml.impl.Pair mDltd> = pair;

        return next;

        nop;
    }

    static void <clinit>()
    {
        byte[] $stack15, $stack16, $stack17, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack27, $stack28, $stack32, $stack38, $stack43, $stack46, $stack54, $stack59, $stack66, $stack71, $stack78, $stack83, $stack90, $stack95;
        byte $stack34, $stack39, $stack44, $stack48, $stack53, $stack60, $stack65, $stack67, $stack72, $stack77, $stack79, $stack84, $stack89, $stack91, $stack96;
        bottom_type i;
        short $stack30, $stack31, $stack35, $stack37, $stack40, $stack42, $stack45, $stack49, $stack51, $stack52, $stack55, $stack56, $stack58, $stack61, $stack63, $stack64, $stack68, $stack70, $stack73, $stack75, $stack76, $stack80, $stack82, $stack85, $stack87, $stack88, $stack92, $stack94, $stack97, i#1, i#2, i#3, i#4;
        char[] $stack1, $stack2, $stack3, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14;
        int $stack29, $stack33, $stack36, $stack41, $stack47, $stack50, $stack57, $stack62, $stack69, $stack74, $stack81, $stack86, $stack93;

        <jdk.internal.util.xml.impl.Parser: int EV_ENT> = 10;

        <jdk.internal.util.xml.impl.Parser: int EV_DTD> = 9;

        <jdk.internal.util.xml.impl.Parser: int EV_COMM> = 8;

        <jdk.internal.util.xml.impl.Parser: int EV_CDAT> = 7;

        <jdk.internal.util.xml.impl.Parser: int EV_PI> = 6;

        <jdk.internal.util.xml.impl.Parser: int EV_WSPC> = 5;

        <jdk.internal.util.xml.impl.Parser: int EV_TEXT> = 4;

        <jdk.internal.util.xml.impl.Parser: int EV_ELME> = 3;

        <jdk.internal.util.xml.impl.Parser: int EV_ELMS> = 2;

        <jdk.internal.util.xml.impl.Parser: int EV_ELM> = 1;

        <jdk.internal.util.xml.impl.Parser: int EV_NULL> = 0;

        <jdk.internal.util.xml.impl.Parser: int PH_AFTER_DOC> = 6;

        <jdk.internal.util.xml.impl.Parser: int PH_DOCELM_MISC> = 5;

        <jdk.internal.util.xml.impl.Parser: int PH_DOCELM> = 4;

        <jdk.internal.util.xml.impl.Parser: int PH_DTD_MISC> = 3;

        <jdk.internal.util.xml.impl.Parser: int PH_DTD> = 2;

        <jdk.internal.util.xml.impl.Parser: int PH_MISC_DTD> = 1;

        <jdk.internal.util.xml.impl.Parser: int PH_DOC_START> = 0;

        <jdk.internal.util.xml.impl.Parser: int PH_BEFORE_DOC> = -1;

        <jdk.internal.util.xml.impl.Parser: char EOS> = 65535;

        <jdk.internal.util.xml.impl.Parser: int BUFFSIZE_PARSER> = 128;

        <jdk.internal.util.xml.impl.Parser: int BUFFSIZE_READER> = 512;

        <jdk.internal.util.xml.impl.Parser: java.lang.String FAULT> = "";

        $stack1 = newarray (char)[1];

        <jdk.internal.util.xml.impl.Parser: char[] NONS> = $stack1;

        $stack2 = <jdk.internal.util.xml.impl.Parser: char[] NONS>;

        $stack2[0] = 0;

        $stack3 = newarray (char)[4];

        <jdk.internal.util.xml.impl.Parser: char[] XML> = $stack3;

        $stack4 = <jdk.internal.util.xml.impl.Parser: char[] XML>;

        $stack4[0] = 4;

        $stack5 = <jdk.internal.util.xml.impl.Parser: char[] XML>;

        $stack5[1] = 120;

        $stack6 = <jdk.internal.util.xml.impl.Parser: char[] XML>;

        $stack6[2] = 109;

        $stack7 = <jdk.internal.util.xml.impl.Parser: char[] XML>;

        $stack7[3] = 108;

        $stack8 = newarray (char)[6];

        <jdk.internal.util.xml.impl.Parser: char[] XMLNS> = $stack8;

        $stack9 = <jdk.internal.util.xml.impl.Parser: char[] XMLNS>;

        $stack9[0] = 6;

        $stack10 = <jdk.internal.util.xml.impl.Parser: char[] XMLNS>;

        $stack10[1] = 120;

        $stack11 = <jdk.internal.util.xml.impl.Parser: char[] XMLNS>;

        $stack11[2] = 109;

        $stack12 = <jdk.internal.util.xml.impl.Parser: char[] XMLNS>;

        $stack12[3] = 108;

        $stack13 = <jdk.internal.util.xml.impl.Parser: char[] XMLNS>;

        $stack13[4] = 110;

        $stack14 = <jdk.internal.util.xml.impl.Parser: char[] XMLNS>;

        $stack14[5] = 115;

        i#1 = 0;

        $stack15 = newarray (byte)[128];

        <jdk.internal.util.xml.impl.Parser: byte[] asctyp> = $stack15;

     label01:
        $stack97 = i#1;

        $stack96 = 32;

        if $stack97 >= $stack96 goto label02;

        $stack95 = <jdk.internal.util.xml.impl.Parser: byte[] asctyp>;

        $stack94 = i#1;

        $stack93 = i#1 + 1;

        i#1 = (short) $stack93;

        $stack95[$stack94] = 122;

        goto label01;

     label02:
        $stack16 = <jdk.internal.util.xml.impl.Parser: byte[] asctyp>;

        $stack16[9] = 32;

        $stack17 = <jdk.internal.util.xml.impl.Parser: byte[] asctyp>;

        $stack17[13] = 32;

        $stack18 = <jdk.internal.util.xml.impl.Parser: byte[] asctyp>;

        $stack18[10] = 32;

     label03:
        $stack92 = i#1;

        $stack91 = 48;

        if $stack92 >= $stack91 goto label04;

        $stack90 = <jdk.internal.util.xml.impl.Parser: byte[] asctyp>;

        $stack87 = i#1;

        $stack88 = i#1;

        $stack86 = i#1 + 1;

        i#1 = (short) $stack86;

        $stack89 = (byte) $stack88;

        $stack90[$stack87] = $stack89;

        goto label03;

     label04:
        $stack85 = i#1;

        $stack84 = 57;

        if $stack85 > $stack84 goto label05;

        $stack83 = <jdk.internal.util.xml.impl.Parser: byte[] asctyp>;

        $stack82 = i#1;

        $stack81 = i#1 + 1;

        i#1 = (short) $stack81;

        $stack83[$stack82] = 100;

        goto label04;

     label05:
        $stack80 = i#1;

        $stack79 = 65;

        if $stack80 >= $stack79 goto label06;

        $stack78 = <jdk.internal.util.xml.impl.Parser: byte[] asctyp>;

        $stack75 = i#1;

        $stack76 = i#1;

        $stack74 = i#1 + 1;

        i#1 = (short) $stack74;

        $stack77 = (byte) $stack76;

        $stack78[$stack75] = $stack77;

        goto label05;

     label06:
        $stack73 = i#1;

        $stack72 = 90;

        if $stack73 > $stack72 goto label07;

        $stack71 = <jdk.internal.util.xml.impl.Parser: byte[] asctyp>;

        $stack70 = i#1;

        $stack69 = i#1 + 1;

        i#1 = (short) $stack69;

        $stack71[$stack70] = 65;

        goto label06;

     label07:
        $stack68 = i#1;

        $stack67 = 97;

        if $stack68 >= $stack67 goto label08;

        $stack66 = <jdk.internal.util.xml.impl.Parser: byte[] asctyp>;

        $stack63 = i#1;

        $stack64 = i#1;

        $stack62 = i#1 + 1;

        i#1 = (short) $stack62;

        $stack65 = (byte) $stack64;

        $stack66[$stack63] = $stack65;

        goto label07;

     label08:
        $stack61 = i#1;

        $stack60 = 122;

        if $stack61 > $stack60 goto label09;

        $stack59 = <jdk.internal.util.xml.impl.Parser: byte[] asctyp>;

        $stack58 = i#1;

        $stack57 = i#1 + 1;

        i#1 = (short) $stack57;

        $stack59[$stack58] = 97;

        goto label08;

     label09:
        $stack56 = i#1;

        $stack55 = 128;

        if $stack56 >= $stack55 goto label10;

        $stack54 = <jdk.internal.util.xml.impl.Parser: byte[] asctyp>;

        $stack51 = i#1;

        $stack52 = i#1;

        $stack50 = i#1 + 1;

        i#1 = (short) $stack50;

        $stack53 = (byte) $stack52;

        $stack54[$stack51] = $stack53;

        goto label09;

     label10:
        $stack19 = newarray (byte)[128];

        <jdk.internal.util.xml.impl.Parser: byte[] nmttyp> = $stack19;

        i#2 = 0;

     label11:
        $stack49 = i#2;

        $stack48 = 48;

        if $stack49 >= $stack48 goto label12;

        $stack46 = <jdk.internal.util.xml.impl.Parser: byte[] nmttyp>;

        $stack46[i#2] = -1;

        $stack47 = i#2 + 1;

        i#2 = (short) $stack47;

        goto label11;

     label12:
        $stack45 = i#2;

        $stack44 = 57;

        if $stack45 > $stack44 goto label13;

        $stack43 = <jdk.internal.util.xml.impl.Parser: byte[] nmttyp>;

        $stack42 = i#2;

        $stack41 = i#2 + 1;

        i#2 = (short) $stack41;

        $stack43[$stack42] = 2;

        goto label12;

     label13:
        $stack40 = i#2;

        $stack39 = 65;

        if $stack40 >= $stack39 goto label14;

        $stack38 = <jdk.internal.util.xml.impl.Parser: byte[] nmttyp>;

        $stack37 = i#2;

        $stack36 = i#2 + 1;

        i#2 = (short) $stack36;

        $stack38[$stack37] = -1;

        goto label13;

     label14:
        i#3 = 91;

     label15:
        $stack35 = i#3;

        $stack34 = 97;

        if $stack35 >= $stack34 goto label16;

        $stack32 = <jdk.internal.util.xml.impl.Parser: byte[] nmttyp>;

        $stack32[i#3] = -1;

        $stack33 = i#3 + 1;

        i#3 = (short) $stack33;

        goto label15;

     label16:
        i#4 = 123;

     label17:
        $stack31 = i#4;

        $stack30 = 128;

        if $stack31 >= $stack30 goto label18;

        $stack28 = <jdk.internal.util.xml.impl.Parser: byte[] nmttyp>;

        $stack28[i#4] = -1;

        $stack29 = i#4 + 1;

        i#4 = (short) $stack29;

        goto label17;

     label18:
        $stack20 = <jdk.internal.util.xml.impl.Parser: byte[] nmttyp>;

        $stack20[95] = 0;

        $stack21 = <jdk.internal.util.xml.impl.Parser: byte[] nmttyp>;

        $stack21[58] = 1;

        $stack22 = <jdk.internal.util.xml.impl.Parser: byte[] nmttyp>;

        $stack22[46] = 2;

        $stack23 = <jdk.internal.util.xml.impl.Parser: byte[] nmttyp>;

        $stack23[45] = 2;

        $stack24 = <jdk.internal.util.xml.impl.Parser: byte[] nmttyp>;

        $stack24[32] = 3;

        $stack25 = <jdk.internal.util.xml.impl.Parser: byte[] nmttyp>;

        $stack25[9] = 3;

        $stack26 = <jdk.internal.util.xml.impl.Parser: byte[] nmttyp>;

        $stack26[13] = 3;

        $stack27 = <jdk.internal.util.xml.impl.Parser: byte[] nmttyp>;

        $stack27[10] = 3;

        return;
    }
}
