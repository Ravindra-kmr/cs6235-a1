public class jdk.internal.util.xml.impl.ReaderUTF16 extends java.io.Reader
{
    private java.io.InputStream is;
    private char bo;

    public void <init>(java.io.InputStream, char)
    {
        jdk.internal.util.xml.impl.ReaderUTF16 this, $stack4, $stack6;
        char bo, $stack3;
        java.lang.IllegalArgumentException $stack7, $u0;
        int $i0;
        java.io.InputStream is, $stack5;

        this := @this: jdk.internal.util.xml.impl.ReaderUTF16;

        is := @parameter0: java.io.InputStream;

        bo := @parameter1: char;

        specialinvoke this.<java.io.Reader: void <init>()>();

        $i0 = (int) bo;

        lookupswitch($i0)
        {
            case 98: goto label2;
            case 108: goto label1;
            default: goto label3;
        };

     label1:
        goto label4;

     label2:
        goto label4;

     label3:
        $u0 = new java.lang.IllegalArgumentException;

        $stack7 = $u0;

        specialinvoke $u0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("");

        throw $stack7;

     label4:
        $stack4 = this;

        $stack3 = bo;

        $stack4.<jdk.internal.util.xml.impl.ReaderUTF16: char bo> = $stack3;

        $stack6 = this;

        $stack5 = is;

        $stack6.<jdk.internal.util.xml.impl.ReaderUTF16: java.io.InputStream is> = $stack5;

        return;

        nop;
    }

    public int read(char[], int, int) throws java.io.IOException
    {
        byte $b0, $b1;
        bottom_type num, val, off, $stack18, $stack31;
        jdk.internal.util.xml.impl.ReaderUTF16 this;
        int len, $stack8, $stack9, $stack11, $stack12, $stack13, $stack14, $stack16, $stack17, $stack19, $stack21, $stack22, $stack24, $stack25, $stack26, $stack27, $stack29, $stack30, off#1, num#2, val#3, $stack31#4, val#5, $stack18#6, $i0, $i1, $i2;
        char $stack6, $stack15, $stack28;
        char[] cbuf;
        java.io.InputStream $stack7, $stack10, $stack20, $stack23;

        this := @this: jdk.internal.util.xml.impl.ReaderUTF16;

        cbuf := @parameter0: char[];

        off#1 := @parameter1: int;

        len := @parameter2: int;

        num#2 = 0;

        $stack6 = this.<jdk.internal.util.xml.impl.ReaderUTF16: char bo>;

        $i0 = (int) $stack6;

        if $i0 != 98 goto label5;

     label1:
        $stack30 = num#2;

        $stack29 = len;

        if $stack30 >= $stack29 goto label9;

        $stack20 = this.<jdk.internal.util.xml.impl.ReaderUTF16: java.io.InputStream is>;

        $stack21 = virtualinvoke $stack20.<java.io.InputStream: int read()>();

        val#3 = $stack21;

        if $stack21 >= 0 goto label4;

        if num#2 == 0 goto label2;

        $stack31#4 = num#2;

        goto label3;

     label2:
        $b0 = -1;

        $i1 = (int) $b0;

        $stack31#4 = $i1;

     label3:
        return $stack31#4;

     label4:
        $stack22 = off#1;

        off#1 = off#1 + 1;

        $stack24 = val#3 << 8;

        $stack23 = this.<jdk.internal.util.xml.impl.ReaderUTF16: java.io.InputStream is>;

        $stack25 = virtualinvoke $stack23.<java.io.InputStream: int read()>();

        $stack26 = $stack25 & 255;

        $stack27 = $stack24 | $stack26;

        $stack28 = (char) $stack27;

        cbuf[$stack22] = $stack28;

        num#2 = num#2 + 1;

        goto label1;

     label5:
        $stack17 = num#2;

        $stack16 = len;

        if $stack17 >= $stack16 goto label9;

        $stack7 = this.<jdk.internal.util.xml.impl.ReaderUTF16: java.io.InputStream is>;

        $stack8 = virtualinvoke $stack7.<java.io.InputStream: int read()>();

        val#5 = $stack8;

        if $stack8 >= 0 goto label8;

        if num#2 == 0 goto label6;

        $stack18#6 = num#2;

        goto label7;

     label6:
        $b1 = -1;

        $i2 = (int) $b1;

        $stack18#6 = $i2;

     label7:
        return $stack18#6;

     label8:
        $stack9 = off#1;

        off#1 = off#1 + 1;

        $stack10 = this.<jdk.internal.util.xml.impl.ReaderUTF16: java.io.InputStream is>;

        $stack11 = virtualinvoke $stack10.<java.io.InputStream: int read()>();

        $stack13 = $stack11 << 8;

        $stack12 = val#5 & 255;

        $stack14 = $stack13 | $stack12;

        $stack15 = (char) $stack14;

        cbuf[$stack9] = $stack15;

        num#2 = num#2 + 1;

        goto label5;

     label9:
        $stack19 = num#2;

        return $stack19;

        nop;
    }

    public int read() throws java.io.IOException
    {
        byte $b0;
        bottom_type val;
        int $stack3, $stack6, $stack7, $stack8, $stack9, $stack11, $stack12, $stack13, $stack14, val#1, $i0, $i1, $i2;
        jdk.internal.util.xml.impl.ReaderUTF16 this;
        char $stack4, $stack15, val#2;
        java.io.InputStream $stack2, $stack5, $stack10;

        this := @this: jdk.internal.util.xml.impl.ReaderUTF16;

        $stack2 = this.<jdk.internal.util.xml.impl.ReaderUTF16: java.io.InputStream is>;

        $stack3 = virtualinvoke $stack2.<java.io.InputStream: int read()>();

        val#1 = $stack3;

        if $stack3 >= 0 goto label1;

        $b0 = -1;

        $i0 = (int) $b0;

        return $i0;

     label1:
        $stack4 = this.<jdk.internal.util.xml.impl.ReaderUTF16: char bo>;

        $i1 = (int) $stack4;

        if $i1 != 98 goto label2;

        $stack11 = val#1 << 8;

        $stack10 = this.<jdk.internal.util.xml.impl.ReaderUTF16: java.io.InputStream is>;

        $stack12 = virtualinvoke $stack10.<java.io.InputStream: int read()>();

        $stack13 = $stack12 & 255;

        $stack14 = $stack11 | $stack13;

        val#2 = (char) $stack14;

        goto label3;

     label2:
        $stack5 = this.<jdk.internal.util.xml.impl.ReaderUTF16: java.io.InputStream is>;

        $stack6 = virtualinvoke $stack5.<java.io.InputStream: int read()>();

        $stack8 = $stack6 << 8;

        $stack7 = val#1 & 255;

        $stack9 = $stack8 | $stack7;

        val#2 = (char) $stack9;

     label3:
        $stack15 = val#2;

        $i2 = (int) $stack15;

        return $i2;

        nop;
    }

    public void close() throws java.io.IOException
    {
        jdk.internal.util.xml.impl.ReaderUTF16 this;
        java.io.InputStream $stack1;

        this := @this: jdk.internal.util.xml.impl.ReaderUTF16;

        $stack1 = this.<jdk.internal.util.xml.impl.ReaderUTF16: java.io.InputStream is>;

        virtualinvoke $stack1.<java.io.InputStream: void close()>();

        return;

        nop;
    }
}
