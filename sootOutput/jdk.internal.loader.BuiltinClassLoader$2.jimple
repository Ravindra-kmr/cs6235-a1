class jdk.internal.loader.BuiltinClassLoader$2 extends java.lang.Object implements java.security.PrivilegedExceptionAction
{
    final java.lang.String val$name;
    final jdk.internal.loader.BuiltinClassLoader this$0;

    void <init>(jdk.internal.loader.BuiltinClassLoader, java.lang.String)
    {
        jdk.internal.loader.BuiltinClassLoader$2 this;
        java.lang.String l2;
        jdk.internal.loader.BuiltinClassLoader this$0;

        this := @this: jdk.internal.loader.BuiltinClassLoader$2;

        this$0 := @parameter0: jdk.internal.loader.BuiltinClassLoader;

        l2 := @parameter1: java.lang.String;

        this.<jdk.internal.loader.BuiltinClassLoader$2: jdk.internal.loader.BuiltinClassLoader this$0> = this$0;

        this.<jdk.internal.loader.BuiltinClassLoader$2: java.lang.String val$name> = l2;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;

        nop;
    }

    public java.util.List run() throws java.io.IOException
    {
        java.net.URL $stack19;
        java.lang.module.ModuleReference mref;
        java.lang.module.ModuleReader $stack14;
        java.util.ArrayList $stack21, $stack23, result#1;
        bottom_type result, $stack11;
        java.util.Map $stack7;
        java.lang.String $stack15;
        java.net.URI u, $stack22;
        boolean $stack10, $stack20;
        java.util.Iterator $stack9, l2, $stack18;
        java.util.Collection $stack8;
        jdk.internal.loader.BuiltinClassLoader $stack6, $stack13;
        java.lang.Exception $stack24, l5;
        jdk.internal.loader.BuiltinClassLoader$2 this;
        java.util.List $stack11#2;
        java.util.Optional $stack16;
        java.lang.Object $stack12, $stack17;

        this := @this: jdk.internal.loader.BuiltinClassLoader$2;

        result#1 = null;

        $stack6 = this.<jdk.internal.loader.BuiltinClassLoader$2: jdk.internal.loader.BuiltinClassLoader this$0>;

        $stack7 = $stack6.<jdk.internal.loader.BuiltinClassLoader: java.util.Map nameToModule>;

        $stack8 = interfaceinvoke $stack7.<java.util.Map: java.util.Collection values()>();

        $stack9 = interfaceinvoke $stack8.<java.util.Collection: java.util.Iterator iterator()>();

        l2 = $stack9;

     label1:
        $stack18 = l2;

        $stack10 = interfaceinvoke $stack18.<java.util.Iterator: boolean hasNext()>();

        if $stack10 == 0 goto label7;

        $stack12 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        mref = (java.lang.module.ModuleReference) $stack12;

        $stack13 = this.<jdk.internal.loader.BuiltinClassLoader$2: jdk.internal.loader.BuiltinClassLoader this$0>;

        $stack14 = virtualinvoke $stack13.<jdk.internal.loader.BuiltinClassLoader: java.lang.module.ModuleReader moduleReaderFor(java.lang.module.ModuleReference)>(mref);

        $stack15 = this.<jdk.internal.loader.BuiltinClassLoader$2: java.lang.String val$name>;

        $stack16 = interfaceinvoke $stack14.<java.lang.module.ModuleReader: java.util.Optional find(java.lang.String)>($stack15);

        $stack17 = virtualinvoke $stack16.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(null);

        u = (java.net.URI) $stack17;

        if u == null goto label6;

     label2:
        if result#1 != null goto label3;

        $stack21 = new java.util.ArrayList;

        specialinvoke $stack21.<java.util.ArrayList: void <init>()>();

        result#1 = $stack21;

     label3:
        $stack23 = result#1;

        $stack22 = u;

        $stack19 = virtualinvoke $stack22.<java.net.URI: java.net.URL toURL()>();

        $stack20 = interfaceinvoke $stack23.<java.util.List: boolean add(java.lang.Object)>($stack19);

     label4:
        goto label6;

     label5:
        $stack24 := @caughtexception;

        l5 = $stack24;

     label6:
        goto label1;

     label7:
        if result#1 == null goto label8;

        $stack11#2 = result#1;

        goto label9;

     label8:
        $stack11#2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label9:
        return $stack11#2;

        nop;

        catch java.net.MalformedURLException from label2 to label4 with label5;
        catch java.lang.IllegalArgumentException from label2 to label4 with label5;
    }

    public volatile java.lang.Object run() throws java.lang.Exception
    {
        jdk.internal.loader.BuiltinClassLoader$2 this;
        java.util.List $stack1;

        this := @this: jdk.internal.loader.BuiltinClassLoader$2;

        $stack1 = virtualinvoke this.<jdk.internal.loader.BuiltinClassLoader$2: java.util.List run()>();

        return $stack1;

        nop;
    }
}
