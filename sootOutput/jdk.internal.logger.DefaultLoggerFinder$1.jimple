class jdk.internal.logger.DefaultLoggerFinder$1 extends java.lang.Object implements java.security.PrivilegedAction
{
    final java.lang.Module val$m;

    void <init>(java.lang.Module)
    {
        jdk.internal.logger.DefaultLoggerFinder$1 this;
        java.lang.Module l1;

        this := @this: jdk.internal.logger.DefaultLoggerFinder$1;

        l1 := @parameter0: java.lang.Module;

        this.<jdk.internal.logger.DefaultLoggerFinder$1: java.lang.Module val$m> = l1;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;

        nop;
    }

    public java.lang.Boolean run()
    {
        java.lang.Module $stack1;
        jdk.internal.logger.DefaultLoggerFinder$1 this;
        java.lang.Boolean $stack4;
        java.lang.ClassLoader $stack2;
        boolean $stack3;

        this := @this: jdk.internal.logger.DefaultLoggerFinder$1;

        $stack1 = this.<jdk.internal.logger.DefaultLoggerFinder$1: java.lang.Module val$m>;

        $stack2 = virtualinvoke $stack1.<java.lang.Module: java.lang.ClassLoader getClassLoader()>();

        $stack3 = staticinvoke <jdk.internal.misc.VM: boolean isSystemDomainLoader(java.lang.ClassLoader)>($stack2);

        $stack4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack3);

        return $stack4;

        nop;
    }

    public volatile java.lang.Object run()
    {
        jdk.internal.logger.DefaultLoggerFinder$1 this;
        java.lang.Boolean $stack1;

        this := @this: jdk.internal.logger.DefaultLoggerFinder$1;

        $stack1 = virtualinvoke this.<jdk.internal.logger.DefaultLoggerFinder$1: java.lang.Boolean run()>();

        return $stack1;

        nop;
    }
}
