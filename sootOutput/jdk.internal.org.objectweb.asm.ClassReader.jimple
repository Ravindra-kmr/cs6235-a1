public class jdk.internal.org.objectweb.asm.ClassReader extends java.lang.Object
{
    public static final int SKIP_CODE;
    public static final int SKIP_DEBUG;
    public static final int SKIP_FRAMES;
    public static final int EXPAND_FRAMES;
    static final int EXPAND_ASM_INSNS;
    public final byte[] b;
    private final int[] items;
    private final java.lang.String[] strings;
    private final int maxStringLength;
    public final int header;

    public void <init>(byte[])
    {
        int $stack2;
        byte[] b;
        jdk.internal.org.objectweb.asm.ClassReader this;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        b := @parameter0: byte[];

        $stack2 = lengthof b;

        specialinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: void <init>(byte[],int,int)>(b, 0, $stack2);

        return;

        nop;
    }

    public void <init>(byte[], int, int)
    {
        byte[] b;
        byte $stack18, $stack25;
        int[] $stack13, $stack14, $stack17;
        bottom_type max, index, i, size, $stack21, $stack22, $stack23;
        java.lang.String[] $stack15;
        short $stack10;
        int off, $stack9, $stack11, $stack12, n, $stack16, $stack19, $stack20, $stack24, $stack26, len, max#1, index#2, i#3, size#4, $stack22#5, $stack22#6, $stack21#7, $stack21#8, $stack23#9, $stack23#10, $i0, $i1;
        java.lang.IllegalArgumentException $stack27, $u0;
        jdk.internal.org.objectweb.asm.ClassReader this;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        b := @parameter0: byte[];

        off := @parameter1: int;

        len := @parameter2: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b> = b;

        $stack9 = off + 6;

        $stack10 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: short readShort(int)>($stack9);

        $i0 = (int) $stack10;

        if $i0 <= 55 goto label1;

        $u0 = new java.lang.IllegalArgumentException;

        $stack27 = $u0;

        specialinvoke $u0.<java.lang.IllegalArgumentException: void <init>()>();

        throw $stack27;

     label1:
        $stack11 = off + 8;

        $stack12 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack11);

        $stack13 = newarray (int)[$stack12];

        this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items> = $stack13;

        $stack14 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        n = lengthof $stack14;

        $stack15 = newarray (java.lang.String)[n];

        this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String[] strings> = $stack15;

        max#1 = 0;

        index#2 = off + 10;

        i#3 = 1;

     label2:
        $stack20 = i#3;

        $stack19 = n;

        if $stack20 >= $stack19 goto label9;

        $stack17 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack16 = index#2 + 1;

        $stack17[i#3] = $stack16;

        $stack18 = b[index#2];

        $i1 = (int) $stack18;

        tableswitch($i1)
        {
            case 1: goto label5;
            case 2: goto label7;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label4;
            case 6: goto label4;
            case 7: goto label7;
            case 8: goto label7;
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label3;
            case 12: goto label3;
            case 13: goto label7;
            case 14: goto label7;
            case 15: goto label6;
            case 16: goto label7;
            case 17: goto label3;
            case 18: goto label3;
            default: goto label7;
        };

     label3:
        size#4 = 5;

        goto label8;

     label4:
        size#4 = 9;

        i#3 = i#3 + 1;

        goto label8;

     label5:
        $stack25 = 3;

        $stack24 = index#2 + 1;

        $stack26 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack24);

        size#4 = $stack25 + $stack26;

        if size#4 <= max#1 goto label8;

        max#1 = size#4;

        goto label8;

     label6:
        size#4 = 4;

        goto label8;

     label7:
        size#4 = 3;

     label8:
        $stack22#5 = index#2;

        $stack22#6 = $stack22#5;

        $stack21#7 = size#4;

        $stack21#8 = $stack21#7;

        $stack23#9 = $stack22#6 + $stack21#8;

        $stack23#10 = $stack23#9;

        index#2 = $stack23#10;

        i#3 = i#3 + 1;

        goto label2;

     label9:
        this.<jdk.internal.org.objectweb.asm.ClassReader: int maxStringLength> = max#1;

        this.<jdk.internal.org.objectweb.asm.ClassReader: int header> = index#2;

        return;

        nop;
    }

    public int getAccess()
    {
        int $stack1, $stack2;
        jdk.internal.org.objectweb.asm.ClassReader this;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        $stack1 = this.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack2 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack1);

        return $stack2;

        nop;
    }

    public java.lang.String getClassName()
    {
        int $stack1, $stack2, $stack4;
        char[] $stack3;
        java.lang.String $stack5;
        jdk.internal.org.objectweb.asm.ClassReader this;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        $stack1 = this.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack4 = $stack1 + 2;

        $stack2 = this.<jdk.internal.org.objectweb.asm.ClassReader: int maxStringLength>;

        $stack3 = newarray (char)[$stack2];

        $stack5 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack4, $stack3);

        return $stack5;

        nop;
    }

    public java.lang.String getSuperName()
    {
        int $stack1, $stack2, $stack4;
        char[] $stack3;
        java.lang.String $stack5;
        jdk.internal.org.objectweb.asm.ClassReader this;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        $stack1 = this.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack4 = $stack1 + 4;

        $stack2 = this.<jdk.internal.org.objectweb.asm.ClassReader: int maxStringLength>;

        $stack3 = newarray (char)[$stack2];

        $stack5 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack4, $stack3);

        return $stack5;

        nop;
    }

    public java.lang.String[] getInterfaces()
    {
        java.lang.String[] interfaces, $stack9;
        jdk.internal.org.objectweb.asm.ClassReader this;
        bottom_type index, i;
        int $stack6, $stack7, n, $stack8, $stack11, $stack12, index#1, i#2;
        char[] buf;
        java.lang.String $stack10;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        $stack6 = this.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        index#1 = $stack6 + 6;

        $stack7 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(index#1);

        n = $stack7;

        interfaces = newarray (java.lang.String)[n];

        if n <= 0 goto label2;

        $stack8 = this.<jdk.internal.org.objectweb.asm.ClassReader: int maxStringLength>;

        buf = newarray (char)[$stack8];

        i#2 = 0;

     label1:
        $stack12 = i#2;

        $stack11 = n;

        if $stack12 >= $stack11 goto label2;

        index#1 = index#1 + 2;

        $stack10 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(index#1, buf);

        interfaces[i#2] = $stack10;

        i#2 = i#2 + 1;

        goto label1;

     label2:
        $stack9 = interfaces;

        return $stack9;

        nop;
    }

    void copyPool(jdk.internal.org.objectweb.asm.ClassWriter)
    {
        byte[] $stack17, $stack25;
        byte tag, $stack99;
        long $stack87, $stack89;
        jdk.internal.org.objectweb.asm.ByteVector $stack18, $stack27;
        java.lang.String $stack31, $stack33, $stack64, $stack65, $stack67, $stack77, $stack79, $stack83, $stack84, $stack86, $stack98, $stack100, $stack104, s#4;
        jdk.internal.org.objectweb.asm.Item $stack26, item, $stack54, $stack103, $stack68#9, $stack68#10, $stack73#20, $stack73#21, $stack37#26, $stack37#27, $stack74#32, $stack74#33, $u0;
        char[] buf, $stack46, $stack50;
        jdk.internal.org.objectweb.asm.Item[] items2, $stack69#13, $stack69#14, $stack72#22, $stack72#23, $stack76#28, $stack76#29;
        int[] $stack12, $stack13, $stack23, $stack29, $stack56, $stack59, $stack81, $stack94;
        float $stack91;
        jdk.internal.org.objectweb.asm.ClassWriter classWriter;
        java.lang.String[] $stack93, $stack95;
        int $stack11, ll, $stack14, $stack15, $stack16, $stack22, $stack24, $stack28, $stack30, $stack32, $stack34, $stack38, $stack39, $stack42, $stack44, $stack45, $stack49, $stack52, $stack55, $stack57, $stack58, $stack60, $stack62, $stack63, $stack66, $stack78, $stack80, $stack82, $stack85, $stack90, $stack92, $stack96, $stack97, i#1, index#2, nameType#3, index#5, s#6, nameType#7, nameType#8, $stack36#11, $stack36#12, $stack35#15, $stack35#16, $stack70#17, $stack70#18, s#19, $stack71#24, $stack71#25, $stack75#30, $stack75#31, i#34, $i0, $i1, $i2, $i3, $i4;
        double $stack20, $stack21, $stack88;
        jdk.internal.org.objectweb.asm.ClassReader this, $stack40, $stack43, $stack47, $stack51, $stack53;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        classWriter := @parameter0: jdk.internal.org.objectweb.asm.ClassWriter;

        $stack11 = this.<jdk.internal.org.objectweb.asm.ClassReader: int maxStringLength>;

        buf = newarray (char)[$stack11];

        $stack12 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        ll = lengthof $stack12;

        items2 = newarray (jdk.internal.org.objectweb.asm.Item)[ll];

        i#1 = 1;

     label01:
        $stack39 = i#1;

        $stack38 = ll;

        if $stack39 >= $stack38 goto label15;

        $stack23 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        index#2 = $stack23[i#1];

        $stack25 = this.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack24 = index#2 - 1;

        tag = $stack25[$stack24];

        $u0 = new jdk.internal.org.objectweb.asm.Item;

        $stack26 = $u0;

        specialinvoke $u0.<jdk.internal.org.objectweb.asm.Item: void <init>(int)>(i#1);

        item = $stack26;

        $i0 = (int) tag;

        tableswitch($i0)
        {
            case 1: goto label08;
            case 2: goto label13;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label13;
            case 8: goto label13;
            case 9: goto label02;
            case 10: goto label02;
            case 11: goto label02;
            case 12: goto label05;
            case 13: goto label13;
            case 14: goto label13;
            case 15: goto label10;
            case 16: goto label13;
            case 17: goto label13;
            case 18: goto label11;
            default: goto label13;
        };

     label02:
        $stack81 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack80 = index#2 + 2;

        $stack82 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack80);

        nameType#3 = $stack81[$stack82];

        $stack83 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(index#2, buf);

        $stack84 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(nameType#3, buf);

        $stack85 = nameType#3 + 2;

        $stack86 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack85, buf);

        $i1 = (int) tag;

        virtualinvoke item.<jdk.internal.org.objectweb.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>($i1, $stack83, $stack84, $stack86);

        goto label14;

     label03:
        $stack92 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(index#2);

        virtualinvoke item.<jdk.internal.org.objectweb.asm.Item: void set(int)>($stack92);

        goto label14;

     label04:
        $stack90 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(index#2);

        $stack91 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($stack90);

        virtualinvoke item.<jdk.internal.org.objectweb.asm.Item: void set(float)>($stack91);

        goto label14;

     label05:
        $stack77 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(index#2, buf);

        $stack78 = index#2 + 2;

        $stack79 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack78, buf);

        $i2 = (int) tag;

        virtualinvoke item.<jdk.internal.org.objectweb.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>($i2, $stack77, $stack79, null);

        goto label14;

     label06:
        $stack89 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: long readLong(int)>(index#2);

        virtualinvoke item.<jdk.internal.org.objectweb.asm.Item: void set(long)>($stack89);

        i#1 = i#1 + 1;

        goto label14;

     label07:
        $stack87 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: long readLong(int)>(index#2);

        $stack88 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($stack87);

        virtualinvoke item.<jdk.internal.org.objectweb.asm.Item: void set(double)>($stack88);

        i#1 = i#1 + 1;

        goto label14;

     label08:
        $stack93 = this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String[] strings>;

        s#4 = $stack93[i#1];

        if s#4 != null goto label09;

        $stack94 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        index#5 = $stack94[i#1];

        $stack95 = this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String[] strings>;

        $stack96 = index#5 + 2;

        $stack97 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(index#5);

        $stack98 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF(int,int,char[])>($stack96, $stack97, buf);

        $stack95[i#1] = $stack98;

        s#4 = $stack98;

     label09:
        $stack103 = item;

        $stack99 = tag;

        $stack100 = s#4;

        $i3 = (int) $stack99;

        virtualinvoke $stack103.<jdk.internal.org.objectweb.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>($i3, $stack100, null, null);

        goto label14;

     label10:
        $stack56 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack55 = index#2 + 1;

        $stack57 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack55);

        s#6 = $stack56[$stack57];

        $stack59 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack58 = s#6 + 2;

        $stack60 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack58);

        nameType#7 = $stack59[$stack60];

        $stack62 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>(index#2);

        $stack63 = 20 + $stack62;

        $stack64 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(s#6, buf);

        $stack65 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(nameType#7, buf);

        $stack66 = nameType#7 + 2;

        $stack67 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack66, buf);

        virtualinvoke item.<jdk.internal.org.objectweb.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>($stack63, $stack64, $stack65, $stack67);

        goto label14;

     label11:
        $stack27 = classWriter.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector bootstrapMethods>;

        if $stack27 != null goto label12;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: void copyBootstrapMethods(jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item[],char[])>(classWriter, items2, buf);

     label12:
        $stack40 = this;

        $stack29 = $stack40.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack43 = this;

        $stack42 = index#2;

        $stack28 = $stack42 + 2;

        $stack30 = virtualinvoke $stack43.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack28);

        $stack44 = $stack29[$stack30];

        nameType#8 = $stack44;

        $stack54 = item;

        $stack47 = this;

        $stack45 = nameType#8;

        $stack46 = buf;

        $stack31 = virtualinvoke $stack47.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack45, $stack46);

        $stack51 = this;

        $stack49 = nameType#8;

        $stack32 = $stack49 + 2;

        $stack50 = buf;

        $stack33 = virtualinvoke $stack51.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack32, $stack50);

        $stack53 = this;

        $stack52 = index#2;

        $stack34 = virtualinvoke $stack53.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack52);

        virtualinvoke $stack54.<jdk.internal.org.objectweb.asm.Item: void set(java.lang.String,java.lang.String,int)>($stack31, $stack33, $stack34);

        goto label14;

     label13:
        $stack104 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(index#2, buf);

        $i4 = (int) tag;

        virtualinvoke item.<jdk.internal.org.objectweb.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>($i4, $stack104, null, null);

     label14:
        $stack68#9 = item;

        $stack68#10 = $stack68#9;

        $stack36#11 = $stack68#10.<jdk.internal.org.objectweb.asm.Item: int hashCode>;

        $stack36#12 = $stack36#11;

        $stack69#13 = items2;

        $stack69#14 = $stack69#13;

        $stack35#15 = lengthof $stack69#14;

        $stack35#16 = $stack35#15;

        $stack70#17 = $stack36#12 % $stack35#16;

        $stack70#18 = $stack70#17;

        s#19 = $stack70#18;

        $stack73#20 = item;

        $stack73#21 = $stack73#20;

        $stack72#22 = items2;

        $stack72#23 = $stack72#22;

        $stack71#24 = s#19;

        $stack71#25 = $stack71#24;

        $stack37#26 = $stack72#23[$stack71#25];

        $stack37#27 = $stack37#26;

        $stack73#21.<jdk.internal.org.objectweb.asm.Item: jdk.internal.org.objectweb.asm.Item next> = $stack37#27;

        $stack76#28 = items2;

        $stack76#29 = $stack76#28;

        $stack75#30 = s#19;

        $stack75#31 = $stack75#30;

        $stack74#32 = item;

        $stack74#33 = $stack74#32;

        $stack76#29[$stack75#31] = $stack74#33;

        i#1 = i#1 + 1;

        goto label01;

     label15:
        $stack13 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack14 = $stack13[1];

        i#34 = $stack14 - 1;

        $stack18 = classWriter.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector pool>;

        $stack17 = this.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack15 = this.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack16 = $stack15 - i#34;

        virtualinvoke $stack18.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack17, i#34, $stack16);

        classWriter.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item[] items> = items2;

        $stack20 = (double) ll;

        $stack21 = 0.75 * $stack20;

        $stack22 = (int) $stack21;

        classWriter.<jdk.internal.org.objectweb.asm.ClassWriter: int threshold> = $stack22;

        classWriter.<jdk.internal.org.objectweb.asm.ClassWriter: int index> = ll;

        return;
    }

    private void copyBootstrapMethods(jdk.internal.org.objectweb.asm.ClassWriter, jdk.internal.org.objectweb.asm.Item[], char[])
    {
        byte[] $stack23;
        byte $stack48, $b0, $b1;
        bottom_type u, found, i, attrName, v, hashCode, k;
        jdk.internal.org.objectweb.asm.ByteVector $stack19, $stack24, v#12, $u1;
        java.lang.String $stack44, $stack45, attrName#4;
        jdk.internal.org.objectweb.asm.Item $stack31, $stack35, k#10, $u0;
        char[] c;
        jdk.internal.org.objectweb.asm.Item[] items;
        boolean $stack46, $stack52, found#2;
        jdk.internal.org.objectweb.asm.ClassWriter classWriter;
        int $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack20, $stack21, $stack22, $stack25, position, $stack26, $stack28, $stack29, $stack30, $stack32, $stack33, $stack34, index, $stack36, $stack37, $stack38, $stack39, $stack41, $stack42, $stack43, $stack47, $stack49, $stack50, $stack51, u#1, i#3, i#5, attrName#6, v#7, hashCode#8, k#9, attrName#11, $i0, $i1;
        jdk.internal.org.objectweb.asm.ClassReader this;
        java.lang.Object $stack27, $stack40;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        classWriter := @parameter0: jdk.internal.org.objectweb.asm.ClassWriter;

        items := @parameter1: jdk.internal.org.objectweb.asm.Item[];

        c := @parameter2: char[];

        $stack13 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int getAttributes()>();

        u#1 = $stack13;

        found#2 = 0;

        $stack14 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(u#1);

        i#3 = $stack14;

     label1:
        $stack51 = i#3;

        if $stack51 <= 0 goto label3;

        $stack43 = u#1 + 2;

        $stack44 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack43, c);

        attrName#4 = $stack44;

        $stack45 = "BootstrapMethods";

        $stack46 = virtualinvoke $stack45.<java.lang.String: boolean equals(java.lang.Object)>(attrName#4);

        if $stack46 == 0 goto label2;

        found#2 = 1;

        goto label3;

     label2:
        $stack48 = 6;

        $stack47 = u#1 + 4;

        $stack49 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack47);

        $stack50 = $stack48 + $stack49;

        u#1 = u#1 + $stack50;

        $b0 = -1;

        $i0 = (int) $b0;

        i#3 = i#3 + $i0;

        goto label1;

     label3:
        $stack52 = found#2;

        if $stack52 != 0 goto label4;

        return;

     label4:
        $stack15 = u#1 + 8;

        $stack16 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack15);

        i#5 = $stack16;

        attrName#6 = 0;

        v#7 = u#1 + 10;

     label5:
        $stack37 = attrName#6;

        $stack36 = i#5;

        if $stack37 >= $stack36 goto label8;

        $stack25 = v#7 - u#1;

        position = $stack25 - 10;

        $stack26 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(v#7);

        $stack27 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>($stack26, c);

        $stack28 = virtualinvoke $stack27.<java.lang.Object: int hashCode()>();

        hashCode#8 = $stack28;

        $stack29 = v#7 + 2;

        $stack30 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack29);

        k#9 = $stack30;

     label6:
        $stack42 = k#9;

        if $stack42 <= 0 goto label7;

        $stack38 = v#7 + 4;

        $stack39 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack38);

        $stack40 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>($stack39, c);

        $stack41 = virtualinvoke $stack40.<java.lang.Object: int hashCode()>();

        hashCode#8 = hashCode#8 ^ $stack41;

        v#7 = v#7 + 2;

        $b1 = -1;

        $i1 = (int) $b1;

        k#9 = k#9 + $i1;

        goto label6;

     label7:
        v#7 = v#7 + 4;

        $u0 = new jdk.internal.org.objectweb.asm.Item;

        $stack31 = $u0;

        specialinvoke $u0.<jdk.internal.org.objectweb.asm.Item: void <init>(int)>(attrName#6);

        k#10 = $stack31;

        $stack32 = hashCode#8 & 2147483647;

        virtualinvoke k#10.<jdk.internal.org.objectweb.asm.Item: void set(int,int)>(position, $stack32);

        $stack34 = k#10.<jdk.internal.org.objectweb.asm.Item: int hashCode>;

        $stack33 = lengthof items;

        index = $stack34 % $stack33;

        $stack35 = items[index];

        k#10.<jdk.internal.org.objectweb.asm.Item: jdk.internal.org.objectweb.asm.Item next> = $stack35;

        items[index] = k#10;

        attrName#6 = attrName#6 + 1;

        goto label5;

     label8:
        $stack17 = u#1 + 4;

        $stack18 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack17);

        attrName#11 = $stack18;

        $u1 = new jdk.internal.org.objectweb.asm.ByteVector;

        $stack19 = $u1;

        $stack20 = attrName#11 + 62;

        specialinvoke $u1.<jdk.internal.org.objectweb.asm.ByteVector: void <init>(int)>($stack20);

        v#12 = $stack19;

        $stack23 = this.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack22 = u#1 + 10;

        $stack21 = attrName#11 - 2;

        $stack24 = virtualinvoke v#12.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($stack23, $stack22, $stack21);

        classWriter.<jdk.internal.org.objectweb.asm.ClassWriter: int bootstrapMethodsCount> = i#5;

        classWriter.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ByteVector bootstrapMethods> = v#12;

        return;

        nop;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        byte[] $stack2;
        jdk.internal.org.objectweb.asm.ClassReader this;
        java.io.InputStream is;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        is := @parameter0: java.io.InputStream;

        $stack2 = staticinvoke <jdk.internal.org.objectweb.asm.ClassReader: byte[] readClass(java.io.InputStream,boolean)>(is, 0);

        specialinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: void <init>(byte[])>($stack2);

        return;

        nop;
    }

    public void <init>(java.lang.String) throws java.io.IOException
    {
        byte[] $stack8;
        jdk.internal.org.objectweb.asm.ClassReader this;
        java.lang.StringBuilder $stack2, $stack4, $stack5;
        java.lang.String name, $stack3, $stack6;
        java.io.InputStream $stack7;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        name := @parameter0: java.lang.String;

        $stack2 = new java.lang.StringBuilder;

        specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>();

        $stack3 = virtualinvoke name.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3);

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".class");

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack7 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>($stack6);

        $stack8 = staticinvoke <jdk.internal.org.objectweb.asm.ClassReader: byte[] readClass(java.io.InputStream,boolean)>($stack7, 1);

        specialinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: void <init>(byte[])>($stack8);

        return;

        nop;
    }

    private static byte[] readClass(java.io.InputStream, boolean) throws java.io.IOException
    {
        byte[] $stack13, $stack15, $stack25, $stack27, $stack28, b#1, c_1#3, c_1#4, c_2#6, c_2#7;
        byte $stack18, $stack24;
        bottom_type b, len, c_1, c_2;
        boolean close, $stack29;
        java.lang.Throwable $stack31, l7, $stack32;
        int $stack8, $stack9, $stack10, $stack11, n, $stack12, $stack14, $stack16, $stack19, $stack20, $stack21, $stack22, $stack23, $stack26, len#2, c_1#5, $i0;
        java.io.IOException $stack30, $u0;
        java.io.InputStream is, $stack17;

        is := @parameter0: java.io.InputStream;

        close := @parameter1: boolean;

        if is != null goto label01;

        $u0 = new java.io.IOException;

        $stack30 = $u0;

        specialinvoke $u0.<java.io.IOException: void <init>(java.lang.String)>("Class not found");

        throw $stack30;

     label01:
        $stack8 = virtualinvoke is.<java.io.InputStream: int available()>();

        b#1 = newarray (byte)[$stack8];

        len#2 = 0;

     label02:
        $stack17 = is;

        $stack15 = b#1;

        $stack16 = len#2;

        $stack13 = b#1;

        $stack9 = lengthof $stack13;

        $stack14 = len#2;

        $stack10 = $stack9 - $stack14;

        $stack11 = virtualinvoke $stack17.<java.io.InputStream: int read(byte[],int,int)>($stack15, $stack16, $stack10);

        n = $stack11;

        $stack19 = n;

        $stack18 = -1;

        $i0 = (int) $stack18;

        if $stack19 != $i0 goto label06;

        $stack26 = lengthof b#1;

        if len#2 >= $stack26 goto label03;

        c_1#3 = newarray (byte)[len#2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(b#1, 0, c_1#3, 0, len#2);

        b#1 = c_1#3;

     label03:
        $stack28 = b#1;

        c_1#4 = $stack28;

     label04:
        $stack29 = close;

        if $stack29 == 0 goto label05;

        virtualinvoke is.<java.io.InputStream: void close()>();

     label05:
        $stack27 = c_1#4;

        return $stack27;

     label06:
        len#2 = len#2 + n;

        $stack12 = lengthof b#1;

        if len#2 != $stack12 goto label10;

        $stack20 = virtualinvoke is.<java.io.InputStream: int read()>();

        c_1#5 = $stack20;

        if c_1#5 >= 0 goto label09;

        c_2#6 = b#1;

     label07:
        if close == 0 goto label08;

        virtualinvoke is.<java.io.InputStream: void close()>();

     label08:
        $stack25 = c_2#6;

        return $stack25;

     label09:
        $stack21 = lengthof b#1;

        $stack22 = $stack21 + 1000;

        c_2#7 = newarray (byte)[$stack22];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(b#1, 0, c_2#7, 0, len#2);

        $stack23 = len#2;

        len#2 = len#2 + 1;

        $stack24 = (byte) c_1#5;

        c_2#7[$stack23] = $stack24;

        b#1 = c_2#7;

     label10:
        goto label02;

     label11:
        $stack31 := @caughtexception;

        l7 = $stack31;

     label12:
        if close == 0 goto label13;

        virtualinvoke is.<java.io.InputStream: void close()>();

     label13:
        $stack32 = l7;

        throw $stack32;

        nop;

        catch java.lang.Throwable from label01 to label04 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label12 with label11;
    }

    public void accept(jdk.internal.org.objectweb.asm.ClassVisitor, int)
    {
        jdk.internal.org.objectweb.asm.ClassVisitor classVisitor;
        int flags;
        jdk.internal.org.objectweb.asm.Attribute[] $stack3;
        jdk.internal.org.objectweb.asm.ClassReader this;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        classVisitor := @parameter0: jdk.internal.org.objectweb.asm.ClassVisitor;

        flags := @parameter1: int;

        $stack3 = <jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute[] DEFAULT_ATTRIBUTE_PROTOS>;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: void accept(jdk.internal.org.objectweb.asm.ClassVisitor,jdk.internal.org.objectweb.asm.Attribute[],int)>(classVisitor, $stack3, flags);

        return;

        nop;
    }

    public void accept(jdk.internal.org.objectweb.asm.ClassVisitor, jdk.internal.org.objectweb.asm.Attribute[], int)
    {
        jdk.internal.org.objectweb.asm.Context $stack32, context, $u0;
        int[] $stack43, $stack175, $stack195, $stack198, item#25;
        jdk.internal.org.objectweb.asm.ClassVisitor classVisitor, $stack120;
        int $stack31, flags, $stack33, $stack34, $stack36, $stack38, $stack39, $stack40, $stack41, $stack42, $stack44, $stack45, $stack46, $stack47, $stack48, $stack49, $stack50, $stack51, $stack52, $stack53, $stack54, $stack55, $stack56, $stack57, $stack58, $stack60, $stack65, $stack67, $stack70, $stack72, $stack74, $stack75, $stack76, $stack78, $stack79, $stack80, $stack82, $stack86, $stack87, $stack88, $stack89, $stack90, $stack91, $stack93, $stack97, $stack98, $stack99, $stack100, $stack101, $stack105, $stack106, $stack107, $stack108, $stack109, $stack113, $stack114, $stack115, $stack121, $stack153, $stack154, $stack155, $stack161, $stack167, $stack168, $stack169, $stack170, $stack172, $stack173, $stack174, $stack176, $stack177, $stack179, $stack180, $stack182, $stack183, $stack184, $stack186, $stack189, $stack191, $stack193, $stack194, $stack196, $stack199, $stack200, $stack202, $stack206, u#1, access#2, u#3, i_1#4, anns#12, ianns#13, tanns#14, itanns#15, innerClasses#16, module#17, packages#18, u#20, i_2#21, item#23, item#24, j#26, v#27, $stack165#29, $stack165#30, $stack163#35, $stack163#36, $stack157#39, $stack157#40, $stack159#41, $stack159#42, $stack160#43, $stack160#44, $stack166#45, $stack166#46, $stack117#47, $stack117#48, i_2#49, attrName#50, i_2#51, attrName#52, i_2#53, attrName#54, attrName#55, i_2#56, attrName#57, attrName#58, i_2#62, attrName#63, u#64, i_2#65, $stack59#66, $stack59#67, u#68, i_2#69, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        jdk.internal.org.objectweb.asm.ClassReader this, $stack61, $stack68, $stack164#33, $stack164#34;
        java.lang.String $stack35, name, $stack37, superClass, $stack69, $stack71, $stack73, $stack84, $stack95, $stack103, $stack111, $stack116, $stack118, $stack119, $stack122, $stack123, $stack125, $stack127, $stack129, $stack131, $stack133, $stack135, $stack137, $stack139, $stack141, $stack143, $stack145, $stack147, $stack149, $stack151, $stack178, $stack187, $stack190, $stack192, $stack197, $stack201, $stack203, $stack204, i_1#5, sourceFile#6, sourceDebug#7, enclosingOwner#8, enclosingName#9, enclosingDesc#10, moduleMainClass#11, attrName#22;
        char[] c, $stack185;
        boolean $stack81, $stack92, $stack102, $stack110, $stack124, $stack126, $stack128, $stack130, $stack132, $stack134, $stack136, $stack138, $stack140, $stack142, $stack144, $stack146, $stack148, $stack150, $stack152;
        jdk.internal.org.objectweb.asm.TypePath $stack83, $stack94;
        byte[] $stack181;
        byte $stack62, $stack64, $stack66, $stack171, $stack158#31, $stack158#32, $stack162#37, $stack162#38, $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8;
        jdk.internal.org.objectweb.asm.Attribute[] attrs;
        bottom_type u, access, i_1, sourceFile, sourceDebug, enclosingOwner, enclosingName, enclosingDesc, moduleMainClass, anns, ianns, tanns, itanns, innerClasses, module, packages, attributes, i_2, $stack59, attrName, $stack77, $stack117, item, $stack157, $stack158, $stack159, $stack160, $stack162, $stack163, $stack164, $stack165, $stack166, j, v;
        jdk.internal.org.objectweb.asm.Attribute $stack156, attributes#19, item#28, $stack77#59, $stack77#60, i_2#61;
        java.lang.String[] interfaces, $stack63, $stack205;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $stack85, $stack96, $stack104, $stack112;
        java.lang.IllegalArgumentException $stack188, $u1;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        classVisitor := @parameter0: jdk.internal.org.objectweb.asm.ClassVisitor;

        attrs := @parameter1: jdk.internal.org.objectweb.asm.Attribute[];

        flags := @parameter2: int;

        u#1 = this.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack31 = this.<jdk.internal.org.objectweb.asm.ClassReader: int maxStringLength>;

        c = newarray (char)[$stack31];

        $u0 = new jdk.internal.org.objectweb.asm.Context;

        $stack32 = $u0;

        specialinvoke $u0.<jdk.internal.org.objectweb.asm.Context: void <init>()>();

        context = $stack32;

        context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Attribute[] attrs> = attrs;

        context.<jdk.internal.org.objectweb.asm.Context: int flags> = flags;

        context.<jdk.internal.org.objectweb.asm.Context: char[] buffer> = c;

        $stack33 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(u#1);

        access#2 = $stack33;

        $stack34 = u#1 + 2;

        $stack35 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack34, c);

        name = $stack35;

        $stack36 = u#1 + 4;

        $stack37 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack36, c);

        superClass = $stack37;

        $stack38 = u#1 + 6;

        $stack39 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack38);

        interfaces = newarray (java.lang.String)[$stack39];

        u#3 = u#1 + 8;

        i_1#4 = 0;

     label01:
        $stack206 = i_1#4;

        $stack205 = interfaces;

        $stack40 = lengthof $stack205;

        if $stack206 >= $stack40 goto label02;

        $stack204 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(u#3, c);

        interfaces[i_1#4] = $stack204;

        u#3 = u#3 + 2;

        i_1#4 = i_1#4 + 1;

        goto label01;

     label02:
        i_1#5 = null;

        sourceFile#6 = null;

        sourceDebug#7 = null;

        enclosingOwner#8 = null;

        enclosingName#9 = null;

        enclosingDesc#10 = null;

        moduleMainClass#11 = null;

        anns#12 = 0;

        ianns#13 = 0;

        tanns#14 = 0;

        itanns#15 = 0;

        innerClasses#16 = 0;

        module#17 = 0;

        packages#18 = 0;

        attributes#19 = null;

        $stack41 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int getAttributes()>();

        u#20 = $stack41;

        $stack42 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(u#20);

        i_2#21 = $stack42;

     label03:
        $stack161 = i_2#21;

        if $stack161 <= 0 goto label24;

        $stack121 = u#20 + 2;

        $stack122 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack121, c);

        attrName#22 = $stack122;

        $stack123 = "SourceFile";

        $stack124 = virtualinvoke $stack123.<java.lang.String: boolean equals(java.lang.Object)>(attrName#22);

        if $stack124 == 0 goto label04;

        $stack202 = u#20 + 8;

        $stack203 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack202, c);

        sourceFile#6 = $stack203;

        goto label23;

     label04:
        $stack125 = "InnerClasses";

        $stack126 = virtualinvoke $stack125.<java.lang.String: boolean equals(java.lang.Object)>(attrName#22);

        if $stack126 == 0 goto label05;

        innerClasses#16 = u#20 + 8;

        goto label23;

     label05:
        $stack127 = "EnclosingMethod";

        $stack128 = virtualinvoke $stack127.<java.lang.String: boolean equals(java.lang.Object)>(attrName#22);

        if $stack128 == 0 goto label07;

        $stack191 = u#20 + 8;

        $stack192 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack191, c);

        enclosingOwner#8 = $stack192;

        $stack193 = u#20 + 10;

        $stack194 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack193);

        item#23 = $stack194;

        if item#23 == 0 goto label06;

        $stack195 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack196 = $stack195[item#23];

        $stack197 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack196, c);

        enclosingName#9 = $stack197;

        $stack198 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack199 = $stack198[item#23];

        $stack200 = $stack199 + 2;

        $stack201 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack200, c);

        enclosingDesc#10 = $stack201;

     label06:
        goto label23;

     label07:
        $stack129 = "Signature";

        $stack130 = virtualinvoke $stack129.<java.lang.String: boolean equals(java.lang.Object)>(attrName#22);

        if $stack130 == 0 goto label08;

        $stack189 = u#20 + 8;

        $stack190 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack189, c);

        i_1#5 = $stack190;

        goto label23;

     label08:
        $stack131 = "RuntimeVisibleAnnotations";

        $stack132 = virtualinvoke $stack131.<java.lang.String: boolean equals(java.lang.Object)>(attrName#22);

        if $stack132 == 0 goto label09;

        anns#12 = u#20 + 8;

        goto label23;

     label09:
        $stack133 = "RuntimeVisibleTypeAnnotations";

        $stack134 = virtualinvoke $stack133.<java.lang.String: boolean equals(java.lang.Object)>(attrName#22);

        if $stack134 == 0 goto label10;

        tanns#14 = u#20 + 8;

        goto label23;

     label10:
        $stack135 = "Deprecated";

        $stack136 = virtualinvoke $stack135.<java.lang.String: boolean equals(java.lang.Object)>(attrName#22);

        if $stack136 == 0 goto label11;

        access#2 = access#2 | 131072;

        goto label23;

     label11:
        $stack137 = "Synthetic";

        $stack138 = virtualinvoke $stack137.<java.lang.String: boolean equals(java.lang.Object)>(attrName#22);

        if $stack138 == 0 goto label12;

        access#2 = access#2 | 266240;

        goto label23;

     label12:
        $stack139 = "SourceDebugExtension";

        $stack140 = virtualinvoke $stack139.<java.lang.String: boolean equals(java.lang.Object)>(attrName#22);

        if $stack140 == 0 goto label14;

        $stack179 = u#20 + 4;

        $stack180 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack179);

        item#24 = $stack180;

        $stack181 = this.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack183 = lengthof $stack181;

        $stack182 = u#20 + 8;

        $stack184 = $stack183 - $stack182;

        if item#24 <= $stack184 goto label13;

        $u1 = new java.lang.IllegalArgumentException;

        $stack188 = $u1;

        specialinvoke $u1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $stack188;

     label13:
        $stack186 = u#20 + 8;

        $stack185 = newarray (char)[item#24];

        $stack187 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF(int,int,char[])>($stack186, item#24, $stack185);

        sourceDebug#7 = $stack187;

        goto label23;

     label14:
        $stack141 = "RuntimeInvisibleAnnotations";

        $stack142 = virtualinvoke $stack141.<java.lang.String: boolean equals(java.lang.Object)>(attrName#22);

        if $stack142 == 0 goto label15;

        ianns#13 = u#20 + 8;

        goto label23;

     label15:
        $stack143 = "RuntimeInvisibleTypeAnnotations";

        $stack144 = virtualinvoke $stack143.<java.lang.String: boolean equals(java.lang.Object)>(attrName#22);

        if $stack144 == 0 goto label16;

        itanns#15 = u#20 + 8;

        goto label23;

     label16:
        $stack145 = "Module";

        $stack146 = virtualinvoke $stack145.<java.lang.String: boolean equals(java.lang.Object)>(attrName#22);

        if $stack146 == 0 goto label17;

        module#17 = u#20 + 8;

        goto label23;

     label17:
        $stack147 = "ModuleMainClass";

        $stack148 = virtualinvoke $stack147.<java.lang.String: boolean equals(java.lang.Object)>(attrName#22);

        if $stack148 == 0 goto label18;

        $stack177 = u#20 + 8;

        $stack178 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack177, c);

        moduleMainClass#11 = $stack178;

        goto label23;

     label18:
        $stack149 = "ModulePackages";

        $stack150 = virtualinvoke $stack149.<java.lang.String: boolean equals(java.lang.Object)>(attrName#22);

        if $stack150 == 0 goto label19;

        packages#18 = u#20 + 10;

        goto label23;

     label19:
        $stack151 = "BootstrapMethods";

        $stack152 = virtualinvoke $stack151.<java.lang.String: boolean equals(java.lang.Object)>(attrName#22);

        if $stack152 == 0 goto label22;

        $stack167 = u#20 + 8;

        $stack168 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack167);

        item#25 = newarray (int)[$stack168];

        j#26 = 0;

        v#27 = u#20 + 10;

     label20:
        $stack176 = j#26;

        $stack175 = item#25;

        $stack169 = lengthof $stack175;

        if $stack176 >= $stack169 goto label21;

        item#25[j#26] = v#27;

        $stack171 = 2;

        $stack170 = v#27 + 2;

        $stack172 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack170);

        $stack173 = $stack171 + $stack172;

        $stack174 = $stack173 << 1;

        v#27 = v#27 + $stack174;

        j#26 = j#26 + 1;

        goto label20;

     label21:
        context.<jdk.internal.org.objectweb.asm.Context: int[] bootstrapMethods> = item#25;

        goto label23;

     label22:
        $stack154 = u#20 + 8;

        $stack153 = u#20 + 4;

        $stack155 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack153);

        $b0 = -1;

        $i0 = (int) $b0;

        $stack156 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Attribute readAttribute(jdk.internal.org.objectweb.asm.Attribute[],java.lang.String,int,int,char[],int,jdk.internal.org.objectweb.asm.Label[])>(attrs, attrName#22, $stack154, $stack155, c, $i0, null);

        item#28 = $stack156;

        if item#28 == null goto label23;

        item#28.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = attributes#19;

        attributes#19 = item#28;

     label23:
        $stack165#29 = u#20;

        $stack165#30 = $stack165#29;

        $stack158#31 = 6;

        $stack158#32 = $stack158#31;

        $stack164#33 = this;

        $stack164#34 = $stack164#33;

        $stack163#35 = u#20;

        $stack163#36 = $stack163#35;

        $stack162#37 = 4;

        $stack162#38 = $stack162#37;

        $stack157#39 = $stack163#36 + $stack162#38;

        $stack157#40 = $stack157#39;

        $stack159#41 = virtualinvoke $stack164#34.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack157#40);

        $stack159#42 = $stack159#41;

        $stack160#43 = $stack158#32 + $stack159#42;

        $stack160#44 = $stack160#43;

        $stack166#45 = $stack165#30 + $stack160#44;

        $stack166#46 = $stack166#45;

        u#20 = $stack166#46;

        $b1 = -1;

        $i1 = (int) $b1;

        i_2#21 = i_2#21 + $i1;

        goto label03;

     label24:
        $stack43 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack44 = $stack43[1];

        $stack45 = $stack44 - 7;

        $stack46 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack45);

        virtualinvoke classVisitor.<jdk.internal.org.objectweb.asm.ClassVisitor: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($stack46, access#2, name, i_1#5, superClass, interfaces);

        $stack47 = flags & 2;

        if $stack47 != 0 goto label26;

        if sourceFile#6 != null goto label25;

        if sourceDebug#7 == null goto label26;

     label25:
        $stack120 = classVisitor;

        $stack118 = sourceFile#6;

        $stack119 = sourceDebug#7;

        virtualinvoke $stack120.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitSource(java.lang.String,java.lang.String)>($stack118, $stack119);

     label26:
        $stack117#47 = module#17;

        $stack117#48 = $stack117#47;

        if $stack117#48 == 0 goto label27;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: void readModule(jdk.internal.org.objectweb.asm.ClassVisitor,jdk.internal.org.objectweb.asm.Context,int,java.lang.String,int)>(classVisitor, context, module#17, moduleMainClass#11, packages#18);

     label27:
        $stack116 = enclosingOwner#8;

        if $stack116 == null goto label28;

        virtualinvoke classVisitor.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>(enclosingOwner#8, enclosingName#9, enclosingDesc#10);

     label28:
        $stack115 = anns#12;

        if $stack115 == 0 goto label30;

        $stack107 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(anns#12);

        i_2#49 = $stack107;

        attrName#50 = anns#12 + 2;

     label29:
        $stack114 = i_2#49;

        if $stack114 <= 0 goto label30;

        $stack109 = attrName#50 + 2;

        $stack110 = 1;

        $stack111 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(attrName#50, c);

        $stack112 = virtualinvoke classVisitor.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($stack111, 1);

        $stack113 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack109, c, $stack110, $stack112);

        attrName#50 = $stack113;

        $b2 = -1;

        $i2 = (int) $b2;

        i_2#49 = i_2#49 + $i2;

        goto label29;

     label30:
        $stack108 = ianns#13;

        if $stack108 == 0 goto label32;

        $stack99 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(ianns#13);

        i_2#51 = $stack99;

        attrName#52 = ianns#13 + 2;

     label31:
        $stack106 = i_2#51;

        if $stack106 <= 0 goto label32;

        $stack101 = attrName#52 + 2;

        $stack102 = 1;

        $stack103 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(attrName#52, c);

        $stack104 = virtualinvoke classVisitor.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($stack103, 0);

        $stack105 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack101, c, $stack102, $stack104);

        attrName#52 = $stack105;

        $b3 = -1;

        $i3 = (int) $b3;

        i_2#51 = i_2#51 + $i3;

        goto label31;

     label32:
        $stack100 = tanns#14;

        if $stack100 == 0 goto label34;

        $stack88 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(tanns#14);

        i_2#53 = $stack88;

        attrName#54 = tanns#14 + 2;

     label33:
        $stack98 = i_2#53;

        if $stack98 <= 0 goto label34;

        $stack90 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(context, attrName#54);

        attrName#55 = $stack90;

        $stack91 = attrName#55 + 2;

        $stack92 = 1;

        $stack93 = context.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack94 = context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack95 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(attrName#55, c);

        $stack96 = virtualinvoke classVisitor.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack93, $stack94, $stack95, 1);

        $stack97 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack91, c, $stack92, $stack96);

        attrName#54 = $stack97;

        $b4 = -1;

        $i4 = (int) $b4;

        i_2#53 = i_2#53 + $i4;

        goto label33;

     label34:
        $stack89 = itanns#15;

        if $stack89 == 0 goto label36;

        $stack78 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(itanns#15);

        i_2#56 = $stack78;

        attrName#57 = itanns#15 + 2;

     label35:
        $stack87 = i_2#56;

        if $stack87 <= 0 goto label36;

        $stack79 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(context, attrName#57);

        attrName#58 = $stack79;

        $stack80 = attrName#58 + 2;

        $stack81 = 1;

        $stack82 = context.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack83 = context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack84 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(attrName#58, c);

        $stack85 = virtualinvoke classVisitor.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack82, $stack83, $stack84, 0);

        $stack86 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack80, c, $stack81, $stack85);

        attrName#57 = $stack86;

        $b5 = -1;

        $i5 = (int) $b5;

        i_2#56 = i_2#56 + $i5;

        goto label35;

     label36:
        $stack77#59 = attributes#19;

        $stack77#60 = $stack77#59;

        if $stack77#60 == null goto label37;

        i_2#61 = attributes#19.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next>;

        attributes#19.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = null;

        virtualinvoke classVisitor.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)>(attributes#19);

        attributes#19 = i_2#61;

        goto label36;

     label37:
        if innerClasses#16 == 0 goto label39;

        i_2#62 = innerClasses#16 + 2;

        $stack60 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(innerClasses#16);

        attrName#63 = $stack60;

     label38:
        $stack76 = attrName#63;

        if $stack76 <= 0 goto label39;

        $stack69 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(i_2#62, c);

        $stack70 = i_2#62 + 2;

        $stack71 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack70, c);

        $stack72 = i_2#62 + 4;

        $stack73 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack72, c);

        $stack74 = i_2#62 + 6;

        $stack75 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack74);

        virtualinvoke classVisitor.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>($stack69, $stack71, $stack73, $stack75);

        i_2#62 = i_2#62 + 8;

        $b6 = -1;

        $i6 = (int) $b6;

        attrName#63 = attrName#63 + $i6;

        goto label38;

     label39:
        $stack61 = this;

        $stack48 = $stack61.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack62 = 10;

        $stack51 = $stack48 + $stack62;

        $stack64 = 2;

        $stack63 = interfaces;

        $stack49 = lengthof $stack63;

        $stack50 = $stack64 * $stack49;

        $stack65 = $stack51 + $stack50;

        u#64 = $stack65;

        $stack68 = this;

        $stack67 = u#64;

        $stack66 = 2;

        $stack52 = $stack67 - $stack66;

        $stack53 = virtualinvoke $stack68.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack52);

        i_2#65 = $stack53;

     label40:
        $stack59#66 = i_2#65;

        $stack59#67 = $stack59#66;

        if $stack59#67 <= 0 goto label41;

        $stack58 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readField(jdk.internal.org.objectweb.asm.ClassVisitor,jdk.internal.org.objectweb.asm.Context,int)>(classVisitor, context, u#64);

        u#64 = $stack58;

        $b7 = -1;

        $i7 = (int) $b7;

        i_2#65 = i_2#65 + $i7;

        goto label40;

     label41:
        u#68 = u#64 + 2;

        $stack54 = u#68 - 2;

        $stack55 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack54);

        i_2#69 = $stack55;

     label42:
        $stack57 = i_2#69;

        if $stack57 <= 0 goto label43;

        $stack56 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readMethod(jdk.internal.org.objectweb.asm.ClassVisitor,jdk.internal.org.objectweb.asm.Context,int)>(classVisitor, context, u#68);

        u#68 = $stack56;

        $b8 = -1;

        $i8 = (int) $b8;

        i_2#69 = i_2#69 + $i8;

        goto label42;

     label43:
        virtualinvoke classVisitor.<jdk.internal.org.objectweb.asm.ClassVisitor: void visitEnd()>();

        return;

        nop;
    }

    private void readModule(jdk.internal.org.objectweb.asm.ClassVisitor, jdk.internal.org.objectweb.asm.Context, int, java.lang.String, int)
    {
        byte $stack79, $b0, $b1, $b2, $b3, $b4, $b5;
        jdk.internal.org.objectweb.asm.Context context;
        jdk.internal.org.objectweb.asm.ClassVisitor classVisitor;
        int $stack18, $stack19, flags, $stack20, $stack23, $stack24, $stack25, $stack26, $stack27, $stack28, $stack29, $stack30, $stack31, $stack32, $stack34, $stack35, $stack36, $stack37, $stack40, $stack42, $stack44, $stack45, $stack46, $stack47, $stack48, $stack49, $stack51, $stack56, $stack58, $stack59, $stack60, $stack61, $stack62, $stack63, $stack65, $stack70, $stack72, $stack73, $stack74, $stack77, $stack78, $stack80, $stack83, $stack84, u#1, packages#2, u#3, i#4, u#6, i#7, $stack76#8, $stack76#9, access#11, u#13, i#14, access#16, requireVersion#17, j#19, u#20, i#21, access#23, requireVersion#24, j#26, u#27, i#28, u#29, i#30, access#32, tos#34, $i0, $i1, $i2, $i3, $i4, $i5;
        jdk.internal.org.objectweb.asm.ClassReader this, $stack81;
        bottom_type u, packages, i, packaze, access, requireVersion, tos, j, $stack76;
        java.lang.String $stack17, name, $stack21, version, mainClass, $stack33, $stack38, $stack41, $stack43, $stack50, $stack54, $stack57, $stack64, $stack68, $stack71, $stack75, $stack82, packaze#5, packaze#10, requireVersion#12, packaze#15, packaze#22, packaze#31;
        jdk.internal.org.objectweb.asm.ModuleVisitor $stack22, mv, $stack53, $stack67;
        char[] buffer;
        java.lang.String[] $stack39, $stack52, $stack55, $stack66, $stack69, tos#18, tos#25, requireVersion#33;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        classVisitor := @parameter0: jdk.internal.org.objectweb.asm.ClassVisitor;

        context := @parameter1: jdk.internal.org.objectweb.asm.Context;

        u#1 := @parameter2: int;

        mainClass := @parameter3: java.lang.String;

        packages#2 := @parameter4: int;

        buffer = context.<jdk.internal.org.objectweb.asm.Context: char[] buffer>;

        $stack17 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readModule(int,char[])>(u#1, buffer);

        name = $stack17;

        $stack18 = u#1 + 2;

        $stack19 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack18);

        flags = $stack19;

        $stack20 = u#1 + 4;

        $stack21 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack20, buffer);

        version = $stack21;

        u#3 = u#1 + 6;

        $stack22 = virtualinvoke classVisitor.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.ModuleVisitor visitModule(java.lang.String,int,java.lang.String)>(name, flags, version);

        mv = $stack22;

        if mv != null goto label01;

        return;

     label01:
        if mainClass == null goto label02;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.ModuleVisitor: void visitMainClass(java.lang.String)>(mainClass);

     label02:
        $stack84 = packages#2;

        if $stack84 == 0 goto label04;

        $stack77 = packages#2 - 2;

        $stack78 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack77);

        i#4 = $stack78;

     label03:
        $stack83 = i#4;

        if $stack83 <= 0 goto label04;

        $stack82 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readPackage(int,char[])>(packages#2, buffer);

        packaze#5 = $stack82;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.ModuleVisitor: void visitPackage(java.lang.String)>(packaze#5);

        packages#2 = packages#2 + 2;

        $b0 = -1;

        $i0 = (int) $b0;

        i#4 = i#4 + $i0;

        goto label03;

     label04:
        u#6 = u#3 + 2;

        $stack81 = this;

        $stack80 = u#6;

        $stack79 = 2;

        $stack23 = $stack80 - $stack79;

        $stack24 = virtualinvoke $stack81.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack23);

        i#7 = $stack24;

     label05:
        $stack76#8 = i#7;

        $stack76#9 = $stack76#8;

        if $stack76#9 <= 0 goto label06;

        $stack71 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readModule(int,char[])>(u#6, buffer);

        packaze#10 = $stack71;

        $stack72 = u#6 + 2;

        $stack73 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack72);

        access#11 = $stack73;

        $stack74 = u#6 + 4;

        $stack75 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack74, buffer);

        requireVersion#12 = $stack75;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.ModuleVisitor: void visitRequire(java.lang.String,int,java.lang.String)>(packaze#10, access#11, requireVersion#12);

        u#6 = u#6 + 6;

        $b1 = -1;

        $i1 = (int) $b1;

        i#7 = i#7 + $i1;

        goto label05;

     label06:
        u#13 = u#6 + 2;

        $stack25 = u#13 - 2;

        $stack26 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack25);

        i#14 = $stack26;

     label07:
        $stack62 = i#14;

        if $stack62 <= 0 goto label10;

        $stack57 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readPackage(int,char[])>(u#13, buffer);

        packaze#15 = $stack57;

        $stack58 = u#13 + 2;

        $stack59 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack58);

        access#16 = $stack59;

        $stack60 = u#13 + 4;

        $stack61 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack60);

        requireVersion#17 = $stack61;

        u#13 = u#13 + 6;

        tos#18 = null;

        if requireVersion#17 == 0 goto label09;

        tos#18 = newarray (java.lang.String)[requireVersion#17];

        j#19 = 0;

     label08:
        $stack70 = j#19;

        $stack69 = tos#18;

        $stack63 = lengthof $stack69;

        if $stack70 >= $stack63 goto label09;

        $stack68 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readModule(int,char[])>(u#13, buffer);

        tos#18[j#19] = $stack68;

        u#13 = u#13 + 2;

        j#19 = j#19 + 1;

        goto label08;

     label09:
        $stack67 = mv;

        $stack64 = packaze#15;

        $stack65 = access#16;

        $stack66 = tos#18;

        virtualinvoke $stack67.<jdk.internal.org.objectweb.asm.ModuleVisitor: void visitExport(java.lang.String,int,java.lang.String[])>($stack64, $stack65, $stack66);

        $b2 = -1;

        $i2 = (int) $b2;

        i#14 = i#14 + $i2;

        goto label07;

     label10:
        u#20 = u#13 + 2;

        $stack27 = u#20 - 2;

        $stack28 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack27);

        i#21 = $stack28;

     label11:
        $stack48 = i#21;

        if $stack48 <= 0 goto label14;

        $stack43 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readPackage(int,char[])>(u#20, buffer);

        packaze#22 = $stack43;

        $stack44 = u#20 + 2;

        $stack45 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack44);

        access#23 = $stack45;

        $stack46 = u#20 + 4;

        $stack47 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack46);

        requireVersion#24 = $stack47;

        u#20 = u#20 + 6;

        tos#25 = null;

        if requireVersion#24 == 0 goto label13;

        tos#25 = newarray (java.lang.String)[requireVersion#24];

        j#26 = 0;

     label12:
        $stack56 = j#26;

        $stack55 = tos#25;

        $stack49 = lengthof $stack55;

        if $stack56 >= $stack49 goto label13;

        $stack54 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readModule(int,char[])>(u#20, buffer);

        tos#25[j#26] = $stack54;

        u#20 = u#20 + 2;

        j#26 = j#26 + 1;

        goto label12;

     label13:
        $stack53 = mv;

        $stack50 = packaze#22;

        $stack51 = access#23;

        $stack52 = tos#25;

        virtualinvoke $stack53.<jdk.internal.org.objectweb.asm.ModuleVisitor: void visitOpen(java.lang.String,int,java.lang.String[])>($stack50, $stack51, $stack52);

        $b3 = -1;

        $i3 = (int) $b3;

        i#21 = i#21 + $i3;

        goto label11;

     label14:
        u#27 = u#20 + 2;

        $stack29 = u#27 - 2;

        $stack30 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack29);

        i#28 = $stack30;

     label15:
        $stack42 = i#28;

        if $stack42 <= 0 goto label16;

        $stack41 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(u#27, buffer);

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.ModuleVisitor: void visitUse(java.lang.String)>($stack41);

        u#27 = u#27 + 2;

        $b4 = -1;

        $i4 = (int) $b4;

        i#28 = i#28 + $i4;

        goto label15;

     label16:
        u#29 = u#27 + 2;

        $stack31 = u#29 - 2;

        $stack32 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack31);

        i#30 = $stack32;

     label17:
        $stack37 = i#30;

        if $stack37 <= 0 goto label20;

        $stack33 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(u#29, buffer);

        packaze#31 = $stack33;

        $stack34 = u#29 + 2;

        $stack35 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack34);

        access#32 = $stack35;

        u#29 = u#29 + 4;

        requireVersion#33 = newarray (java.lang.String)[access#32];

        tos#34 = 0;

     label18:
        $stack40 = tos#34;

        $stack39 = requireVersion#33;

        $stack36 = lengthof $stack39;

        if $stack40 >= $stack36 goto label19;

        $stack38 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(u#29, buffer);

        requireVersion#33[tos#34] = $stack38;

        u#29 = u#29 + 2;

        tos#34 = tos#34 + 1;

        goto label18;

     label19:
        virtualinvoke mv.<jdk.internal.org.objectweb.asm.ModuleVisitor: void visitProvide(java.lang.String,java.lang.String[])>(packaze#31, requireVersion#33);

        $b5 = -1;

        $i5 = (int) $b5;

        i#30 = i#30 + $i5;

        goto label17;

     label20:
        virtualinvoke mv.<jdk.internal.org.objectweb.asm.ModuleVisitor: void visitEnd()>();

        return;

        nop;
    }

    private int readField(jdk.internal.org.objectweb.asm.ClassVisitor, jdk.internal.org.objectweb.asm.Context, int)
    {
        byte $stack87#18, $stack87#19, $stack91#24, $stack91#25, $b0, $b1, $b2, $b3, $b4, $b5;
        jdk.internal.org.objectweb.asm.Context context;
        jdk.internal.org.objectweb.asm.ClassVisitor classVisitor;
        jdk.internal.org.objectweb.asm.Attribute[] $stack82;
        int $stack18, $stack19, $stack21, $stack23, $stack26, $stack27, $stack28, $stack30, $stack34, $stack35, $stack36, $stack37, $stack38, $stack39, $stack41, $stack45, $stack46, $stack47, $stack48, $stack49, $stack53, $stack54, $stack55, $stack56, $stack57, $stack61, $stack62, $stack63, $stack81, $stack83, $stack84, $stack90, $stack96, $stack98, $stack99, u#1, access#2, u#3, anns#5, ianns#6, tanns#7, itanns#8, i#11, item#13, $stack94#16, $stack94#17, $stack92#22, $stack92#23, $stack86#26, $stack86#27, $stack88#28, $stack88#29, $stack89#30, $stack89#31, $stack95#32, $stack95#33, u#34, attrName#36, item#37, attrName#38, item#39, attrName#40, item#41, item#42, attrName#43, item#44, item#45, $i0, $i1, $i2, $i3, $i4, $i5;
        jdk.internal.org.objectweb.asm.ClassReader this, $stack93#20, $stack93#21;
        java.lang.Object value#9, $stack100#14;
        bottom_type u, access, signature, anns, ianns, tanns, itanns, value, attributes, i, attrName, $stack25, item, $stack86, $stack87, $stack88, $stack89, $stack91, $stack92, $stack93, $stack94, $stack95, $stack100;
        jdk.internal.org.objectweb.asm.FieldVisitor $stack24, i#35;
        java.lang.String $stack20, name, $stack22, desc, $stack32, $stack43, $stack51, $stack59, $stack64, $stack65, $stack67, $stack69, $stack71, $stack73, $stack75, $stack77, $stack79, $stack97, signature#4, attrName#12;
        char[] c;
        boolean $stack29, $stack40, $stack50, $stack58, $stack66, $stack68, $stack70, $stack72, $stack74, $stack76, $stack78, $stack80;
        jdk.internal.org.objectweb.asm.TypePath $stack31, $stack42;
        jdk.internal.org.objectweb.asm.Attribute $stack85, attributes#10, item#15, $stack25#46, $stack25#47, attrName#48;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $stack33, $stack44, $stack52, $stack60;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        classVisitor := @parameter0: jdk.internal.org.objectweb.asm.ClassVisitor;

        context := @parameter1: jdk.internal.org.objectweb.asm.Context;

        u#1 := @parameter2: int;

        c = context.<jdk.internal.org.objectweb.asm.Context: char[] buffer>;

        $stack18 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(u#1);

        access#2 = $stack18;

        $stack19 = u#1 + 2;

        $stack20 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack19, c);

        name = $stack20;

        $stack21 = u#1 + 4;

        $stack22 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack21, c);

        desc = $stack22;

        u#3 = u#1 + 6;

        signature#4 = null;

        anns#5 = 0;

        ianns#6 = 0;

        tanns#7 = 0;

        itanns#8 = 0;

        value#9 = null;

        attributes#10 = null;

        $stack23 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(u#3);

        i#11 = $stack23;

     label01:
        $stack90 = i#11;

        if $stack90 <= 0 goto label13;

        $stack63 = u#3 + 2;

        $stack64 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack63, c);

        attrName#12 = $stack64;

        $stack65 = "ConstantValue";

        $stack66 = virtualinvoke $stack65.<java.lang.String: boolean equals(java.lang.Object)>(attrName#12);

        if $stack66 == 0 goto label04;

        $stack98 = u#3 + 8;

        $stack99 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack98);

        item#13 = $stack99;

        if item#13 != 0 goto label02;

        $stack100#14 = null;

        goto label03;

     label02:
        $stack100#14 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>(item#13, c);

     label03:
        value#9 = $stack100#14;

        goto label12;

     label04:
        $stack67 = "Signature";

        $stack68 = virtualinvoke $stack67.<java.lang.String: boolean equals(java.lang.Object)>(attrName#12);

        if $stack68 == 0 goto label05;

        $stack96 = u#3 + 8;

        $stack97 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack96, c);

        signature#4 = $stack97;

        goto label12;

     label05:
        $stack69 = "Deprecated";

        $stack70 = virtualinvoke $stack69.<java.lang.String: boolean equals(java.lang.Object)>(attrName#12);

        if $stack70 == 0 goto label06;

        access#2 = access#2 | 131072;

        goto label12;

     label06:
        $stack71 = "Synthetic";

        $stack72 = virtualinvoke $stack71.<java.lang.String: boolean equals(java.lang.Object)>(attrName#12);

        if $stack72 == 0 goto label07;

        access#2 = access#2 | 266240;

        goto label12;

     label07:
        $stack73 = "RuntimeVisibleAnnotations";

        $stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>(attrName#12);

        if $stack74 == 0 goto label08;

        anns#5 = u#3 + 8;

        goto label12;

     label08:
        $stack75 = "RuntimeVisibleTypeAnnotations";

        $stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>(attrName#12);

        if $stack76 == 0 goto label09;

        tanns#7 = u#3 + 8;

        goto label12;

     label09:
        $stack77 = "RuntimeInvisibleAnnotations";

        $stack78 = virtualinvoke $stack77.<java.lang.String: boolean equals(java.lang.Object)>(attrName#12);

        if $stack78 == 0 goto label10;

        ianns#6 = u#3 + 8;

        goto label12;

     label10:
        $stack79 = "RuntimeInvisibleTypeAnnotations";

        $stack80 = virtualinvoke $stack79.<java.lang.String: boolean equals(java.lang.Object)>(attrName#12);

        if $stack80 == 0 goto label11;

        itanns#8 = u#3 + 8;

        goto label12;

     label11:
        $stack82 = context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Attribute[] attrs>;

        $stack83 = u#3 + 8;

        $stack81 = u#3 + 4;

        $stack84 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack81);

        $b0 = -1;

        $i0 = (int) $b0;

        $stack85 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Attribute readAttribute(jdk.internal.org.objectweb.asm.Attribute[],java.lang.String,int,int,char[],int,jdk.internal.org.objectweb.asm.Label[])>($stack82, attrName#12, $stack83, $stack84, c, $i0, null);

        item#15 = $stack85;

        if item#15 == null goto label12;

        item#15.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = attributes#10;

        attributes#10 = item#15;

     label12:
        $stack94#16 = u#3;

        $stack94#17 = $stack94#16;

        $stack87#18 = 6;

        $stack87#19 = $stack87#18;

        $stack93#20 = this;

        $stack93#21 = $stack93#20;

        $stack92#22 = u#3;

        $stack92#23 = $stack92#22;

        $stack91#24 = 4;

        $stack91#25 = $stack91#24;

        $stack86#26 = $stack92#23 + $stack91#25;

        $stack86#27 = $stack86#26;

        $stack88#28 = virtualinvoke $stack93#21.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack86#27);

        $stack88#29 = $stack88#28;

        $stack89#30 = $stack87#19 + $stack88#29;

        $stack89#31 = $stack89#30;

        $stack95#32 = $stack94#17 + $stack89#31;

        $stack95#33 = $stack95#32;

        u#3 = $stack95#33;

        $b1 = -1;

        $i1 = (int) $b1;

        i#11 = i#11 + $i1;

        goto label01;

     label13:
        u#34 = u#3 + 2;

        $stack24 = virtualinvoke classVisitor.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>(access#2, name, desc, signature#4, value#9);

        i#35 = $stack24;

        if i#35 != null goto label14;

        return u#34;

     label14:
        if anns#5 == 0 goto label16;

        $stack55 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(anns#5);

        attrName#36 = $stack55;

        item#37 = anns#5 + 2;

     label15:
        $stack62 = attrName#36;

        if $stack62 <= 0 goto label16;

        $stack57 = item#37 + 2;

        $stack58 = 1;

        $stack59 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(item#37, c);

        $stack60 = virtualinvoke i#35.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($stack59, 1);

        $stack61 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack57, c, $stack58, $stack60);

        item#37 = $stack61;

        $b2 = -1;

        $i2 = (int) $b2;

        attrName#36 = attrName#36 + $i2;

        goto label15;

     label16:
        $stack56 = ianns#6;

        if $stack56 == 0 goto label18;

        $stack47 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(ianns#6);

        attrName#38 = $stack47;

        item#39 = ianns#6 + 2;

     label17:
        $stack54 = attrName#38;

        if $stack54 <= 0 goto label18;

        $stack49 = item#39 + 2;

        $stack50 = 1;

        $stack51 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(item#39, c);

        $stack52 = virtualinvoke i#35.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($stack51, 0);

        $stack53 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack49, c, $stack50, $stack52);

        item#39 = $stack53;

        $b3 = -1;

        $i3 = (int) $b3;

        attrName#38 = attrName#38 + $i3;

        goto label17;

     label18:
        $stack48 = tanns#7;

        if $stack48 == 0 goto label20;

        $stack36 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(tanns#7);

        attrName#40 = $stack36;

        item#41 = tanns#7 + 2;

     label19:
        $stack46 = attrName#40;

        if $stack46 <= 0 goto label20;

        $stack38 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(context, item#41);

        item#42 = $stack38;

        $stack39 = item#42 + 2;

        $stack40 = 1;

        $stack41 = context.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack42 = context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack43 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(item#42, c);

        $stack44 = virtualinvoke i#35.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack41, $stack42, $stack43, 1);

        $stack45 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack39, c, $stack40, $stack44);

        item#41 = $stack45;

        $b4 = -1;

        $i4 = (int) $b4;

        attrName#40 = attrName#40 + $i4;

        goto label19;

     label20:
        $stack37 = itanns#8;

        if $stack37 == 0 goto label22;

        $stack26 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(itanns#8);

        attrName#43 = $stack26;

        item#44 = itanns#8 + 2;

     label21:
        $stack35 = attrName#43;

        if $stack35 <= 0 goto label22;

        $stack27 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(context, item#44);

        item#45 = $stack27;

        $stack28 = item#45 + 2;

        $stack29 = 1;

        $stack30 = context.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack31 = context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack32 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(item#45, c);

        $stack33 = virtualinvoke i#35.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack30, $stack31, $stack32, 0);

        $stack34 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack28, c, $stack29, $stack33);

        item#44 = $stack34;

        $b5 = -1;

        $i5 = (int) $b5;

        attrName#43 = attrName#43 + $i5;

        goto label21;

     label22:
        $stack25#46 = attributes#10;

        $stack25#47 = $stack25#46;

        if $stack25#47 == null goto label23;

        attrName#48 = attributes#10.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next>;

        attributes#10.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = null;

        virtualinvoke i#35.<jdk.internal.org.objectweb.asm.FieldVisitor: void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)>(attributes#10);

        attributes#10 = attrName#48;

        goto label22;

     label23:
        virtualinvoke i#35.<jdk.internal.org.objectweb.asm.FieldVisitor: void visitEnd()>();

        return u#34;

        nop;
    }

    private int readMethod(jdk.internal.org.objectweb.asm.ClassVisitor, jdk.internal.org.objectweb.asm.Context, int)
    {
        byte[] $stack79;
        byte $stack80, $stack135#22, $stack135#23, $stack139#28, $stack139#29, $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8;
        jdk.internal.org.objectweb.asm.MethodWriter attrName#40;
        jdk.internal.org.objectweb.asm.Context context;
        int[] $stack95;
        jdk.internal.org.objectweb.asm.ClassVisitor classVisitor;
        jdk.internal.org.objectweb.asm.Attribute[] $stack130;
        int $stack23, $stack24, $stack26, firstAttribute, $stack28, $stack31, $stack35, $stack37, $stack38, $stack39, $stack40, $stack41, $stack43, $stack47, $stack48, $stack49, $stack50, $stack51, $stack52, $stack54, $stack58, $stack59, $stack60, $stack61, $stack62, $stack66, $stack67, $stack68, $stack69, $stack70, $stack74, $stack75, $stack77, $stack81, $stack83, $stack84, $stack85, $stack90, $stack91, $stack92, $stack93, $stack96, $stack97, $stack98, $stack99, $stack101, $stack129, $stack131, $stack132, $stack138, $stack144, $stack145, $stack146, $stack147, $stack148, $stack150, $stack151, $stack152, $stack155, $stack156, $stack157, u#1, u#2, code#3, exception#4, methodParameters#7, anns#8, ianns#9, tanns#10, itanns#11, dann#12, mpanns#13, impanns#14, i#16, j_1#18, $stack142#20, $stack142#21, $stack140#26, $stack140#27, $stack134#30, $stack134#31, $stack136#32, $stack136#33, $stack137#34, $stack137#35, $stack143#36, $stack143#37, u#38, j_2#43, $stack88#46, $stack88#47, attrName#48, j_1#49, $stack78#51, $stack78#52, attrName#53, j_1#54, attrName#55, j_1#56, attrName#57, j_1#58, j_1#59, attrName#60, j_1#61, j_1#62, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        jdk.internal.org.objectweb.asm.ClassReader this, $stack87, $stack141#24, $stack141#25;
        jdk.internal.org.objectweb.asm.MethodVisitor $stack32, $stack34, i#39;
        bottom_type u, code, exception, exceptions, signature, methodParameters, anns, ianns, tanns, itanns, dann, mpanns, impanns, attributes, i, attrName, $stack36, j_1, $stack78, $stack88, j_2, $stack94, $stack100, $stack134, $stack135, $stack136, $stack137, $stack139, $stack140, $stack141, $stack142, $stack143;
        java.lang.String $stack25, $stack27, $stack29, $stack30, $stack45, $stack56, $stack64, $stack72, $stack82, $stack89, $stack102, $stack103, $stack105, $stack107, $stack109, $stack111, $stack113, $stack115, $stack117, $stack119, $stack121, $stack123, $stack125, $stack127, $stack149, $stack153, signature#6, attrName#17;
        char[] c;
        boolean $stack33, $stack42, $stack53, $stack63, $stack71, $stack104, $stack106, $stack108, $stack110, $stack112, $stack114, $stack116, $stack118, $stack120, $stack122, $stack124, $stack126, $stack128, j_1#41, $stack100#42, $stack94#44, $stack94#45;
        jdk.internal.org.objectweb.asm.TypePath $stack44, $stack55;
        jdk.internal.org.objectweb.asm.Attribute $stack133, attributes#15, j_1#19, $stack36#63, $stack36#64, attrName#65;
        jdk.internal.org.objectweb.asm.ClassWriter $stack86;
        java.lang.String[] $stack154, exceptions#5;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $stack46, $stack57, $stack65, $stack73, $stack76, attrName#50;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        classVisitor := @parameter0: jdk.internal.org.objectweb.asm.ClassVisitor;

        context := @parameter1: jdk.internal.org.objectweb.asm.Context;

        u#1 := @parameter2: int;

        c = context.<jdk.internal.org.objectweb.asm.Context: char[] buffer>;

        $stack23 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(u#1);

        context.<jdk.internal.org.objectweb.asm.Context: int access> = $stack23;

        $stack24 = u#1 + 2;

        $stack25 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack24, c);

        context.<jdk.internal.org.objectweb.asm.Context: java.lang.String name> = $stack25;

        $stack26 = u#1 + 4;

        $stack27 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack26, c);

        context.<jdk.internal.org.objectweb.asm.Context: java.lang.String desc> = $stack27;

        u#2 = u#1 + 6;

        code#3 = 0;

        exception#4 = 0;

        exceptions#5 = null;

        signature#6 = null;

        methodParameters#7 = 0;

        anns#8 = 0;

        ianns#9 = 0;

        tanns#10 = 0;

        itanns#11 = 0;

        dann#12 = 0;

        mpanns#13 = 0;

        impanns#14 = 0;

        firstAttribute = u#2;

        attributes#15 = null;

        $stack28 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(u#2);

        i#16 = $stack28;

     label01:
        $stack138 = i#16;

        if $stack138 <= 0 goto label18;

        $stack101 = u#2 + 2;

        $stack102 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack101, c);

        attrName#17 = $stack102;

        $stack103 = "Code";

        $stack104 = virtualinvoke $stack103.<java.lang.String: boolean equals(java.lang.Object)>(attrName#17);

        if $stack104 == 0 goto label02;

        $stack156 = context.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack157 = $stack156 & 1;

        if $stack157 != 0 goto label17;

        code#3 = u#2 + 8;

        goto label17;

     label02:
        $stack105 = "Exceptions";

        $stack106 = virtualinvoke $stack105.<java.lang.String: boolean equals(java.lang.Object)>(attrName#17);

        if $stack106 == 0 goto label05;

        $stack150 = u#2 + 8;

        $stack151 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack150);

        exceptions#5 = newarray (java.lang.String)[$stack151];

        exception#4 = u#2 + 10;

        j_1#18 = 0;

     label03:
        $stack155 = j_1#18;

        $stack154 = exceptions#5;

        $stack152 = lengthof $stack154;

        if $stack155 >= $stack152 goto label04;

        $stack153 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(exception#4, c);

        exceptions#5[j_1#18] = $stack153;

        exception#4 = exception#4 + 2;

        j_1#18 = j_1#18 + 1;

        goto label03;

     label04:
        goto label17;

     label05:
        $stack107 = "Signature";

        $stack108 = virtualinvoke $stack107.<java.lang.String: boolean equals(java.lang.Object)>(attrName#17);

        if $stack108 == 0 goto label06;

        $stack148 = u#2 + 8;

        $stack149 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack148, c);

        signature#6 = $stack149;

        goto label17;

     label06:
        $stack109 = "Deprecated";

        $stack110 = virtualinvoke $stack109.<java.lang.String: boolean equals(java.lang.Object)>(attrName#17);

        if $stack110 == 0 goto label07;

        $stack146 = context.<jdk.internal.org.objectweb.asm.Context: int access>;

        $stack147 = $stack146 | 131072;

        context.<jdk.internal.org.objectweb.asm.Context: int access> = $stack147;

        goto label17;

     label07:
        $stack111 = "RuntimeVisibleAnnotations";

        $stack112 = virtualinvoke $stack111.<java.lang.String: boolean equals(java.lang.Object)>(attrName#17);

        if $stack112 == 0 goto label08;

        anns#8 = u#2 + 8;

        goto label17;

     label08:
        $stack113 = "RuntimeVisibleTypeAnnotations";

        $stack114 = virtualinvoke $stack113.<java.lang.String: boolean equals(java.lang.Object)>(attrName#17);

        if $stack114 == 0 goto label09;

        tanns#10 = u#2 + 8;

        goto label17;

     label09:
        $stack115 = "AnnotationDefault";

        $stack116 = virtualinvoke $stack115.<java.lang.String: boolean equals(java.lang.Object)>(attrName#17);

        if $stack116 == 0 goto label10;

        dann#12 = u#2 + 8;

        goto label17;

     label10:
        $stack117 = "Synthetic";

        $stack118 = virtualinvoke $stack117.<java.lang.String: boolean equals(java.lang.Object)>(attrName#17);

        if $stack118 == 0 goto label11;

        $stack144 = context.<jdk.internal.org.objectweb.asm.Context: int access>;

        $stack145 = $stack144 | 266240;

        context.<jdk.internal.org.objectweb.asm.Context: int access> = $stack145;

        goto label17;

     label11:
        $stack119 = "RuntimeInvisibleAnnotations";

        $stack120 = virtualinvoke $stack119.<java.lang.String: boolean equals(java.lang.Object)>(attrName#17);

        if $stack120 == 0 goto label12;

        ianns#9 = u#2 + 8;

        goto label17;

     label12:
        $stack121 = "RuntimeInvisibleTypeAnnotations";

        $stack122 = virtualinvoke $stack121.<java.lang.String: boolean equals(java.lang.Object)>(attrName#17);

        if $stack122 == 0 goto label13;

        itanns#11 = u#2 + 8;

        goto label17;

     label13:
        $stack123 = "RuntimeVisibleParameterAnnotations";

        $stack124 = virtualinvoke $stack123.<java.lang.String: boolean equals(java.lang.Object)>(attrName#17);

        if $stack124 == 0 goto label14;

        mpanns#13 = u#2 + 8;

        goto label17;

     label14:
        $stack125 = "RuntimeInvisibleParameterAnnotations";

        $stack126 = virtualinvoke $stack125.<java.lang.String: boolean equals(java.lang.Object)>(attrName#17);

        if $stack126 == 0 goto label15;

        impanns#14 = u#2 + 8;

        goto label17;

     label15:
        $stack127 = "MethodParameters";

        $stack128 = virtualinvoke $stack127.<java.lang.String: boolean equals(java.lang.Object)>(attrName#17);

        if $stack128 == 0 goto label16;

        methodParameters#7 = u#2 + 8;

        goto label17;

     label16:
        $stack130 = context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Attribute[] attrs>;

        $stack131 = u#2 + 8;

        $stack129 = u#2 + 4;

        $stack132 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack129);

        $b0 = -1;

        $i0 = (int) $b0;

        $stack133 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Attribute readAttribute(jdk.internal.org.objectweb.asm.Attribute[],java.lang.String,int,int,char[],int,jdk.internal.org.objectweb.asm.Label[])>($stack130, attrName#17, $stack131, $stack132, c, $i0, null);

        j_1#19 = $stack133;

        if j_1#19 == null goto label17;

        j_1#19.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = attributes#15;

        attributes#15 = j_1#19;

     label17:
        $stack142#20 = u#2;

        $stack142#21 = $stack142#20;

        $stack135#22 = 6;

        $stack135#23 = $stack135#22;

        $stack141#24 = this;

        $stack141#25 = $stack141#24;

        $stack140#26 = u#2;

        $stack140#27 = $stack140#26;

        $stack139#28 = 4;

        $stack139#29 = $stack139#28;

        $stack134#30 = $stack140#27 + $stack139#29;

        $stack134#31 = $stack134#30;

        $stack136#32 = virtualinvoke $stack141#25.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack134#31);

        $stack136#33 = $stack136#32;

        $stack137#34 = $stack135#23 + $stack136#33;

        $stack137#35 = $stack137#34;

        $stack143#36 = $stack142#21 + $stack137#35;

        $stack143#37 = $stack143#36;

        u#2 = $stack143#37;

        $b1 = -1;

        $i1 = (int) $b1;

        i#16 = i#16 + $i1;

        goto label01;

     label18:
        u#38 = u#2 + 2;

        $stack31 = context.<jdk.internal.org.objectweb.asm.Context: int access>;

        $stack30 = context.<jdk.internal.org.objectweb.asm.Context: java.lang.String name>;

        $stack29 = context.<jdk.internal.org.objectweb.asm.Context: java.lang.String desc>;

        $stack32 = virtualinvoke classVisitor.<jdk.internal.org.objectweb.asm.ClassVisitor: jdk.internal.org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($stack31, $stack30, $stack29, signature#6, exceptions#5);

        i#39 = $stack32;

        if i#39 != null goto label19;

        return u#38;

     label19:
        $stack33 = i#39 instanceof jdk.internal.org.objectweb.asm.MethodWriter;

        if $stack33 == 0 goto label26;

        attrName#40 = (jdk.internal.org.objectweb.asm.MethodWriter) i#39;

        $stack86 = attrName#40.<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.ClassWriter cw>;

        $stack87 = $stack86.<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.ClassReader cr>;

        if $stack87 != this goto label26;

        $stack89 = attrName#40.<jdk.internal.org.objectweb.asm.MethodWriter: java.lang.String signature>;

        if signature#6 != $stack89 goto label26;

        j_1#41 = 0;

        if exceptions#5 != null goto label22;

        $stack99 = attrName#40.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount>;

        if $stack99 != 0 goto label20;

        $stack100#42 = 1;

        goto label21;

     label20:
        $stack100#42 = 0;

     label21:
        j_1#41 = $stack100#42;

        goto label25;

     label22:
        $stack91 = lengthof exceptions#5;

        $stack90 = attrName#40.<jdk.internal.org.objectweb.asm.MethodWriter: int exceptionCount>;

        if $stack91 != $stack90 goto label25;

        j_1#41 = 1;

        $stack93 = lengthof exceptions#5;

        j_2#43 = $stack93 - 1;

     label23:
        $stack98 = j_2#43;

        if $stack98 < 0 goto label25;

        $b2 = -2;

        $i2 = (int) $b2;

        exception#4 = exception#4 + $i2;

        $stack95 = attrName#40.<jdk.internal.org.objectweb.asm.MethodWriter: int[] exceptions>;

        $stack96 = $stack95[j_2#43];

        $stack97 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(exception#4);

        if $stack96 == $stack97 goto label24;

        j_1#41 = 0;

        goto label25;

     label24:
        $b3 = -1;

        $i3 = (int) $b3;

        j_2#43 = j_2#43 + $i3;

        goto label23;

     label25:
        $stack94#44 = j_1#41;

        $stack94#45 = $stack94#44;

        if $stack94#45 == 0 goto label26;

        attrName#40.<jdk.internal.org.objectweb.asm.MethodWriter: int classReaderOffset> = firstAttribute;

        $stack92 = u#38 - firstAttribute;

        attrName#40.<jdk.internal.org.objectweb.asm.MethodWriter: int classReaderLength> = $stack92;

        return u#38;

     label26:
        $stack88#46 = methodParameters#7;

        $stack88#47 = $stack88#46;

        if $stack88#47 == 0 goto label28;

        $stack79 = this.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack80 = $stack79[methodParameters#7];

        $i4 = (int) $stack80;

        attrName#48 = $i4 & 255;

        j_1#49 = methodParameters#7 + 1;

     label27:
        $stack85 = attrName#48;

        if $stack85 <= 0 goto label28;

        $stack82 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(j_1#49, c);

        $stack83 = j_1#49 + 2;

        $stack84 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack83);

        virtualinvoke i#39.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitParameter(java.lang.String,int)>($stack82, $stack84);

        $b4 = -1;

        $i5 = (int) $b4;

        attrName#48 = attrName#48 + $i5;

        j_1#49 = j_1#49 + 4;

        goto label27;

     label28:
        $stack81 = dann#12;

        if $stack81 == 0 goto label29;

        $stack76 = virtualinvoke i#39.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotationDefault()>();

        attrName#50 = $stack76;

        $stack77 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>(dann#12, c, null, attrName#50);

        if attrName#50 == null goto label29;

        virtualinvoke attrName#50.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visitEnd()>();

     label29:
        $stack78#51 = anns#8;

        $stack78#52 = $stack78#51;

        if $stack78#52 == 0 goto label31;

        $stack68 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(anns#8);

        attrName#53 = $stack68;

        j_1#54 = anns#8 + 2;

     label30:
        $stack75 = attrName#53;

        if $stack75 <= 0 goto label31;

        $stack70 = j_1#54 + 2;

        $stack71 = 1;

        $stack72 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(j_1#54, c);

        $stack73 = virtualinvoke i#39.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($stack72, 1);

        $stack74 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack70, c, $stack71, $stack73);

        j_1#54 = $stack74;

        $b5 = -1;

        $i6 = (int) $b5;

        attrName#53 = attrName#53 + $i6;

        goto label30;

     label31:
        $stack69 = ianns#9;

        if $stack69 == 0 goto label33;

        $stack60 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(ianns#9);

        attrName#55 = $stack60;

        j_1#56 = ianns#9 + 2;

     label32:
        $stack67 = attrName#55;

        if $stack67 <= 0 goto label33;

        $stack62 = j_1#56 + 2;

        $stack63 = 1;

        $stack64 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(j_1#56, c);

        $stack65 = virtualinvoke i#39.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($stack64, 0);

        $stack66 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack62, c, $stack63, $stack65);

        j_1#56 = $stack66;

        $b6 = -1;

        $i7 = (int) $b6;

        attrName#55 = attrName#55 + $i7;

        goto label32;

     label33:
        $stack61 = tanns#10;

        if $stack61 == 0 goto label35;

        $stack49 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(tanns#10);

        attrName#57 = $stack49;

        j_1#58 = tanns#10 + 2;

     label34:
        $stack59 = attrName#57;

        if $stack59 <= 0 goto label35;

        $stack51 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(context, j_1#58);

        j_1#59 = $stack51;

        $stack52 = j_1#59 + 2;

        $stack53 = 1;

        $stack54 = context.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack55 = context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack56 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(j_1#59, c);

        $stack57 = virtualinvoke i#39.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack54, $stack55, $stack56, 1);

        $stack58 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack52, c, $stack53, $stack57);

        j_1#58 = $stack58;

        $b7 = -1;

        $i8 = (int) $b7;

        attrName#57 = attrName#57 + $i8;

        goto label34;

     label35:
        $stack50 = itanns#11;

        if $stack50 == 0 goto label37;

        $stack38 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(itanns#11);

        attrName#60 = $stack38;

        j_1#61 = itanns#11 + 2;

     label36:
        $stack48 = attrName#60;

        if $stack48 <= 0 goto label37;

        $stack40 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(context, j_1#61);

        j_1#62 = $stack40;

        $stack41 = j_1#62 + 2;

        $stack42 = 1;

        $stack43 = context.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack44 = context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack45 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(j_1#62, c);

        $stack46 = virtualinvoke i#39.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack43, $stack44, $stack45, 0);

        $stack47 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack41, c, $stack42, $stack46);

        j_1#61 = $stack47;

        $b8 = -1;

        $i9 = (int) $b8;

        attrName#60 = attrName#60 + $i9;

        goto label36;

     label37:
        $stack39 = mpanns#13;

        if $stack39 == 0 goto label38;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: void readParameterAnnotations(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int,boolean)>(i#39, context, mpanns#13, 1);

     label38:
        $stack37 = impanns#14;

        if $stack37 == 0 goto label39;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: void readParameterAnnotations(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int,boolean)>(i#39, context, impanns#14, 0);

     label39:
        $stack36#63 = attributes#15;

        $stack36#64 = $stack36#63;

        if $stack36#64 == null goto label40;

        attrName#65 = attributes#15.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next>;

        attributes#15.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = null;

        virtualinvoke i#39.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)>(attributes#15);

        attributes#15 = attrName#65;

        goto label39;

     label40:
        if code#3 == 0 goto label41;

        virtualinvoke i#39.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitCode()>();

        virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>(i#39, context, code#3);

     label41:
        $stack34 = i#39;

        virtualinvoke $stack34.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitEnd()>();

        $stack35 = u#38;

        return $stack35;

        nop;
    }

    private void readCode(jdk.internal.org.objectweb.asm.MethodVisitor, jdk.internal.org.objectweb.asm.Context, int)
    {
        jdk.internal.org.objectweb.asm.Context context, $stack152, $stack384, $stack385, $stack386, $stack387, $stack392, $stack411, $stack452, frame#29, $stack405#80, $stack405#81, $stack371#99, $stack371#100;
        jdk.internal.org.objectweb.asm.MethodVisitor mv, $stack217, $stack220, $stack225, $stack389, $stack130#163, $stack130#164;
        java.lang.String $stack77, $stack96, $stack138, $stack178, $stack197, $stack305, $stack307, idesc, $stack317, $stack321, $stack323, $stack345, $stack360, $stack426, $stack427, $stack429, $stack431, $stack433, $stack435, $stack437, $stack439, $stack450, $stack539, type#14, attrName#34, max#128, table#130, i_3#131, i_4#140, max#161, $stack107#175, $stack107#176, $stack109#187, $stack109#188, $stack128#189, $stack128#190;
        jdk.internal.org.objectweb.asm.Label[] $stack47, labels, $stack74, $stack75, $stack93, $stack94, $stack213, $stack231, $stack270, table#117, table#123, $stack124#191, $stack124#192, $stack127#197, $stack127#198;
        char[] c, $stack328, $stack336, $stack340, $stack117#173, $stack117#174, $stack121#185, $stack121#186;
        boolean unzip, $stack391, $stack428, $stack430, $stack432, $stack434, $stack436, $stack438, $stack440, $stack451, zip#24, $stack518#25, attrName#90, $stack326#126, endif#127;
        jdk.internal.org.objectweb.asm.TypePath $stack73, $stack92, $stack177, $stack196;
        byte[] b, $stack155, $stack365, $stack542;
        byte $stack154, $stack156, $stack236, $stack273, $stack275, $stack281, $stack316, $stack353, $stack358, $stack362, $stack413, $stack421, $stack541, $stack543, $stack551, $stack400#88, i_2#89;
        jdk.internal.org.objectweb.asm.Attribute[] $stack441, $stack448, $stack454;
        jdk.internal.org.objectweb.asm.Attribute $stack449, $stack456, $stack460, attributes#30, v#46, $stack61#217, $stack61#218, j#219;
        java.lang.IllegalArgumentException $stack587, $u0;
        int[] $stack66, $stack76, $stack81, $stack85, $stack95, $stack132, $stack181, $stack200, $stack294, $stack296, $stack303, $stack313, $stack319, $stack479, $stack487, $stack536, offset#16, opcode#17, max#122, $stack185#141, $stack185#142, $stack166#145, $stack166#146, j#149, $stack99#209, $stack99#210;
        int $stack39, maxStack, $stack40, $stack41, maxLocals, $stack42, $stack43, codeLength, $stack44, $stack45, codeStart, codeEnd, $stack46, $stack48, $stack50, $stack51, $stack52, $stack53, $stack54, $stack55, $stack59, $stack60, $stack62, $stack63, $stack64, $stack65, $stack67, $stack68, $stack69, $stack70, $stack72, $stack80, $stack82, $stack83, $stack84, $stack86, $stack87, $stack88, $stack89, $stack91, $stack100, $stack101, $stack102, $stack103, $stack104, $stack105, $stack114, $stack131, $stack133, $stack134, $stack135, $stack136, $stack137, $stack139, $stack140, $stack142, $stack143, $stack144, $stack146, $stack147, $stack148, $stack149, $stack150, $stack157, $stack159, $stack160, $stack164, $stack165, $stack167, $stack168, $stack169, $stack170, $stack172, $stack173, $stack174, $stack176, $stack182, $stack183, $stack184, $stack186, $stack187, $stack188, $stack189, $stack191, $stack192, $stack193, $stack195, $stack201, $stack202, $stack203, $stack204, $stack205, $stack206, $stack208, $stack209, $stack212, $stack215, $stack223, $stack228, $stack230, $stack234, $stack235, $stack237, $stack238, $stack239, $stack240, $stack241, $stack243, $stack244, $stack245, $stack246, $stack247, $stack249, $stack250, $stack251, $stack252, $stack254, $stack255, $stack256, $stack257, $stack258, $stack259, $stack260, $stack261, $stack262, $stack263, $stack264, $stack265, $stack267, $stack268, $stack271, $stack272, $stack274, $stack277, $stack278, $stack280, $stack284, $stack285, $stack286, $stack287, $stack289, $stack291, $stack293, $stack295, $stack297, $stack298, $stack300, $stack301, $stack302, $stack304, $stack306, $stack308, $stack310, $stack311, $stack312, $stack314, $stack315, $stack318, $stack320, $stack322, $stack327, $stack332, $stack334, $stack335, $stack339, $stack344, $stack346, $stack347, $stack348, $stack349, $stack350, $stack351, $stack352, $stack355, $stack357, $stack359, $stack361, $stack364, $stack369, $stack370, $stack372, $stack374, $stack376, $stack379, $stack381, $stack382, $stack390, $stack394, $stack395, $stack396, $stack397, $stack398, $stack402, $stack403, $stack404, $stack418, $stack419, $stack420, $stack424, $stack425, $stack442, $stack453, $stack455, $stack457, $stack458, $stack459, $stack461, $stack462, $stack468, $stack469, $stack470, $stack471, $stack472, $stack473, $stack474, $stack475, $stack476, $stack477, $stack478, $stack480, $stack481, $stack482, $stack483, $stack484, $stack486, $stack488, $stack489, $stack490, $stack491, $stack492, $stack494, $stack495, $stack496, $stack497, $stack498, $stack499, $stack500, $stack501, $stack502, $stack503, $stack509, $stack510, $stack511, $stack512, $stack513, $stack514, $stack515, $stack516, $stack517, $stack524, $stack526, $stack527, $stack529, $stack530, $stack532, $stack533, $stack535, $stack537, $stack538, $stack540, $stack544, $stack545, $stack546, $stack548, $stack549, $stack550, $stack552, $stack553, $stack554, $stack555, $stack557, $stack558, $stack559, $stack560, $stack561, $stack563, $stack564, $stack565, $stack566, $stack567, $stack569, $stack570, $stack571, $stack572, $stack573, $stack574, $stack575, $stack576, $stack578, $stack579, $stack580, $stack581, $stack583, $stack585, u#1, u#2, offset#3, u#6, i_1#7, u#8, i_1#9, offset#10, u#15, i_1#18, handler#19, type#20, nitoff#21, varTable#22, varTypeTable#23, stackMap#26, stackMapSize#27, frameCount#28, i_2#31, $stack447#32, $stack447#33, j#35, v#36, label#37, label#38, j#39, v#40, label#41, $stack493#43, $stack485#44, j#45, $stack466#47, $stack466#48, $stack464#53, $stack464#54, $stack443#57, $stack443#58, $stack445#59, $stack445#60, $stack446#61, $stack446#62, $stack467#63, $stack467#64, i_2#66, $stack417#67, $stack417#68, $stack415#69, $stack415#70, $stack414#71, $stack414#72, $stack409#73, $stack409#74, $stack410#77, $stack410#78, attrName#79, $stack56#82, $stack56#83, $stack57#86, $stack57#87, u#91, $stack163#92, $stack163#93, $stack162#94, $stack162#95, j#96, $stack377#101, $stack377#102, label#104, label#105, $stack226#106, label#107, $stack210#109, label#110, u#113, l#114, endif#115, max#116, i_3#118, u#119, l#120, endif#121, i_3#124, l#125, l#129, l#132, endif#133, table#135, endif#137, i_4#138, l#139, l#143, $stack190#144, l#147, $stack171#148, u#150, v#151, v#152, v#153, u#154, v#155, $stack113#156, $stack113#157, label#158, l#159, endif#160, table#162, $stack116#167, $stack116#168, $stack106#171, $stack106#172, $stack120#179, $stack120#180, $stack108#183, $stack108#184, $stack123#193, $stack123#194, $stack126#199, $stack126#200, $stack125#201, $stack125#202, $stack110#203, $stack110#204, $stack129#207, $stack129#208, j#211, v#212, j#214, v#215, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60;
        jdk.internal.org.objectweb.asm.ClassReader this, $stack145, $stack214, $stack229, $stack329, $stack330, $stack333, $stack337, $stack341, $stack525, $stack465#51, $stack465#52, $stack118#165, $stack118#166, $stack122#177, $stack122#178;
        java.lang.Object[] $stack373, $stack375, $stack378, $stack380, $stack407, $stack408, i_3#136;
        short $stack242, $stack276, $stack282, $stack290, $stack325, $stack343, $stack354, $stack356, $stack363, $stack367, $stack368, $stack422, $stack584, opcode#4, opcode#5, label#103, label#112, $s0, $s1, $s2, $s3, $s4, $s5, $s6, $s7, $s8;
        java.lang.Object $stack279, $stack283, $stack299, $stack309;
        jdk.internal.org.objectweb.asm.Handle max#134;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $stack78, $stack97, $stack179, $stack198;
        jdk.internal.org.objectweb.asm.Label $stack58, $stack151, $stack161, $stack207, $stack216, $stack219, $stack224, $stack232, $stack248, $stack253, $stack266, $stack269, $stack288, $stack292, $stack399, $stack504, $stack505, $stack506, $stack507, $stack508, $stack528, $stack531, $stack534, opcode#11, i_1#12, handler#13, l#42, v#97, label#98, l#108, endif#111, $stack112#195, $stack112#196, $stack111#205, $stack111#206, $u1;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        mv := @parameter0: jdk.internal.org.objectweb.asm.MethodVisitor;

        context := @parameter1: jdk.internal.org.objectweb.asm.Context;

        u#1 := @parameter2: int;

        b = this.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        c = context.<jdk.internal.org.objectweb.asm.Context: char[] buffer>;

        $stack39 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(u#1);

        maxStack = $stack39;

        $stack40 = u#1 + 2;

        $stack41 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack40);

        maxLocals = $stack41;

        $stack42 = u#1 + 4;

        $stack43 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack42);

        codeLength = $stack43;

        u#2 = u#1 + 8;

        $stack44 = lengthof b;

        $stack45 = $stack44 - u#2;

        if codeLength <= $stack45 goto label001;

        $u0 = new java.lang.IllegalArgumentException;

        $stack587 = $u0;

        specialinvoke $u0.<java.lang.IllegalArgumentException: void <init>()>();

        throw $stack587;

     label001:
        codeStart = u#2;

        codeEnd = u#2 + codeLength;

        $stack46 = codeLength + 2;

        $stack47 = newarray (jdk.internal.org.objectweb.asm.Label)[$stack46];

        context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] labels> = $stack47;

        labels = $stack47;

        $stack48 = codeLength + 1;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label createLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack48, labels);

     label002:
        $stack549 = u#2;

        $stack548 = codeEnd;

        if $stack549 >= $stack548 goto label020;

        offset#3 = u#2 - codeStart;

        $stack541 = b[u#2];

        $s0 = (short) $stack541;

        opcode#4 = $s0 & 255;

        $stack542 = <jdk.internal.org.objectweb.asm.ClassWriter: byte[] TYPE>;

        $i0 = (int) opcode#4;

        $stack543 = $stack542[$i0];

        $i1 = (int) $stack543;

        tableswitch($i1)
        {
            case 0: goto label003;
            case 1: goto label015;
            case 2: goto label016;
            case 3: goto label015;
            case 4: goto label003;
            case 5: goto label016;
            case 6: goto label016;
            case 7: goto label017;
            case 8: goto label017;
            case 9: goto label004;
            case 10: goto label006;
            case 11: goto label015;
            case 12: goto label016;
            case 13: goto label016;
            case 14: goto label009;
            case 15: goto label012;
            case 16: goto label018;
            case 17: goto label007;
            case 18: goto label005;
            case 19: goto label006;
            default: goto label018;
        };

     label003:
        u#2 = u#2 + 1;

        goto label019;

     label004:
        $stack583 = u#2 + 1;

        $stack584 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: short readShort(int)>($stack583);

        $i2 = (int) $stack584;

        $stack585 = offset#3 + $i2;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label createLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack585, labels);

        u#2 = u#2 + 3;

        goto label019;

     label005:
        $stack544 = u#2 + 1;

        $stack545 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack544);

        $stack546 = offset#3 + $stack545;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label createLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack546, labels);

        u#2 = u#2 + 3;

        goto label019;

     label006:
        $stack579 = u#2 + 1;

        $stack580 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack579);

        $stack581 = offset#3 + $stack580;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label createLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack581, labels);

        u#2 = u#2 + 5;

        goto label019;

     label007:
        $stack550 = u#2 + 1;

        $stack551 = b[$stack550];

        $s1 = (short) $stack551;

        opcode#5 = $s1 & 255;

        $i3 = (int) opcode#5;

        if $i3 != 132 goto label008;

        u#2 = u#2 + 6;

        goto label019;

     label008:
        u#2 = u#2 + 4;

        goto label019;

     label009:
        $stack565 = u#2 + 4;

        $stack564 = offset#3 & 3;

        u#6 = $stack565 - $stack564;

        $stack566 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(u#6);

        $stack567 = offset#3 + $stack566;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label createLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack567, labels);

        $stack569 = u#6 + 8;

        $stack570 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack569);

        $stack571 = u#6 + 4;

        $stack572 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack571);

        $stack573 = $stack570 - $stack572;

        i_1#7 = $stack573 + 1;

     label010:
        $stack578 = i_1#7;

        if $stack578 <= 0 goto label011;

        $stack574 = u#6 + 12;

        $stack575 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack574);

        $stack576 = offset#3 + $stack575;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label createLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack576, labels);

        u#6 = u#6 + 4;

        $i4 = (int) -1;

        i_1#7 = i_1#7 + $i4;

        goto label010;

     label011:
        u#2 = u#6 + 12;

        goto label019;

     label012:
        $stack553 = u#2 + 4;

        $stack552 = offset#3 & 3;

        u#8 = $stack553 - $stack552;

        $stack554 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(u#8);

        $stack555 = offset#3 + $stack554;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label createLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack555, labels);

        $stack557 = u#8 + 4;

        $stack558 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack557);

        i_1#9 = $stack558;

     label013:
        $stack563 = i_1#9;

        if $stack563 <= 0 goto label014;

        $stack559 = u#8 + 12;

        $stack560 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack559);

        $stack561 = offset#3 + $stack560;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label createLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack561, labels);

        u#8 = u#8 + 8;

        $i5 = (int) -1;

        i_1#9 = i_1#9 + $i5;

        goto label013;

     label014:
        u#2 = u#8 + 8;

        goto label019;

     label015:
        u#2 = u#2 + 2;

        goto label019;

     label016:
        u#2 = u#2 + 3;

        goto label019;

     label017:
        u#2 = u#2 + 5;

        goto label019;

     label018:
        u#2 = u#2 + 4;

     label019:
        goto label002;

     label020:
        $stack50 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(u#2);

        offset#10 = $stack50;

     label021:
        $stack540 = offset#10;

        if $stack540 <= 0 goto label022;

        $stack526 = u#2 + 2;

        $stack527 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack526);

        $stack528 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label createLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack527, labels);

        opcode#11 = $stack528;

        $stack529 = u#2 + 4;

        $stack530 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack529);

        $stack531 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label createLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack530, labels);

        i_1#12 = $stack531;

        $stack532 = u#2 + 6;

        $stack533 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack532);

        $stack534 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label createLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack533, labels);

        handler#13 = $stack534;

        $stack536 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack535 = u#2 + 8;

        $stack537 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack535);

        $stack538 = $stack536[$stack537];

        $stack539 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack538, c);

        type#14 = $stack539;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitTryCatchBlock(jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label,java.lang.String)>(opcode#11, i_1#12, handler#13, type#14);

        u#2 = u#2 + 8;

        $i6 = (int) -1;

        offset#10 = offset#10 + $i6;

        goto label021;

     label022:
        u#15 = u#2 + 2;

        offset#16 = null;

        opcode#17 = null;

        i_1#18 = 0;

        handler#19 = 0;

        $i7 = (int) -1;

        type#20 = $i7;

        $i8 = (int) -1;

        nitoff#21 = $i8;

        varTable#22 = 0;

        varTypeTable#23 = 0;

        zip#24 = 1;

        $stack51 = context.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack52 = $stack51 & 8;

        if $stack52 == 0 goto label023;

        $stack518#25 = 1;

        goto label024;

     label023:
        $stack518#25 = 0;

     label024:
        unzip = $stack518#25;

        stackMap#26 = 0;

        stackMapSize#27 = 0;

        frameCount#28 = 0;

        frame#29 = null;

        attributes#30 = null;

        $stack525 = this;

        $stack524 = u#15;

        $stack53 = virtualinvoke $stack525.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack524);

        i_2#31 = $stack53;

     label025:
        $stack447#32 = i_2#31;

        $stack447#33 = $stack447#32;

        if $stack447#33 <= 0 goto label049;

        $stack425 = u#15 + 2;

        $stack426 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack425, c);

        attrName#34 = $stack426;

        $stack427 = "LocalVariableTable";

        $stack428 = virtualinvoke $stack427.<java.lang.String: boolean equals(java.lang.Object)>(attrName#34);

        if $stack428 == 0 goto label028;

        $stack509 = context.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack510 = $stack509 & 2;

        if $stack510 != 0 goto label048;

        varTable#22 = u#15 + 8;

        $stack511 = u#15 + 8;

        $stack512 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack511);

        j#35 = $stack512;

        v#36 = u#15;

     label026:
        $stack517 = j#35;

        if $stack517 <= 0 goto label027;

        $stack513 = v#36 + 10;

        $stack514 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack513);

        label#37 = $stack514;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: void createDebugLabel(int,jdk.internal.org.objectweb.asm.Label[])>(label#37, labels);

        $stack515 = v#36 + 12;

        $stack516 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack515);

        label#38 = label#37 + $stack516;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: void createDebugLabel(int,jdk.internal.org.objectweb.asm.Label[])>(label#38, labels);

        v#36 = v#36 + 10;

        $i9 = (int) -1;

        j#35 = j#35 + $i9;

        goto label026;

     label027:
        goto label048;

     label028:
        $stack429 = "LocalVariableTypeTable";

        $stack430 = virtualinvoke $stack429.<java.lang.String: boolean equals(java.lang.Object)>(attrName#34);

        if $stack430 == 0 goto label029;

        varTypeTable#23 = u#15 + 8;

        goto label048;

     label029:
        $stack431 = "LineNumberTable";

        $stack432 = virtualinvoke $stack431.<java.lang.String: boolean equals(java.lang.Object)>(attrName#34);

        if $stack432 == 0 goto label035;

        $stack494 = context.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack495 = $stack494 & 2;

        if $stack495 != 0 goto label048;

        $stack496 = u#15 + 8;

        $stack497 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack496);

        j#39 = $stack497;

        v#40 = u#15;

     label030:
        $stack503 = j#39;

        if $stack503 <= 0 goto label034;

        $stack498 = v#40 + 10;

        $stack499 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack498);

        label#41 = $stack499;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: void createDebugLabel(int,jdk.internal.org.objectweb.asm.Label[])>(label#41, labels);

        l#42 = labels[label#41];

     label031:
        $stack505 = l#42;

        $stack500 = $stack505.<jdk.internal.org.objectweb.asm.Label: int line>;

        if $stack500 <= 0 goto label033;

        $stack504 = l#42.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label next>;

        if $stack504 != null goto label032;

        $u1 = new jdk.internal.org.objectweb.asm.Label;

        $stack506 = $u1;

        specialinvoke $u1.<jdk.internal.org.objectweb.asm.Label: void <init>()>();

        l#42.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label next> = $stack506;

     label032:
        $stack507 = l#42;

        $stack508 = $stack507.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label next>;

        l#42 = $stack508;

        goto label031;

     label033:
        $stack501 = v#40 + 12;

        $stack502 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack501);

        l#42.<jdk.internal.org.objectweb.asm.Label: int line> = $stack502;

        v#40 = v#40 + 4;

        $i10 = (int) -1;

        j#39 = j#39 + $i10;

        goto label030;

     label034:
        goto label048;

     label035:
        $stack433 = "RuntimeVisibleTypeAnnotations";

        $stack434 = virtualinvoke $stack433.<java.lang.String: boolean equals(java.lang.Object)>(attrName#34);

        if $stack434 == 0 goto label039;

        $stack486 = u#15 + 8;

        $stack487 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int[] readTypeAnnotations(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int,boolean)>(mv, context, $stack486, 1);

        offset#16 = $stack487;

        $stack488 = lengthof offset#16;

        if $stack488 == 0 goto label036;

        $stack489 = offset#16[0];

        $stack490 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>($stack489);

        if $stack490 >= 67 goto label037;

     label036:
        $i11 = (int) -1;

        $stack493#43 = $i11;

        goto label038;

     label037:
        $stack491 = offset#16[0];

        $stack492 = $stack491 + 1;

        $stack493#43 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack492);

     label038:
        type#20 = $stack493#43;

        goto label048;

     label039:
        $stack435 = "RuntimeInvisibleTypeAnnotations";

        $stack436 = virtualinvoke $stack435.<java.lang.String: boolean equals(java.lang.Object)>(attrName#34);

        if $stack436 == 0 goto label043;

        $stack478 = u#15 + 8;

        $stack479 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int[] readTypeAnnotations(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int,boolean)>(mv, context, $stack478, 0);

        opcode#17 = $stack479;

        $stack480 = lengthof opcode#17;

        if $stack480 == 0 goto label040;

        $stack481 = opcode#17[0];

        $stack482 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>($stack481);

        if $stack482 >= 67 goto label041;

     label040:
        $i12 = (int) -1;

        $stack485#44 = $i12;

        goto label042;

     label041:
        $stack483 = opcode#17[0];

        $stack484 = $stack483 + 1;

        $stack485#44 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack484);

     label042:
        nitoff#21 = $stack485#44;

        goto label048;

     label043:
        $stack437 = "StackMapTable";

        $stack438 = virtualinvoke $stack437.<java.lang.String: boolean equals(java.lang.Object)>(attrName#34);

        if $stack438 == 0 goto label044;

        $stack472 = context.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack473 = $stack472 & 4;

        if $stack473 != 0 goto label048;

        stackMap#26 = u#15 + 10;

        $stack474 = u#15 + 4;

        $stack475 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack474);

        stackMapSize#27 = $stack475;

        $stack476 = u#15 + 8;

        $stack477 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack476);

        frameCount#28 = $stack477;

        goto label048;

     label044:
        $stack439 = "StackMap";

        $stack440 = virtualinvoke $stack439.<java.lang.String: boolean equals(java.lang.Object)>(attrName#34);

        if $stack440 == 0 goto label045;

        $stack461 = context.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack462 = $stack461 & 4;

        if $stack462 != 0 goto label048;

        zip#24 = 0;

        stackMap#26 = u#15 + 10;

        $stack468 = u#15 + 4;

        $stack469 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack468);

        stackMapSize#27 = $stack469;

        $stack470 = u#15 + 8;

        $stack471 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack470);

        frameCount#28 = $stack471;

        goto label048;

     label045:
        j#45 = 0;

     label046:
        $stack453 = j#45;

        $stack452 = context;

        $stack441 = $stack452.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Attribute[] attrs>;

        $stack442 = lengthof $stack441;

        if $stack453 >= $stack442 goto label048;

        $stack448 = context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Attribute[] attrs>;

        $stack449 = $stack448[j#45];

        $stack450 = $stack449.<jdk.internal.org.objectweb.asm.Attribute: java.lang.String type>;

        $stack451 = virtualinvoke $stack450.<java.lang.String: boolean equals(java.lang.Object)>(attrName#34);

        if $stack451 == 0 goto label047;

        $stack454 = context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Attribute[] attrs>;

        $stack456 = $stack454[j#45];

        $stack457 = u#15 + 8;

        $stack455 = u#15 + 4;

        $stack458 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack455);

        $stack459 = codeStart - 8;

        $stack460 = virtualinvoke $stack456.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute read(jdk.internal.org.objectweb.asm.ClassReader,int,int,char[],int,jdk.internal.org.objectweb.asm.Label[])>(this, $stack457, $stack458, c, $stack459, labels);

        v#46 = $stack460;

        if v#46 == null goto label047;

        v#46.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = attributes#30;

        attributes#30 = v#46;

     label047:
        j#45 = j#45 + 1;

        goto label046;

     label048:
        $stack466#47 = u#15;

        $stack466#48 = $stack466#47;

        $stack465#51 = this;

        $stack465#52 = $stack465#51;

        $stack464#53 = u#15;

        $stack464#54 = $stack464#53;

        $stack443#57 = $stack464#54 + 4;

        $stack443#58 = $stack443#57;

        $stack445#59 = virtualinvoke $stack465#52.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack443#58);

        $stack445#60 = $stack445#59;

        $stack446#61 = 6 + $stack445#60;

        $stack446#62 = $stack446#61;

        $stack467#63 = $stack466#48 + $stack446#62;

        $stack467#64 = $stack467#63;

        u#15 = $stack467#64;

        $i13 = (int) -1;

        i_2#31 = i_2#31 + $i13;

        goto label025;

     label049:
        if stackMap#26 == 0 goto label053;

        frame#29 = context;

        $i14 = (int) -1;

        frame#29.<jdk.internal.org.objectweb.asm.Context: int offset> = $i14;

        frame#29.<jdk.internal.org.objectweb.asm.Context: int mode> = 0;

        frame#29.<jdk.internal.org.objectweb.asm.Context: int localCount> = 0;

        frame#29.<jdk.internal.org.objectweb.asm.Context: int localDiff> = 0;

        frame#29.<jdk.internal.org.objectweb.asm.Context: int stackCount> = 0;

        $stack407 = newarray (java.lang.Object)[maxLocals];

        frame#29.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] local> = $stack407;

        $stack408 = newarray (java.lang.Object)[maxStack];

        frame#29.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] stack> = $stack408;

        if unzip == 0 goto label050;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: void getImplicitFrame(jdk.internal.org.objectweb.asm.Context)>(context);

     label050:
        $stack424 = stackMap#26;

        i_2#66 = $stack424;

     label051:
        $stack417#67 = i_2#66;

        $stack417#68 = $stack417#67;

        $stack415#69 = stackMap#26;

        $stack415#70 = $stack415#69;

        $stack414#71 = stackMapSize#27;

        $stack414#72 = $stack414#71;

        $stack409#73 = $stack415#70 + $stack414#72;

        $stack409#74 = $stack409#73;

        $stack410#77 = $stack409#74 - 2;

        $stack410#78 = $stack410#77;

        if $stack417#68 >= $stack410#78 goto label053;

        $stack413 = b[i_2#66];

        $i15 = (int) $stack413;

        if $i15 != 8 goto label052;

        $stack418 = i_2#66 + 1;

        $stack419 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack418);

        attrName#79 = $stack419;

        if attrName#79 < 0 goto label052;

        if attrName#79 >= codeLength goto label052;

        $stack420 = codeStart + attrName#79;

        $stack421 = b[$stack420];

        $s2 = (short) $stack421;

        $stack422 = $s2 & 255;

        $i16 = (int) $stack422;

        if $i16 != 187 goto label052;

        virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label createLabel(int,jdk.internal.org.objectweb.asm.Label[])>(attrName#79, labels);

     label052:
        i_2#66 = i_2#66 + 1;

        goto label051;

     label053:
        $stack411 = context;

        $stack54 = $stack411.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack55 = $stack54 & 256;

        if $stack55 == 0 goto label054;

        $stack403 = context.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack404 = $stack403 & 8;

        if $stack404 == 0 goto label054;

        $i17 = (int) -1;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>($i17, maxLocals, null, 0, null);

     label054:
        $stack405#80 = context;

        $stack405#81 = $stack405#80;

        $stack56#82 = $stack405#81.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack56#83 = $stack56#82;

        $stack57#86 = $stack56#83 & 256;

        $stack57#87 = $stack57#86;

        if $stack57#87 != 0 goto label055;

        $stack400#88 = -33;

        goto label056;

     label055:
        $stack400#88 = 0;

     label056:
        i_2#89 = $stack400#88;

        attrName#90 = 0;

        $stack402 = codeStart;

        u#91 = $stack402;

     label057:
        $stack163#92 = u#91;

        $stack163#93 = $stack163#92;

        $stack162#94 = codeEnd;

        $stack162#95 = $stack162#94;

        if $stack163#93 >= $stack162#95 goto label119;

        j#96 = u#91 - codeStart;

        v#97 = labels[j#96];

        if v#97 == null goto label059;

        label#98 = v#97.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label next>;

        v#97.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label next> = null;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLabel(jdk.internal.org.objectweb.asm.Label)>(v#97);

        $stack394 = context.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack395 = $stack394 & 2;

        if $stack395 != 0 goto label059;

        $stack396 = v#97.<jdk.internal.org.objectweb.asm.Label: int line>;

        if $stack396 <= 0 goto label059;

        $stack397 = v#97.<jdk.internal.org.objectweb.asm.Label: int line>;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLineNumber(int,jdk.internal.org.objectweb.asm.Label)>($stack397, v#97);

     label058:
        $stack399 = label#98;

        if $stack399 == null goto label059;

        $stack398 = label#98.<jdk.internal.org.objectweb.asm.Label: int line>;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLineNumber(int,jdk.internal.org.objectweb.asm.Label)>($stack398, v#97);

        label#98 = label#98.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label next>;

        goto label058;

     label059:
        $stack371#99 = frame#29;

        $stack371#100 = $stack371#99;

        if $stack371#100 == null goto label066;

        $stack369 = frame#29.<jdk.internal.org.objectweb.asm.Context: int offset>;

        if $stack369 == j#96 goto label060;

        $stack390 = frame#29.<jdk.internal.org.objectweb.asm.Context: int offset>;

        $i18 = (int) -1;

        if $stack390 != $i18 goto label066;

     label060:
        $stack392 = frame#29;

        $stack370 = $stack392.<jdk.internal.org.objectweb.asm.Context: int offset>;

        $i19 = (int) -1;

        if $stack370 == $i19 goto label064;

        if zip#24 == 0 goto label061;

        if unzip == 0 goto label062;

     label061:
        $stack389 = mv;

        $stack384 = frame#29;

        $stack376 = $stack384.<jdk.internal.org.objectweb.asm.Context: int localCount>;

        $stack385 = frame#29;

        $stack375 = $stack385.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] local>;

        $stack386 = frame#29;

        $stack374 = $stack386.<jdk.internal.org.objectweb.asm.Context: int stackCount>;

        $stack387 = frame#29;

        $stack373 = $stack387.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] stack>;

        $i20 = (int) -1;

        virtualinvoke $stack389.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>($i20, $stack376, $stack375, $stack374, $stack373);

        goto label063;

     label062:
        $stack382 = frame#29.<jdk.internal.org.objectweb.asm.Context: int mode>;

        $stack381 = frame#29.<jdk.internal.org.objectweb.asm.Context: int localDiff>;

        $stack380 = frame#29.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] local>;

        $stack379 = frame#29.<jdk.internal.org.objectweb.asm.Context: int stackCount>;

        $stack378 = frame#29.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] stack>;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>($stack382, $stack381, $stack380, $stack379, $stack378);

     label063:
        attrName#90 = 0;

     label064:
        $stack377#101 = frameCount#28;

        $stack377#102 = $stack377#101;

        if $stack377#102 <= 0 goto label065;

        $stack372 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readFrame(int,boolean,boolean,jdk.internal.org.objectweb.asm.Context)>(stackMap#26, zip#24, unzip, frame#29);

        stackMap#26 = $stack372;

        $i21 = (int) -1;

        frameCount#28 = frameCount#28 + $i21;

        goto label059;

     label065:
        frame#29 = null;

        goto label059;

     label066:
        $stack391 = attrName#90;

        if $stack391 == 0 goto label067;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>(256, 0, null, 0, null);

        attrName#90 = 0;

     label067:
        $stack365 = b;

        $stack364 = u#91;

        $stack154 = $stack365[$stack364];

        $s3 = (short) $stack154;

        $stack367 = $s3 & 255;

        label#103 = $stack367;

        $stack155 = <jdk.internal.org.objectweb.asm.ClassWriter: byte[] TYPE>;

        $stack368 = label#103;

        $i22 = (int) $stack368;

        $stack156 = $stack155[$i22];

        $i23 = (int) $stack156;

        tableswitch($i23)
        {
            case 0: goto label068;
            case 1: goto label092;
            case 2: goto label093;
            case 3: goto label091;
            case 4: goto label069;
            case 5: goto label105;
            case 6: goto label096;
            case 7: goto label096;
            case 8: goto label102;
            case 9: goto label072;
            case 10: goto label073;
            case 11: goto label094;
            case 12: goto label095;
            case 13: goto label106;
            case 14: goto label085;
            case 15: goto label088;
            case 16: goto label107;
            case 17: goto label083;
            case 18: goto label074;
            case 19: goto label082;
            default: goto label107;
        };

     label068:
        $i24 = (int) label#103;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitInsn(int)>($i24);

        u#91 = u#91 + 1;

        goto label108;

     label069:
        $i25 = (int) label#103;

        if $i25 <= 54 goto label070;

        $i26 = (int) label#103;

        $i27 = (int) -59;

        label#104 = $i26 + $i27;

        $stack349 = label#104 >> 2;

        $stack351 = 54 + $stack349;

        $stack350 = label#104 & 3;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitVarInsn(int,int)>($stack351, $stack350);

        goto label071;

     label070:
        $i28 = (int) label#103;

        $i29 = (int) -26;

        label#105 = $i28 + $i29;

        $stack346 = label#105 >> 2;

        $stack348 = 21 + $stack346;

        $stack347 = label#105 & 3;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitVarInsn(int,int)>($stack348, $stack347);

     label071:
        u#91 = u#91 + 1;

        goto label108;

     label072:
        $stack289 = u#91 + 1;

        $stack290 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: short readShort(int)>($stack289);

        $i30 = (int) $stack290;

        $stack291 = j#96 + $i30;

        $stack292 = labels[$stack291];

        $i31 = (int) label#103;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitJumpInsn(int,jdk.internal.org.objectweb.asm.Label)>($i31, $stack292);

        u#91 = u#91 + 3;

        goto label108;

     label073:
        $i32 = (int) label#103;

        $stack285 = $i32 + i_2#89;

        $stack284 = u#91 + 1;

        $stack286 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack284);

        $stack287 = j#96 + $stack286;

        $stack288 = labels[$stack287];

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitJumpInsn(int,jdk.internal.org.objectweb.asm.Label)>($stack285, $stack288);

        u#91 = u#91 + 5;

        goto label108;

     label074:
        $i33 = (int) label#103;

        if $i33 >= 218 goto label075;

        $i34 = (int) label#103;

        $stack226#106 = $i34 - 49;

        goto label076;

     label075:
        $i35 = (int) label#103;

        $stack226#106 = $i35 - 20;

     label076:
        label#107 = $stack226#106;

        $stack231 = labels;

        $stack230 = j#96;

        $stack229 = this;

        $stack228 = u#91;

        $stack202 = $stack228 + 1;

        $stack203 = virtualinvoke $stack229.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack202);

        $stack204 = $stack230 + $stack203;

        $stack232 = $stack231[$stack204];

        l#108 = $stack232;

        $stack234 = label#107;

        if $stack234 == 167 goto label077;

        if label#107 != 168 goto label078;

     label077:
        $stack225 = mv;

        $stack223 = label#107;

        $stack205 = $stack223 + 33;

        $stack224 = l#108;

        virtualinvoke $stack225.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitJumpInsn(int,jdk.internal.org.objectweb.asm.Label)>($stack205, $stack224);

        goto label081;

     label078:
        if label#107 > 166 goto label079;

        $stack208 = label#107 + 1;

        $stack209 = $stack208 ^ 1;

        $stack210#109 = $stack209 - 1;

        goto label080;

     label079:
        $stack210#109 = label#107 ^ 1;

     label080:
        label#110 = $stack210#109;

        $stack214 = this;

        $stack212 = j#96;

        $stack206 = $stack212 + 3;

        $stack213 = labels;

        $stack207 = virtualinvoke $stack214.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label createLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack206, $stack213);

        endif#111 = $stack207;

        $stack217 = mv;

        $stack215 = label#110;

        $stack216 = endif#111;

        virtualinvoke $stack217.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitJumpInsn(int,jdk.internal.org.objectweb.asm.Label)>($stack215, $stack216);

        $stack220 = mv;

        $stack219 = l#108;

        virtualinvoke $stack220.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitJumpInsn(int,jdk.internal.org.objectweb.asm.Label)>(200, $stack219);

        attrName#90 = 1;

     label081:
        u#91 = u#91 + 3;

        goto label108;

     label082:
        $stack157 = u#91 + 1;

        $stack159 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack157);

        $stack160 = j#96 + $stack159;

        $stack161 = labels[$stack160];

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitJumpInsn(int,jdk.internal.org.objectweb.asm.Label)>(200, $stack161);

        attrName#90 = 1;

        u#91 = u#91 + 5;

        goto label108;

     label083:
        $stack235 = u#91 + 1;

        $stack236 = b[$stack235];

        $s4 = (short) $stack236;

        label#112 = $s4 & 255;

        $i36 = (int) label#112;

        if $i36 != 132 goto label084;

        $stack239 = u#91 + 2;

        $stack240 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack239);

        $stack241 = u#91 + 4;

        $stack242 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: short readShort(int)>($stack241);

        $i37 = (int) $stack242;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitIincInsn(int,int)>($stack240, $i37);

        u#91 = u#91 + 6;

        goto label108;

     label084:
        $stack237 = u#91 + 2;

        $stack238 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack237);

        $i38 = (int) label#112;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitVarInsn(int,int)>($i38, $stack238);

        u#91 = u#91 + 4;

        goto label108;

     label085:
        $stack257 = u#91 + 4;

        $stack256 = j#96 & 3;

        u#113 = $stack257 - $stack256;

        $stack258 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(u#113);

        l#114 = j#96 + $stack258;

        $stack259 = u#113 + 4;

        $stack260 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack259);

        endif#115 = $stack260;

        $stack261 = u#113 + 8;

        $stack262 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack261);

        max#116 = $stack262;

        $stack263 = max#116 - endif#115;

        $stack264 = $stack263 + 1;

        table#117 = newarray (jdk.internal.org.objectweb.asm.Label)[$stack264];

        u#91 = u#113 + 12;

        i_3#118 = 0;

     label086:
        $stack271 = i_3#118;

        $stack270 = table#117;

        $stack265 = lengthof $stack270;

        if $stack271 >= $stack265 goto label087;

        $stack267 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(u#91);

        $stack268 = j#96 + $stack267;

        $stack269 = labels[$stack268];

        table#117[i_3#118] = $stack269;

        u#91 = u#91 + 4;

        i_3#118 = i_3#118 + 1;

        goto label086;

     label087:
        $stack266 = labels[l#114];

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitTableSwitchInsn(int,int,jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label[])>(endif#115, max#116, $stack266, table#117);

        goto label108;

     label088:
        $stack244 = u#91 + 4;

        $stack243 = j#96 & 3;

        u#119 = $stack244 - $stack243;

        $stack245 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(u#119);

        l#120 = j#96 + $stack245;

        $stack246 = u#119 + 4;

        $stack247 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack246);

        endif#121 = $stack247;

        max#122 = newarray (int)[endif#121];

        table#123 = newarray (jdk.internal.org.objectweb.asm.Label)[endif#121];

        u#91 = u#119 + 8;

        i_3#124 = 0;

     label089:
        $stack255 = i_3#124;

        $stack254 = endif#121;

        if $stack255 >= $stack254 goto label090;

        $stack249 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(u#91);

        max#122[i_3#124] = $stack249;

        $stack250 = u#91 + 4;

        $stack251 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack250);

        $stack252 = j#96 + $stack251;

        $stack253 = labels[$stack252];

        table#123[i_3#124] = $stack253;

        u#91 = u#91 + 8;

        i_3#124 = i_3#124 + 1;

        goto label089;

     label090:
        $stack248 = labels[l#120];

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLookupSwitchInsn(jdk.internal.org.objectweb.asm.Label,int[],jdk.internal.org.objectweb.asm.Label[])>($stack248, max#122, table#123);

        goto label108;

     label091:
        $stack352 = u#91 + 1;

        $stack353 = b[$stack352];

        $s5 = (short) $stack353;

        $stack354 = $s5 & 255;

        $i39 = (int) label#103;

        $i40 = (int) $stack354;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitVarInsn(int,int)>($i39, $i40);

        u#91 = u#91 + 2;

        goto label108;

     label092:
        $stack357 = u#91 + 1;

        $stack358 = b[$stack357];

        $i41 = (int) label#103;

        $i42 = (int) $stack358;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitIntInsn(int,int)>($i41, $i42);

        u#91 = u#91 + 2;

        goto label108;

     label093:
        $stack355 = u#91 + 1;

        $stack356 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: short readShort(int)>($stack355);

        $i43 = (int) label#103;

        $i44 = (int) $stack356;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitIntInsn(int,int)>($i43, $i44);

        u#91 = u#91 + 3;

        goto label108;

     label094:
        $stack280 = u#91 + 1;

        $stack281 = b[$stack280];

        $s6 = (short) $stack281;

        $stack282 = $s6 & 255;

        $i45 = (int) $stack282;

        $stack283 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>($i45, c);

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLdcInsn(java.lang.Object)>($stack283);

        u#91 = u#91 + 2;

        goto label108;

     label095:
        $stack277 = u#91 + 1;

        $stack278 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack277);

        $stack279 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>($stack278, c);

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLdcInsn(java.lang.Object)>($stack279);

        u#91 = u#91 + 3;

        goto label108;

     label096:
        $stack313 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack312 = u#91 + 1;

        $stack314 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack312);

        l#125 = $stack313[$stack314];

        $stack315 = l#125 - 1;

        $stack316 = b[$stack315];

        $i46 = (int) $stack316;

        if $i46 != 11 goto label097;

        $stack326#126 = 1;

        goto label098;

     label097:
        $stack326#126 = 0;

     label098:
        endif#127 = $stack326#126;

        $stack329 = this;

        $stack327 = l#125;

        $stack328 = c;

        $stack317 = virtualinvoke $stack329.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack327, $stack328);

        max#128 = $stack317;

        $stack330 = this;

        $stack319 = $stack330.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack333 = this;

        $stack332 = l#125;

        $stack318 = $stack332 + 2;

        $stack320 = virtualinvoke $stack333.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack318);

        $stack334 = $stack319[$stack320];

        l#129 = $stack334;

        $stack337 = this;

        $stack335 = l#129;

        $stack336 = c;

        $stack321 = virtualinvoke $stack337.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack335, $stack336);

        table#130 = $stack321;

        $stack341 = this;

        $stack339 = l#129;

        $stack322 = $stack339 + 2;

        $stack340 = c;

        $stack323 = virtualinvoke $stack341.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack322, $stack340);

        i_3#131 = $stack323;

        $stack343 = label#103;

        $i47 = (int) $stack343;

        if $i47 >= 182 goto label099;

        $i48 = (int) label#103;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>($i48, max#128, table#130, i_3#131);

        goto label100;

     label099:
        $i49 = (int) label#103;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String,boolean)>($i49, max#128, table#130, i_3#131, endif#127);

     label100:
        $stack325 = label#103;

        $i50 = (int) $stack325;

        if $i50 != 185 goto label101;

        u#91 = u#91 + 5;

        goto label108;

     label101:
        u#91 = u#91 + 3;

        goto label108;

     label102:
        $stack294 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack293 = u#91 + 1;

        $stack295 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack293);

        l#132 = $stack294[$stack295];

        $stack296 = context.<jdk.internal.org.objectweb.asm.Context: int[] bootstrapMethods>;

        $stack297 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(l#132);

        endif#133 = $stack296[$stack297];

        $stack298 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(endif#133);

        $stack299 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>($stack298, c);

        max#134 = (jdk.internal.org.objectweb.asm.Handle) $stack299;

        $stack300 = endif#133 + 2;

        $stack301 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack300);

        table#135 = $stack301;

        i_3#136 = newarray (java.lang.Object)[table#135];

        endif#137 = endif#133 + 4;

        i_4#138 = 0;

     label103:
        $stack311 = i_4#138;

        $stack310 = table#135;

        if $stack311 >= $stack310 goto label104;

        $stack308 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(endif#137);

        $stack309 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>($stack308, c);

        i_3#136[i_4#138] = $stack309;

        endif#137 = endif#137 + 2;

        i_4#138 = i_4#138 + 1;

        goto label103;

     label104:
        $stack303 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack302 = l#132 + 2;

        $stack304 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack302);

        l#139 = $stack303[$stack304];

        $stack305 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l#139, c);

        i_4#140 = $stack305;

        $stack306 = l#139 + 2;

        $stack307 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack306, c);

        idesc = $stack307;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitInvokeDynamicInsn(java.lang.String,java.lang.String,jdk.internal.org.objectweb.asm.Handle,java.lang.Object[])>(i_4#140, idesc, max#134, i_3#136);

        u#91 = u#91 + 5;

        goto label108;

     label105:
        $stack344 = u#91 + 1;

        $stack345 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack344, c);

        $i51 = (int) label#103;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitTypeInsn(int,java.lang.String)>($i51, $stack345);

        u#91 = u#91 + 3;

        goto label108;

     label106:
        $stack272 = u#91 + 1;

        $stack273 = b[$stack272];

        $s7 = (short) $stack273;

        $stack276 = $s7 & 255;

        $stack274 = u#91 + 2;

        $stack275 = b[$stack274];

        $i52 = (int) $stack276;

        $i53 = (int) $stack275;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitIincInsn(int,int)>($i52, $i53);

        u#91 = u#91 + 3;

        goto label108;

     label107:
        $stack359 = u#91 + 1;

        $stack360 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack359, c);

        $stack361 = u#91 + 3;

        $stack362 = b[$stack361];

        $s8 = (short) $stack362;

        $stack363 = $s8 & 255;

        $i54 = (int) $stack363;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitMultiANewArrayInsn(java.lang.String,int)>($stack360, $i54);

        u#91 = u#91 + 4;

     label108:
        $stack185#141 = offset#16;

        $stack185#142 = $stack185#141;

        if $stack185#142 == null goto label113;

        $stack183 = lengthof offset#16;

        if i_1#18 >= $stack183 goto label113;

        if type#20 > j#96 goto label113;

        if type#20 != j#96 goto label109;

        $stack191 = offset#16[i_1#18];

        $stack192 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(context, $stack191);

        l#143 = $stack192;

        $stack193 = l#143 + 2;

        $stack195 = context.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack196 = context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack197 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l#143, c);

        $stack198 = virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitInsnAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack195, $stack196, $stack197, 1);

        virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack193, c, 1, $stack198);

     label109:
        i_1#18 = i_1#18 + 1;

        $stack201 = i_1#18;

        $stack200 = offset#16;

        $stack184 = lengthof $stack200;

        if $stack201 >= $stack184 goto label110;

        $stack186 = offset#16[i_1#18];

        $stack187 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>($stack186);

        if $stack187 >= 67 goto label111;

     label110:
        $i55 = (int) -1;

        $stack190#144 = $i55;

        goto label112;

     label111:
        $stack188 = offset#16[i_1#18];

        $stack189 = $stack188 + 1;

        $stack190#144 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack189);

     label112:
        type#20 = $stack190#144;

        goto label108;

     label113:
        $stack166#145 = opcode#17;

        $stack166#146 = $stack166#145;

        if $stack166#146 == null goto label118;

        $stack164 = lengthof opcode#17;

        if handler#19 >= $stack164 goto label118;

        if nitoff#21 > j#96 goto label118;

        if nitoff#21 != j#96 goto label114;

        $stack172 = opcode#17[handler#19];

        $stack173 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(context, $stack172);

        l#147 = $stack173;

        $stack174 = l#147 + 2;

        $stack176 = context.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack177 = context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack178 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(l#147, c);

        $stack179 = virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitInsnAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack176, $stack177, $stack178, 0);

        virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack174, c, 1, $stack179);

     label114:
        handler#19 = handler#19 + 1;

        $stack182 = handler#19;

        $stack181 = opcode#17;

        $stack165 = lengthof $stack181;

        if $stack182 >= $stack165 goto label115;

        $stack167 = opcode#17[handler#19];

        $stack168 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>($stack167);

        if $stack168 >= 67 goto label116;

     label115:
        $i56 = (int) -1;

        $stack171#148 = $i56;

        goto label117;

     label116:
        $stack169 = opcode#17[handler#19];

        $stack170 = $stack169 + 1;

        $stack171#148 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack170);

     label117:
        nitoff#21 = $stack171#148;

        goto label113;

     label118:
        goto label057;

     label119:
        $stack58 = labels[codeLength];

        if $stack58 == null goto label120;

        $stack151 = labels[codeLength];

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLabel(jdk.internal.org.objectweb.asm.Label)>($stack151);

     label120:
        $stack152 = context;

        $stack59 = $stack152.<jdk.internal.org.objectweb.asm.Context: int flags>;

        $stack60 = $stack59 & 2;

        if $stack60 != 0 goto label127;

        if varTable#22 == 0 goto label127;

        j#149 = null;

        if varTypeTable#23 == 0 goto label122;

        u#150 = varTypeTable#23 + 2;

        $stack139 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(varTypeTable#23);

        $stack140 = $stack139 * 3;

        j#149 = newarray (int)[$stack140];

        v#151 = lengthof j#149;

     label121:
        $stack150 = v#151;

        if $stack150 <= 0 goto label122;

        $i57 = (int) -1;

        v#152 = v#151 + $i57;

        $stack146 = u#150 + 6;

        j#149[v#152] = $stack146;

        $i58 = (int) -1;

        v#153 = v#152 + $i58;

        $stack147 = u#150 + 8;

        $stack148 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack147);

        j#149[v#153] = $stack148;

        $i59 = (int) -1;

        v#151 = v#153 + $i59;

        $stack149 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(u#150);

        j#149[v#151] = $stack149;

        u#150 = u#150 + 10;

        goto label121;

     label122:
        $stack142 = varTable#22;

        $stack143 = $stack142 + 2;

        u#154 = $stack143;

        $stack145 = this;

        $stack144 = varTable#22;

        $stack100 = virtualinvoke $stack145.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack144);

        v#155 = $stack100;

     label123:
        $stack113#156 = v#155;

        $stack113#157 = $stack113#156;

        if $stack113#157 <= 0 goto label127;

        $stack101 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(u#154);

        label#158 = $stack101;

        $stack102 = u#154 + 2;

        $stack103 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack102);

        l#159 = $stack103;

        $stack104 = u#154 + 8;

        $stack105 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack104);

        endif#160 = $stack105;

        max#161 = null;

        if j#149 == null goto label126;

        table#162 = 0;

     label124:
        $stack133 = table#162;

        $stack132 = j#149;

        $stack114 = lengthof $stack132;

        if $stack133 >= $stack114 goto label126;

        $stack131 = j#149[table#162];

        if $stack131 != label#158 goto label125;

        $stack134 = table#162 + 1;

        $stack135 = j#149[$stack134];

        if $stack135 != endif#160 goto label125;

        $stack136 = table#162 + 2;

        $stack137 = j#149[$stack136];

        $stack138 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack137, c);

        max#161 = $stack138;

        goto label126;

     label125:
        table#162 = table#162 + 3;

        goto label124;

     label126:
        $stack130#163 = mv;

        $stack130#164 = $stack130#163;

        $stack118#165 = this;

        $stack118#166 = $stack118#165;

        $stack116#167 = u#154;

        $stack116#168 = $stack116#167;

        $stack106#171 = $stack116#168 + 4;

        $stack106#172 = $stack106#171;

        $stack117#173 = c;

        $stack117#174 = $stack117#173;

        $stack107#175 = virtualinvoke $stack118#166.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack106#172, $stack117#174);

        $stack107#176 = $stack107#175;

        $stack122#177 = this;

        $stack122#178 = $stack122#177;

        $stack120#179 = u#154;

        $stack120#180 = $stack120#179;

        $stack108#183 = $stack120#180 + 6;

        $stack108#184 = $stack108#183;

        $stack121#185 = c;

        $stack121#186 = $stack121#185;

        $stack109#187 = virtualinvoke $stack122#178.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack108#184, $stack121#186);

        $stack109#188 = $stack109#187;

        $stack128#189 = max#161;

        $stack128#190 = $stack128#189;

        $stack124#191 = labels;

        $stack124#192 = $stack124#191;

        $stack123#193 = label#158;

        $stack123#194 = $stack123#193;

        $stack112#195 = $stack124#192[$stack123#194];

        $stack112#196 = $stack112#195;

        $stack127#197 = labels;

        $stack127#198 = $stack127#197;

        $stack126#199 = label#158;

        $stack126#200 = $stack126#199;

        $stack125#201 = l#159;

        $stack125#202 = $stack125#201;

        $stack110#203 = $stack126#200 + $stack125#202;

        $stack110#204 = $stack110#203;

        $stack111#205 = $stack127#198[$stack110#204];

        $stack111#206 = $stack111#205;

        $stack129#207 = endif#160;

        $stack129#208 = $stack129#207;

        virtualinvoke $stack130#164.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label,int)>($stack107#176, $stack109#188, $stack128#190, $stack112#196, $stack111#206, $stack129#208);

        u#154 = u#154 + 10;

        $i60 = (int) -1;

        v#155 = v#155 + $i60;

        goto label123;

     label127:
        $stack99#209 = offset#16;

        $stack99#210 = $stack99#209;

        if $stack99#210 == null goto label130;

        j#211 = 0;

     label128:
        $stack86 = j#211;

        $stack85 = offset#16;

        $stack80 = lengthof $stack85;

        if $stack86 >= $stack80 goto label130;

        $stack82 = offset#16[j#211];

        $stack83 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>($stack82);

        $stack84 = $stack83 >> 1;

        if $stack84 != 32 goto label129;

        $stack87 = offset#16[j#211];

        $stack88 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(context, $stack87);

        v#212 = $stack88;

        $stack89 = v#212 + 2;

        $stack91 = context.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack92 = context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack93 = context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] start>;

        $stack94 = context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] end>;

        $stack95 = context.<jdk.internal.org.objectweb.asm.Context: int[] index>;

        $stack96 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(v#212, c);

        $stack97 = virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitLocalVariableAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,jdk.internal.org.objectweb.asm.Label[],jdk.internal.org.objectweb.asm.Label[],int[],java.lang.String,boolean)>($stack91, $stack92, $stack93, $stack94, $stack95, $stack96, 1);

        virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack89, c, 1, $stack97);

     label129:
        j#211 = j#211 + 1;

        goto label128;

     label130:
        $stack81 = opcode#17;

        if $stack81 == null goto label133;

        j#214 = 0;

     label131:
        $stack67 = j#214;

        $stack66 = opcode#17;

        $stack62 = lengthof $stack66;

        if $stack67 >= $stack62 goto label133;

        $stack63 = opcode#17[j#214];

        $stack64 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>($stack63);

        $stack65 = $stack64 >> 1;

        if $stack65 != 32 goto label132;

        $stack68 = opcode#17[j#214];

        $stack69 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>(context, $stack68);

        v#215 = $stack69;

        $stack70 = v#215 + 2;

        $stack72 = context.<jdk.internal.org.objectweb.asm.Context: int typeRef>;

        $stack73 = context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath>;

        $stack74 = context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] start>;

        $stack75 = context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] end>;

        $stack76 = context.<jdk.internal.org.objectweb.asm.Context: int[] index>;

        $stack77 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(v#215, c);

        $stack78 = virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitLocalVariableAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,jdk.internal.org.objectweb.asm.Label[],jdk.internal.org.objectweb.asm.Label[],int[],java.lang.String,boolean)>($stack72, $stack73, $stack74, $stack75, $stack76, $stack77, 0);

        virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack70, c, 1, $stack78);

     label132:
        j#214 = j#214 + 1;

        goto label131;

     label133:
        $stack61#217 = attributes#30;

        $stack61#218 = $stack61#217;

        if $stack61#218 == null goto label134;

        j#219 = attributes#30.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next>;

        attributes#30.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute next> = null;

        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)>(attributes#30);

        attributes#30 = j#219;

        goto label133;

     label134:
        virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitMaxs(int,int)>(maxStack, maxLocals);

        return;
    }

    private int[] readTypeAnnotations(jdk.internal.org.objectweb.asm.MethodVisitor, jdk.internal.org.objectweb.asm.Context, int, boolean)
    {
        byte[] $stack25;
        byte $stack34, $stack38, $stack53#16, $stack53#17, $stack55#20, $stack55#21, $b0;
        bottom_type u, i, $stack16, j, $stack17, $stack24, start, $stack51, $stack52, $stack53, $stack54, $stack55;
        jdk.internal.org.objectweb.asm.Context context;
        java.lang.String $stack30;
        jdk.internal.org.objectweb.asm.Label[] $stack60, $stack62;
        char[] c, $stack41, $stack47;
        int[] offsets, $stack22;
        boolean $stack29, visible, $stack35, $stack45;
        jdk.internal.org.objectweb.asm.TypePath $stack44, $stack24#22, start#23, $u0;
        int $stack12, $stack13, $stack14, target, $stack15, $stack18, $stack19, $stack20, $stack21, $stack23, $stack26, $stack27, $stack28, $stack32, $stack33, $stack36, $stack37, $stack39, $stack40, $stack43, $stack49, $stack50, $stack56, $stack57, $stack58, $stack59, length, $stack63, $stack65, u#1, u#2, i#3, u#4, j#5, start#6, $stack51#9, $stack51#10, $stack16#11, $stack16#12, j#13, $stack54#14, $stack54#15, $stack17#18, $stack17#19, u#24, $i0;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $stack31;
        jdk.internal.org.objectweb.asm.ClassReader this, $stack42, $stack48, $stack52#7, $stack52#8;
        jdk.internal.org.objectweb.asm.Label $stack61, $stack64;
        jdk.internal.org.objectweb.asm.MethodVisitor mv, $stack46;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        mv := @parameter0: jdk.internal.org.objectweb.asm.MethodVisitor;

        context := @parameter1: jdk.internal.org.objectweb.asm.Context;

        u#1 := @parameter2: int;

        visible := @parameter3: boolean;

        c = context.<jdk.internal.org.objectweb.asm.Context: char[] buffer>;

        $stack12 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(u#1);

        offsets = newarray (int)[$stack12];

        u#2 = u#1 + 2;

        i#3 = 0;

     label01:
        $stack23 = i#3;

        $stack22 = offsets;

        $stack13 = lengthof $stack22;

        if $stack23 >= $stack13 goto label14;

        offsets[i#3] = u#2;

        $stack14 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(u#2);

        target = $stack14;

        $stack15 = target >>> 24;

        lookupswitch($stack15)
        {
            case 0: goto label02;
            case 1: goto label02;
            case 19: goto label03;
            case 20: goto label03;
            case 21: goto label03;
            case 22: goto label02;
            case 64: goto label04;
            case 65: goto label04;
            case 71: goto label07;
            case 72: goto label07;
            case 73: goto label07;
            case 74: goto label07;
            case 75: goto label07;
            default: goto label08;
        };

     label02:
        u#4 = u#2 + 2;

        goto label09;

     label03:
        u#4 = u#2 + 1;

        goto label09;

     label04:
        $stack49 = u#2 + 1;

        $stack50 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack49);

        j#5 = $stack50;

     label05:
        $stack65 = j#5;

        if $stack65 <= 0 goto label06;

        $stack56 = u#2 + 3;

        $stack57 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack56);

        start#6 = $stack57;

        $stack58 = u#2 + 5;

        $stack59 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack58);

        length = $stack59;

        $stack60 = context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] labels>;

        $stack61 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label createLabel(int,jdk.internal.org.objectweb.asm.Label[])>(start#6, $stack60);

        $stack63 = start#6 + length;

        $stack62 = context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] labels>;

        $stack64 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label createLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack63, $stack62);

        u#2 = u#2 + 6;

        $b0 = -1;

        $i0 = (int) $b0;

        j#5 = j#5 + $i0;

        goto label05;

     label06:
        u#4 = u#2 + 3;

        goto label09;

     label07:
        u#4 = u#2 + 4;

        goto label09;

     label08:
        u#4 = u#2 + 3;

     label09:
        $stack52#7 = this;

        $stack52#8 = $stack52#7;

        $stack51#9 = u#4;

        $stack51#10 = $stack51#9;

        $stack16#11 = virtualinvoke $stack52#8.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>($stack51#10);

        $stack16#12 = $stack16#11;

        j#13 = $stack16#12;

        $stack54#14 = target;

        $stack54#15 = $stack54#14;

        $stack53#16 = 24;

        $stack53#17 = $stack53#16;

        $stack17#18 = $stack54#15 >>> $stack53#17;

        $stack17#19 = $stack17#18;

        $stack55#20 = 66;

        $stack55#21 = $stack55#20;

        if $stack17#19 != $stack55#21 goto label12;

        if j#13 != 0 goto label10;

        $stack24#22 = null;

        goto label11;

     label10:
        $u0 = new jdk.internal.org.objectweb.asm.TypePath;

        $stack24#22 = $u0;

        $stack25 = this.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        specialinvoke $u0.<jdk.internal.org.objectweb.asm.TypePath: void <init>(byte[],int)>($stack25, u#4);

     label11:
        start#23 = $stack24#22;

        $stack36 = u#4;

        $stack35 = 1;

        $stack34 = 2;

        $stack33 = j#13;

        $stack26 = $stack34 * $stack33;

        $stack27 = $stack35 + $stack26;

        $stack37 = $stack36 + $stack27;

        u#24 = $stack37;

        $stack48 = this;

        $stack39 = u#24;

        $stack38 = 2;

        $stack28 = $stack39 + $stack38;

        $stack47 = c;

        $stack29 = 1;

        $stack46 = mv;

        $stack43 = target;

        $stack44 = start#23;

        $stack42 = this;

        $stack40 = u#24;

        $stack41 = c;

        $stack30 = virtualinvoke $stack42.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack40, $stack41);

        $stack45 = visible;

        $stack31 = virtualinvoke $stack46.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTryCatchAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>($stack43, $stack44, $stack30, $stack45);

        $stack32 = virtualinvoke $stack48.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack28, $stack47, $stack29, $stack31);

        u#2 = $stack32;

        goto label13;

     label12:
        $stack19 = u#4 + 3;

        $stack18 = 2 * j#13;

        $stack20 = $stack19 + $stack18;

        $stack21 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack20, c, 1, null);

        u#2 = $stack21;

     label13:
        i#3 = i#3 + 1;

        goto label01;

     label14:
        return offsets;

        nop;
    }

    private int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context, int)
    {
        byte[] $stack12;
        byte $stack20;
        bottom_type u, target, $stack10, n, $stack11, i, $stack26, $stack27, $stack28, $stack29, $stack30, $stack47;
        jdk.internal.org.objectweb.asm.Context context, $stack16, $stack29#15, $stack29#16;
        short $s0;
        jdk.internal.org.objectweb.asm.Label[] $stack23, $stack24, $stack34, $stack35, $stack37, $stack39;
        int[] $stack25, $stack42;
        boolean $stack17;
        jdk.internal.org.objectweb.asm.TypePath $stack11#21, $u0;
        int $stack8, $stack9, $stack13, $stack14, $stack15, $stack18, $stack19, $stack21, $stack22, $stack31, start, $stack32, $stack33, length, $stack38, $stack41, $stack43, $stack44, $stack45, $stack46, $stack48, $stack49, u#1, target#2, target#3, u#4, n#5, i#6, $stack47#7, $stack26#10, $stack26#11, $stack10#12, $stack10#13, n#14, $stack28#17, $stack28#18, $stack30#19, $stack30#20, $i0;
        jdk.internal.org.objectweb.asm.ClassReader this, $stack27#8, $stack27#9;
        jdk.internal.org.objectweb.asm.Label $stack36, $stack40;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        context := @parameter0: jdk.internal.org.objectweb.asm.Context;

        u#1 := @parameter1: int;

        $stack8 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(u#1);

        target#2 = $stack8;

        $stack9 = target#2 >>> 24;

        lookupswitch($stack9)
        {
            case 0: goto label01;
            case 1: goto label01;
            case 19: goto label02;
            case 20: goto label02;
            case 21: goto label02;
            case 22: goto label01;
            case 64: goto label03;
            case 65: goto label03;
            case 71: goto label06;
            case 72: goto label06;
            case 73: goto label06;
            case 74: goto label06;
            case 75: goto label06;
            default: goto label07;
        };

     label01:
        target#3 = target#2 & -65536;

        u#4 = u#1 + 2;

        goto label10;

     label02:
        target#3 = target#2 & -16777216;

        u#4 = u#1 + 1;

        goto label10;

     label03:
        target#3 = target#2 & -16777216;

        $stack21 = u#1 + 1;

        $stack22 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack21);

        n#5 = $stack22;

        $stack23 = newarray (jdk.internal.org.objectweb.asm.Label)[n#5];

        context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] start> = $stack23;

        $stack24 = newarray (jdk.internal.org.objectweb.asm.Label)[n#5];

        context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] end> = $stack24;

        $stack25 = newarray (int)[n#5];

        context.<jdk.internal.org.objectweb.asm.Context: int[] index> = $stack25;

        u#4 = u#1 + 3;

        i#6 = 0;

     label04:
        $stack45 = i#6;

        $stack44 = n#5;

        if $stack45 >= $stack44 goto label05;

        $stack31 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(u#4);

        start = $stack31;

        $stack32 = u#4 + 2;

        $stack33 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack32);

        length = $stack33;

        $stack35 = context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] start>;

        $stack34 = context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] labels>;

        $stack36 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label createLabel(int,jdk.internal.org.objectweb.asm.Label[])>(start, $stack34);

        $stack35[i#6] = $stack36;

        $stack39 = context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] end>;

        $stack38 = start + length;

        $stack37 = context.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] labels>;

        $stack40 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label createLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack38, $stack37);

        $stack39[i#6] = $stack40;

        $stack42 = context.<jdk.internal.org.objectweb.asm.Context: int[] index>;

        $stack41 = u#4 + 4;

        $stack43 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack41);

        $stack42[i#6] = $stack43;

        u#4 = u#4 + 6;

        i#6 = i#6 + 1;

        goto label04;

     label05:
        goto label10;

     label06:
        target#3 = target#2 & -16776961;

        u#4 = u#1 + 4;

        goto label10;

     label07:
        $stack48 = target#2;

        $stack46 = target#2 >>> 24;

        if $stack46 >= 67 goto label08;

        $s0 = -256;

        $i0 = (int) $s0;

        $stack47#7 = $i0;

        goto label09;

     label08:
        $stack47#7 = -16777216;

     label09:
        $stack49 = $stack48 & $stack47#7;

        target#3 = $stack49;

        u#4 = u#1 + 3;

     label10:
        $stack27#8 = this;

        $stack27#9 = $stack27#8;

        $stack26#10 = u#4;

        $stack26#11 = $stack26#10;

        $stack10#12 = virtualinvoke $stack27#9.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>($stack26#11);

        $stack10#13 = $stack10#12;

        n#14 = $stack10#13;

        $stack29#15 = context;

        $stack29#16 = $stack29#15;

        $stack28#17 = target#3;

        $stack28#18 = $stack28#17;

        $stack29#16.<jdk.internal.org.objectweb.asm.Context: int typeRef> = $stack28#18;

        $stack16 = context;

        $stack30#19 = n#14;

        $stack30#20 = $stack30#19;

        if $stack30#20 != 0 goto label11;

        $stack11#21 = null;

        goto label12;

     label11:
        $u0 = new jdk.internal.org.objectweb.asm.TypePath;

        $stack11#21 = $u0;

        $stack12 = this.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        specialinvoke $u0.<jdk.internal.org.objectweb.asm.TypePath: void <init>(byte[],int)>($stack12, u#4);

     label12:
        $stack16.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.TypePath typePath> = $stack11#21;

        $stack18 = u#4;

        $stack17 = 1;

        $stack14 = $stack18 + $stack17;

        $stack20 = 2;

        $stack19 = n#14;

        $stack13 = $stack20 * $stack19;

        $stack15 = $stack14 + $stack13;

        return $stack15;

        nop;
    }

    private void readParameterAnnotations(jdk.internal.org.objectweb.asm.MethodVisitor, jdk.internal.org.objectweb.asm.Context, int, boolean)
    {
        byte[] $stack12;
        byte $stack13, $b0;
        bottom_type v, i, j, av;
        boolean visible;
        jdk.internal.org.objectweb.asm.Context context;
        short n, $stack20, $s0;
        int $stack11, $stack16, synthetics, $stack17, $stack18, $stack19, $stack21, $stack24, $stack25, $stack26, $stack28, $stack29, v#1, v#2, i#3, j#5, $i0, $i1, $i2;
        jdk.internal.org.objectweb.asm.Type[] $stack15;
        java.lang.String $stack14, $stack22;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $stack23, $stack27, av#4, av#6;
        jdk.internal.org.objectweb.asm.ClassReader this;
        jdk.internal.org.objectweb.asm.MethodVisitor mv;
        char[] c;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        mv := @parameter0: jdk.internal.org.objectweb.asm.MethodVisitor;

        context := @parameter1: jdk.internal.org.objectweb.asm.Context;

        v#1 := @parameter2: int;

        visible := @parameter3: boolean;

        $stack12 = this.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack11 = v#1;

        v#2 = v#1 + 1;

        $stack13 = $stack12[$stack11];

        $s0 = (short) $stack13;

        n = $s0 & 255;

        $stack14 = context.<jdk.internal.org.objectweb.asm.Context: java.lang.String desc>;

        $stack15 = staticinvoke <jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type[] getArgumentTypes(java.lang.String)>($stack14);

        $stack16 = lengthof $stack15;

        $i0 = (int) n;

        synthetics = $stack16 - $i0;

        i#3 = 0;

     label1:
        $stack29 = i#3;

        $stack28 = synthetics;

        if $stack29 >= $stack28 goto label3;

        $stack27 = virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>(i#3, "Ljava/lang/Synthetic;", 0);

        av#4 = $stack27;

        if av#4 == null goto label2;

        virtualinvoke av#4.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visitEnd()>();

     label2:
        i#3 = i#3 + 1;

        goto label1;

     label3:
        c = context.<jdk.internal.org.objectweb.asm.Context: char[] buffer>;

     label4:
        $stack21 = i#3;

        $stack20 = n;

        $stack19 = synthetics;

        $i1 = (int) $stack20;

        $stack17 = $i1 + $stack19;

        if $stack21 >= $stack17 goto label7;

        $stack18 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(v#2);

        j#5 = $stack18;

        v#2 = v#2 + 2;

     label5:
        $stack26 = j#5;

        if $stack26 <= 0 goto label6;

        $stack22 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(v#2, c);

        $stack23 = virtualinvoke mv.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>(i#3, $stack22, visible);

        av#6 = $stack23;

        $stack24 = v#2 + 2;

        $stack25 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack24, c, 1, av#6);

        v#2 = $stack25;

        $b0 = -1;

        $i2 = (int) $b0;

        j#5 = j#5 + $i2;

        goto label5;

     label6:
        i#3 = i#3 + 1;

        goto label4;

     label7:
        return;

        nop;
    }

    private int readAnnotationValues(int, char[], boolean, jdk.internal.org.objectweb.asm.AnnotationVisitor)
    {
        byte $b0, $b1;
        bottom_type v, i;
        int $stack6, $stack7, $stack8, $stack9, $stack11, $stack13, $stack14, v#1, i#2, v#3, $i0, $i1;
        java.lang.String $stack12;
        boolean named;
        jdk.internal.org.objectweb.asm.AnnotationVisitor av, $stack10;
        jdk.internal.org.objectweb.asm.ClassReader this;
        char[] buf;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        v#1 := @parameter0: int;

        buf := @parameter1: char[];

        named := @parameter2: boolean;

        av := @parameter3: jdk.internal.org.objectweb.asm.AnnotationVisitor;

        $stack6 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(v#1);

        i#2 = $stack6;

        v#3 = v#1 + 2;

        if named == 0 goto label2;

     label1:
        $stack14 = i#2;

        if $stack14 <= 0 goto label3;

        $stack11 = v#3 + 2;

        $stack12 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(v#3, buf);

        $stack13 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack11, buf, $stack12, av);

        v#3 = $stack13;

        $b0 = -1;

        $i0 = (int) $b0;

        i#2 = i#2 + $i0;

        goto label1;

     label2:
        $stack9 = i#2;

        if $stack9 <= 0 goto label3;

        $stack8 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>(v#3, buf, null, av);

        v#3 = $stack8;

        $b1 = -1;

        $i1 = (int) $b1;

        i#2 = i#2 + $i1;

        goto label2;

     label3:
        $stack10 = av;

        if $stack10 == null goto label4;

        virtualinvoke av.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visitEnd()>();

     label4:
        $stack7 = v#3;

        return $stack7;

        nop;
    }

    private int readAnnotationValue(int, char[], java.lang.String, jdk.internal.org.objectweb.asm.AnnotationVisitor)
    {
        byte[] $stack16, $stack28, bv, $stack127;
        byte $stack17, $stack29, $stack84, $stack120, $stack128, $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7;
        long $stack50, $stack69;
        float[] fv;
        short $stack18, $stack30, $stack44, $stack106, $stack129, $s0, $s1, $s2;
        boolean[] zv, $stack39;
        int[] $stack31, $stack40, $stack47, iv, $stack53, $stack59, $stack66, $stack73, $stack80, $stack95, $stack102, $stack110, $stack116;
        java.lang.Short $stack107;
        jdk.internal.org.objectweb.asm.Type $stack25;
        long[] lv;
        int $stack15, $stack21, $stack26, size, $stack27, $stack32, $stack33, $stack34, $stack35, $stack36, $stack38, $stack41, $stack42, $stack43, $stack45, $stack46, $stack48, $stack49, $stack51, $stack52, $stack54, $stack55, $stack56, $stack57, $stack58, $stack60, $stack61, $stack62, $stack64, $stack65, $stack67, $stack68, $stack71, $stack72, $stack74, $stack75, $stack76, $stack78, $stack79, $stack81, $stack82, $stack83, $stack85, $stack86, $stack87, $stack90, $stack91, $stack94, $stack96, $stack97, $stack98, $stack103, $stack104, $stack105, $stack108, $stack111, $stack112, $stack113, $stack117, $stack118, $stack119, $stack122, $stack126, $stack130, $stack131, $stack132, $stack133, $stack134, $stack135, v#1, v#2, v#4, v#5, i#6, i#7, i#9, i#10, i#11, i#12, i#13, i#14, $stack23#15, $stack23#16, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.Boolean $stack99#3;
        jdk.internal.org.objectweb.asm.ClassReader this;
        java.lang.Object $stack109;
        java.lang.Character $stack115;
        bottom_type v, $stack23, i, $stack37, $stack99;
        double[] dv;
        java.lang.String name, $stack19, $stack20, $stack22, $stack24, $stack100, $stack124;
        char[] buf, cv;
        java.lang.Byte $stack121;
        boolean $stack88, $stack92, $stack123, $stack37#8;
        float $stack63;
        short[] sv;
        double $stack70;
        char $stack77, $stack114;
        jdk.internal.org.objectweb.asm.AnnotationVisitor av, $stack89, $stack93, $stack101, $stack125;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        v#1 := @parameter0: int;

        buf := @parameter1: char[];

        name := @parameter2: java.lang.String;

        av := @parameter3: jdk.internal.org.objectweb.asm.AnnotationVisitor;

        if av != null goto label05;

        $stack127 = this.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack128 = $stack127[v#1];

        $s0 = (short) $stack128;

        $stack129 = $s0 & 255;

        $i0 = (int) $stack129;

        lookupswitch($i0)
        {
            case 64: goto label02;
            case 91: goto label03;
            case 101: goto label01;
            default: goto label04;
        };

     label01:
        $stack130 = v#1 + 5;

        return $stack130;

     label02:
        $stack133 = v#1 + 3;

        $stack134 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack133, buf, 1, null);

        return $stack134;

     label03:
        $stack131 = v#1 + 1;

        $stack132 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack131, buf, 0, null);

        return $stack132;

     label04:
        $stack135 = v#1 + 3;

        return $stack135;

     label05:
        $stack16 = this.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack15 = v#1;

        v#2 = v#1 + 1;

        $stack17 = $stack16[$stack15];

        $s1 = (short) $stack17;

        $stack18 = $s1 & 255;

        $i1 = (int) $stack18;

        tableswitch($i1)
        {
            case 64: goto label16;
            case 65: goto label46;
            case 66: goto label07;
            case 67: goto label12;
            case 68: goto label06;
            case 69: goto label46;
            case 70: goto label06;
            case 71: goto label46;
            case 72: goto label46;
            case 73: goto label06;
            case 74: goto label06;
            case 75: goto label46;
            case 76: goto label46;
            case 77: goto label46;
            case 78: goto label46;
            case 79: goto label46;
            case 80: goto label46;
            case 81: goto label46;
            case 82: goto label46;
            case 83: goto label11;
            case 84: goto label46;
            case 85: goto label46;
            case 86: goto label46;
            case 87: goto label46;
            case 88: goto label46;
            case 89: goto label46;
            case 90: goto label08;
            case 91: goto label17;
            case 92: goto label46;
            case 93: goto label46;
            case 94: goto label46;
            case 95: goto label46;
            case 96: goto label46;
            case 97: goto label46;
            case 98: goto label46;
            case 99: goto label15;
            case 100: goto label46;
            case 101: goto label14;
            case 102: goto label46;
            case 103: goto label46;
            case 104: goto label46;
            case 105: goto label46;
            case 106: goto label46;
            case 107: goto label46;
            case 108: goto label46;
            case 109: goto label46;
            case 110: goto label46;
            case 111: goto label46;
            case 112: goto label46;
            case 113: goto label46;
            case 114: goto label46;
            case 115: goto label13;
            default: goto label46;
        };

     label06:
        $stack108 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(v#2);

        $stack109 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>($stack108, buf);

        virtualinvoke av.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(name, $stack109);

        v#2 = v#2 + 2;

        goto label46;

     label07:
        $stack116 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack117 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(v#2);

        $stack118 = $stack116[$stack117];

        $stack119 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack118);

        $stack120 = (byte) $stack119;

        $stack121 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($stack120);

        virtualinvoke av.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(name, $stack121);

        v#2 = v#2 + 2;

        goto label46;

     label08:
        $stack101 = av;

        $stack100 = name;

        $stack95 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack96 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(v#2);

        $stack97 = $stack95[$stack96];

        $stack98 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack97);

        if $stack98 != 0 goto label09;

        $stack99#3 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        goto label10;

     label09:
        $stack99#3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

     label10:
        virtualinvoke $stack101.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>($stack100, $stack99#3);

        v#2 = v#2 + 2;

        goto label46;

     label11:
        $stack102 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack103 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(v#2);

        $stack104 = $stack102[$stack103];

        $stack105 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack104);

        $stack106 = (short) $stack105;

        $stack107 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($stack106);

        virtualinvoke av.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(name, $stack107);

        v#2 = v#2 + 2;

        goto label46;

     label12:
        $stack110 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack111 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(v#2);

        $stack112 = $stack110[$stack111];

        $stack113 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack112);

        $stack114 = (char) $stack113;

        $stack115 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($stack114);

        virtualinvoke av.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(name, $stack115);

        v#2 = v#2 + 2;

        goto label46;

     label13:
        $stack19 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(v#2, buf);

        virtualinvoke av.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(name, $stack19);

        v#2 = v#2 + 2;

        goto label46;

     label14:
        $stack20 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(v#2, buf);

        $stack21 = v#2 + 2;

        $stack22 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack21, buf);

        virtualinvoke av.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visitEnum(java.lang.String,java.lang.String,java.lang.String)>(name, $stack20, $stack22);

        v#2 = v#2 + 4;

        goto label46;

     label15:
        $stack24 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(v#2, buf);

        $stack25 = staticinvoke <jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type getType(java.lang.String)>($stack24);

        virtualinvoke av.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(name, $stack25);

        v#2 = v#2 + 2;

        goto label46;

     label16:
        $stack122 = v#2 + 2;

        $stack123 = 1;

        $stack124 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(v#2, buf);

        $stack125 = virtualinvoke av.<jdk.internal.org.objectweb.asm.AnnotationVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,java.lang.String)>(name, $stack124);

        $stack126 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack122, buf, $stack123, $stack125);

        v#2 = $stack126;

        goto label46;

     label17:
        $stack26 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(v#2);

        size = $stack26;

        v#4 = v#2 + 2;

        if size != 0 goto label18;

        $stack91 = v#4 - 2;

        $stack92 = 0;

        $stack93 = virtualinvoke av.<jdk.internal.org.objectweb.asm.AnnotationVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitArray(java.lang.String)>(name);

        $stack94 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack91, buf, $stack92, $stack93);

        return $stack94;

     label18:
        $stack28 = this.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack27 = v#4;

        v#5 = v#4 + 1;

        $stack29 = $stack28[$stack27];

        $s2 = (short) $stack29;

        $stack30 = $s2 & 255;

        $i2 = (int) $stack30;

        tableswitch($i2)
        {
            case 66: goto label19;
            case 67: goto label30;
            case 68: goto label42;
            case 69: goto label45;
            case 70: goto label39;
            case 71: goto label45;
            case 72: goto label45;
            case 73: goto label33;
            case 74: goto label36;
            case 75: goto label45;
            case 76: goto label45;
            case 77: goto label45;
            case 78: goto label45;
            case 79: goto label45;
            case 80: goto label45;
            case 81: goto label45;
            case 82: goto label45;
            case 83: goto label27;
            case 84: goto label45;
            case 85: goto label45;
            case 86: goto label45;
            case 87: goto label45;
            case 88: goto label45;
            case 89: goto label45;
            case 90: goto label22;
            default: goto label45;
        };

     label19:
        bv = newarray (byte)[size];

        i#6 = 0;

     label20:
        $stack86 = i#6;

        $stack85 = size;

        if $stack86 >= $stack85 goto label21;

        $stack80 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack81 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(v#5);

        $stack82 = $stack80[$stack81];

        $stack83 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack82);

        $stack84 = (byte) $stack83;

        bv[i#6] = $stack84;

        v#5 = v#5 + 3;

        i#6 = i#6 + 1;

        goto label20;

     label21:
        virtualinvoke av.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(name, bv);

        $b0 = -1;

        $i3 = (int) $b0;

        v#2 = v#5 + $i3;

        goto label46;

     label22:
        zv = newarray (boolean)[size];

        i#7 = 0;

     label23:
        $stack36 = i#7;

        $stack35 = size;

        if $stack36 >= $stack35 goto label26;

        $stack39 = zv;

        $stack38 = i#7;

        $stack31 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack32 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(v#5);

        $stack33 = $stack31[$stack32];

        $stack34 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack33);

        if $stack34 == 0 goto label24;

        $stack37#8 = 1;

        goto label25;

     label24:
        $stack37#8 = 0;

     label25:
        $stack39[$stack38] = $stack37#8;

        v#5 = v#5 + 3;

        i#7 = i#7 + 1;

        goto label23;

     label26:
        virtualinvoke av.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(name, zv);

        $b1 = -1;

        $i4 = (int) $b1;

        v#2 = v#5 + $i4;

        goto label46;

     label27:
        sv = newarray (short)[size];

        i#9 = 0;

     label28:
        $stack46 = i#9;

        $stack45 = size;

        if $stack46 >= $stack45 goto label29;

        $stack40 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack41 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(v#5);

        $stack42 = $stack40[$stack41];

        $stack43 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack42);

        $stack44 = (short) $stack43;

        sv[i#9] = $stack44;

        v#5 = v#5 + 3;

        i#9 = i#9 + 1;

        goto label28;

     label29:
        virtualinvoke av.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(name, sv);

        $b2 = -1;

        $i5 = (int) $b2;

        v#2 = v#5 + $i5;

        goto label46;

     label30:
        cv = newarray (char)[size];

        i#10 = 0;

     label31:
        $stack79 = i#10;

        $stack78 = size;

        if $stack79 >= $stack78 goto label32;

        $stack73 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack74 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(v#5);

        $stack75 = $stack73[$stack74];

        $stack76 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack75);

        $stack77 = (char) $stack76;

        cv[i#10] = $stack77;

        v#5 = v#5 + 3;

        i#10 = i#10 + 1;

        goto label31;

     label32:
        virtualinvoke av.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(name, cv);

        $b3 = -1;

        $i6 = (int) $b3;

        v#2 = v#5 + $i6;

        goto label46;

     label33:
        iv = newarray (int)[size];

        i#11 = 0;

     label34:
        $stack58 = i#11;

        $stack57 = size;

        if $stack58 >= $stack57 goto label35;

        $stack53 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack54 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(v#5);

        $stack55 = $stack53[$stack54];

        $stack56 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack55);

        iv[i#11] = $stack56;

        v#5 = v#5 + 3;

        i#11 = i#11 + 1;

        goto label34;

     label35:
        virtualinvoke av.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(name, iv);

        $b4 = -1;

        $i7 = (int) $b4;

        v#2 = v#5 + $i7;

        goto label46;

     label36:
        lv = newarray (long)[size];

        i#12 = 0;

     label37:
        $stack52 = i#12;

        $stack51 = size;

        if $stack52 >= $stack51 goto label38;

        $stack47 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack48 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(v#5);

        $stack49 = $stack47[$stack48];

        $stack50 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: long readLong(int)>($stack49);

        lv[i#12] = $stack50;

        v#5 = v#5 + 3;

        i#12 = i#12 + 1;

        goto label37;

     label38:
        virtualinvoke av.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(name, lv);

        $b5 = -1;

        $i8 = (int) $b5;

        v#2 = v#5 + $i8;

        goto label46;

     label39:
        fv = newarray (float)[size];

        i#13 = 0;

     label40:
        $stack65 = i#13;

        $stack64 = size;

        if $stack65 >= $stack64 goto label41;

        $stack59 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack60 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(v#5);

        $stack61 = $stack59[$stack60];

        $stack62 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack61);

        $stack63 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($stack62);

        fv[i#13] = $stack63;

        v#5 = v#5 + 3;

        i#13 = i#13 + 1;

        goto label40;

     label41:
        virtualinvoke av.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(name, fv);

        $b6 = -1;

        $i9 = (int) $b6;

        v#2 = v#5 + $i9;

        goto label46;

     label42:
        dv = newarray (double)[size];

        i#14 = 0;

     label43:
        $stack72 = i#14;

        $stack71 = size;

        if $stack72 >= $stack71 goto label44;

        $stack66 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack67 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(v#5);

        $stack68 = $stack66[$stack67];

        $stack69 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: long readLong(int)>($stack68);

        $stack70 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($stack69);

        dv[i#14] = $stack70;

        v#5 = v#5 + 3;

        i#14 = i#14 + 1;

        goto label43;

     label44:
        virtualinvoke av.<jdk.internal.org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(name, dv);

        $b7 = -1;

        $i10 = (int) $b7;

        v#2 = v#5 + $i10;

        goto label46;

     label45:
        $stack87 = v#5 - 3;

        $stack88 = 0;

        $stack89 = virtualinvoke av.<jdk.internal.org.objectweb.asm.AnnotationVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitArray(java.lang.String)>(name);

        $stack90 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValues(int,char[],boolean,jdk.internal.org.objectweb.asm.AnnotationVisitor)>($stack87, buf, $stack88, $stack89);

        v#2 = $stack90;

     label46:
        $stack23#15 = v#2;

        $stack23#16 = $stack23#15;

        return $stack23#16;

        nop;
    }

    private void getImplicitFrame(jdk.internal.org.objectweb.asm.Context)
    {
        java.lang.Integer $stack37, $stack39, $stack41, $stack43, $stack54;
        byte $stack24, $stack27, $stack35, $stack52#2, $stack52#3;
        bottom_type local, i, $stack9, $stack10, $stack15, $stack16, $stack52;
        java.lang.Object[] locals, $stack21;
        jdk.internal.org.objectweb.asm.Context frame;
        java.lang.String desc, $stack14, $stack20, $stack23, $stack26, $stack32, $stack34, $stack44, $stack45, $stack51, $stack16#7, $stack16#8;
        char[] $stack49;
        boolean $stack46;
        int $stack7, $stack8, j, $stack13, $stack18, $stack19, $stack22, $stack25, $stack29, $stack30, $stack31, $stack33, $stack36, $stack38, $stack40, $stack42, $stack47, $stack48, $stack50, $stack53, local#1, i#4, $stack15#5, $stack15#6, $stack9#9, $stack9#10, $i0, $i1, $i2, $i3, $i4;
        char $stack11, $stack12, $stack17, $stack28, $stack10#11, $stack10#12;
        jdk.internal.org.objectweb.asm.ClassReader this;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        frame := @parameter0: jdk.internal.org.objectweb.asm.Context;

        desc = frame.<jdk.internal.org.objectweb.asm.Context: java.lang.String desc>;

        locals = frame.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] local>;

        local#1 = 0;

        $stack7 = frame.<jdk.internal.org.objectweb.asm.Context: int access>;

        $stack8 = $stack7 & 8;

        if $stack8 != 0 goto label02;

        $stack45 = "<init>";

        $stack44 = frame.<jdk.internal.org.objectweb.asm.Context: java.lang.String name>;

        $stack46 = virtualinvoke $stack45.<java.lang.String: boolean equals(java.lang.Object)>($stack44);

        if $stack46 == 0 goto label01;

        $stack53 = local#1;

        local#1 = local#1 + 1;

        $stack54 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer UNINITIALIZED_THIS>;

        locals[$stack53] = $stack54;

        goto label02;

     label01:
        $stack47 = local#1;

        local#1 = local#1 + 1;

        $stack48 = this.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack50 = $stack48 + 2;

        $stack49 = frame.<jdk.internal.org.objectweb.asm.Context: char[] buffer>;

        $stack51 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack50, $stack49);

        locals[$stack47] = $stack51;

     label02:
        $stack52#2 = 1;

        $stack52#3 = $stack52#2;

        i#4 = $stack52#3;

     label03:
        $stack15#5 = i#4;

        $stack15#6 = $stack15#5;

        j = $stack15#6;

        $stack16#7 = desc;

        $stack16#8 = $stack16#7;

        $stack9#9 = i#4;

        $stack9#10 = $stack9#9;

        i#4 = i#4 + 1;

        $stack10#11 = virtualinvoke $stack16#8.<java.lang.String: char charAt(int)>($stack9#10);

        $stack10#12 = $stack10#11;

        $i0 = (int) $stack10#12;

        tableswitch($i0)
        {
            case 66: goto label04;
            case 67: goto label04;
            case 68: goto label07;
            case 69: goto label14;
            case 70: goto label05;
            case 71: goto label14;
            case 72: goto label14;
            case 73: goto label04;
            case 74: goto label06;
            case 75: goto label14;
            case 76: goto label12;
            case 77: goto label14;
            case 78: goto label14;
            case 79: goto label14;
            case 80: goto label14;
            case 81: goto label14;
            case 82: goto label14;
            case 83: goto label04;
            case 84: goto label14;
            case 85: goto label14;
            case 86: goto label14;
            case 87: goto label14;
            case 88: goto label14;
            case 89: goto label14;
            case 90: goto label04;
            case 91: goto label08;
            default: goto label14;
        };

     label04:
        $stack42 = local#1;

        local#1 = local#1 + 1;

        $stack43 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer INTEGER>;

        locals[$stack42] = $stack43;

        goto label15;

     label05:
        $stack38 = local#1;

        local#1 = local#1 + 1;

        $stack39 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer FLOAT>;

        locals[$stack38] = $stack39;

        goto label15;

     label06:
        $stack36 = local#1;

        local#1 = local#1 + 1;

        $stack37 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer LONG>;

        locals[$stack36] = $stack37;

        goto label15;

     label07:
        $stack40 = local#1;

        local#1 = local#1 + 1;

        $stack41 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer DOUBLE>;

        locals[$stack40] = $stack41;

        goto label15;

     label08:
        $stack26 = desc;

        $stack25 = i#4;

        $stack11 = virtualinvoke $stack26.<java.lang.String: char charAt(int)>($stack25);

        $stack27 = 91;

        $i1 = (int) $stack11;

        if $i1 != $stack27 goto label09;

        i#4 = i#4 + 1;

        goto label08;

     label09:
        $stack12 = virtualinvoke desc.<java.lang.String: char charAt(int)>(i#4);

        $i2 = (int) $stack12;

        if $i2 != 76 goto label11;

        i#4 = i#4 + 1;

     label10:
        $stack23 = desc;

        $stack22 = i#4;

        $stack17 = virtualinvoke $stack23.<java.lang.String: char charAt(int)>($stack22);

        $stack24 = 59;

        $i3 = (int) $stack17;

        if $i3 == $stack24 goto label11;

        i#4 = i#4 + 1;

        goto label10;

     label11:
        $stack21 = locals;

        $stack13 = local#1;

        local#1 = local#1 + 1;

        $stack20 = desc;

        $stack18 = j;

        i#4 = i#4 + 1;

        $stack19 = i#4;

        $stack14 = virtualinvoke $stack20.<java.lang.String: java.lang.String substring(int,int)>($stack18, $stack19);

        $stack21[$stack13] = $stack14;

        goto label15;

     label12:
        $stack34 = desc;

        $stack33 = i#4;

        $stack28 = virtualinvoke $stack34.<java.lang.String: char charAt(int)>($stack33);

        $stack35 = 59;

        $i4 = (int) $stack28;

        if $i4 == $stack35 goto label13;

        i#4 = i#4 + 1;

        goto label12;

     label13:
        $stack29 = local#1;

        local#1 = local#1 + 1;

        $stack31 = j + 1;

        $stack30 = i#4;

        i#4 = i#4 + 1;

        $stack32 = virtualinvoke desc.<java.lang.String: java.lang.String substring(int,int)>($stack31, $stack30);

        locals[$stack29] = $stack32;

        goto label15;

     label14:
        goto label16;

     label15:
        goto label03;

     label16:
        frame.<jdk.internal.org.objectweb.asm.Context: int localCount> = local#1;

        return;

        nop;
    }

    private int readFrame(int, boolean, boolean, jdk.internal.org.objectweb.asm.Context)
    {
        byte[] $stack57;
        byte $stack58, $stack59, $stack61, $b0, $b1, $b2, $b3;
        bottom_type tag, stackMap, delta, local, i, $stack14, $stack15, $stack16, $stack17, $stack31, $stack32, $stack33, $stack34, $stack35, $stack36, $stack37, $stack41, $stack42;
        java.lang.Object[] $stack20, $stack24, $stack39, $stack52, $stack54;
        jdk.internal.org.objectweb.asm.Context frame, $stack60, $stack31#14, $stack31#15, $stack34#28, $stack34#29;
        short $stack43, $stack44, $stack46, $stack47, $stack62, tag#2;
        jdk.internal.org.objectweb.asm.Label[] labels, $stack35#32, $stack35#33;
        char[] c;
        boolean zip, unzip, $stack32#20, $stack32#21;
        int $stack11, $stack12, $stack13, $stack19, $stack21, $stack22, $stack23, $stack25, $stack26, $stack27, $stack28, $stack29, $stack30, $stack38, $stack40, $stack45, $stack48, $stack49, $stack50, $stack51, $stack53, $stack55, $stack56, stackMap#1, delta#3, $stack42#4, local#5, i#6, $stack41#7, $stack41#8, local#9, stackMap#10, i#11, local#12, i#13, $stack15#16, $stack15#17, $stack33#18, $stack33#19, $stack14#22, $stack14#23, $stack16#24, $stack16#25, $stack17#30, $stack17#31, $stack37#34, $stack37#35, $i0, $i1, $i2, $i3;
        jdk.internal.org.objectweb.asm.ClassReader this, $stack36#26, $stack36#27;
        jdk.internal.org.objectweb.asm.Label $stack18;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        stackMap#1 := @parameter0: int;

        zip := @parameter1: boolean;

        unzip := @parameter2: boolean;

        frame := @parameter3: jdk.internal.org.objectweb.asm.Context;

        c = frame.<jdk.internal.org.objectweb.asm.Context: char[] buffer>;

        labels = frame.<jdk.internal.org.objectweb.asm.Context: jdk.internal.org.objectweb.asm.Label[] labels>;

        if zip == 0 goto label01;

        $stack57 = this.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack56 = stackMap#1;

        stackMap#1 = stackMap#1 + 1;

        $stack58 = $stack57[$stack56];

        tag#2 = $stack58 & 255;

        goto label02;

     label01:
        tag#2 = 255;

        $b0 = -1;

        $i0 = (int) $b0;

        frame.<jdk.internal.org.objectweb.asm.Context: int offset> = $i0;

     label02:
        $stack60 = frame;

        $stack59 = 0;

        $stack60.<jdk.internal.org.objectweb.asm.Context: int localDiff> = $stack59;

        $stack62 = tag#2;

        $stack61 = 64;

        if $stack62 >= $stack61 goto label03;

        delta#3 = tag#2;

        frame.<jdk.internal.org.objectweb.asm.Context: int mode> = 3;

        frame.<jdk.internal.org.objectweb.asm.Context: int stackCount> = 0;

        goto label16;

     label03:
        if tag#2 >= 128 goto label04;

        delta#3 = tag#2 - 64;

        $stack54 = frame.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] stack>;

        $stack55 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readFrameType(java.lang.Object[],int,int,char[],jdk.internal.org.objectweb.asm.Label[])>($stack54, 0, stackMap#1, c, labels);

        stackMap#1 = $stack55;

        frame.<jdk.internal.org.objectweb.asm.Context: int mode> = 4;

        frame.<jdk.internal.org.objectweb.asm.Context: int stackCount> = 1;

        goto label16;

     label04:
        $stack11 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(stackMap#1);

        delta#3 = $stack11;

        stackMap#1 = stackMap#1 + 2;

        if tag#2 != 247 goto label05;

        $stack52 = frame.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] stack>;

        $stack53 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readFrameType(java.lang.Object[],int,int,char[],jdk.internal.org.objectweb.asm.Label[])>($stack52, 0, stackMap#1, c, labels);

        stackMap#1 = $stack53;

        frame.<jdk.internal.org.objectweb.asm.Context: int mode> = 4;

        frame.<jdk.internal.org.objectweb.asm.Context: int stackCount> = 1;

        goto label16;

     label05:
        if tag#2 < 248 goto label06;

        if tag#2 >= 251 goto label06;

        frame.<jdk.internal.org.objectweb.asm.Context: int mode> = 2;

        $stack48 = 251 - tag#2;

        frame.<jdk.internal.org.objectweb.asm.Context: int localDiff> = $stack48;

        $stack50 = frame.<jdk.internal.org.objectweb.asm.Context: int localCount>;

        $stack49 = frame.<jdk.internal.org.objectweb.asm.Context: int localDiff>;

        $stack51 = $stack50 - $stack49;

        frame.<jdk.internal.org.objectweb.asm.Context: int localCount> = $stack51;

        frame.<jdk.internal.org.objectweb.asm.Context: int stackCount> = 0;

        goto label16;

     label06:
        $stack47 = tag#2;

        $stack46 = 251;

        if $stack47 != $stack46 goto label07;

        frame.<jdk.internal.org.objectweb.asm.Context: int mode> = 3;

        frame.<jdk.internal.org.objectweb.asm.Context: int stackCount> = 0;

        goto label16;

     label07:
        if tag#2 >= 255 goto label12;

        if unzip == 0 goto label08;

        $stack42#4 = frame.<jdk.internal.org.objectweb.asm.Context: int localCount>;

        goto label09;

     label08:
        $stack42#4 = 0;

     label09:
        local#5 = $stack42#4;

        $stack44 = tag#2;

        $stack43 = 251;

        $stack45 = $stack44 - $stack43;

        i#6 = $stack45;

     label10:
        $stack41#7 = i#6;

        $stack41#8 = $stack41#7;

        if $stack41#8 <= 0 goto label11;

        $stack39 = frame.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] local>;

        $stack38 = local#5;

        local#5 = local#5 + 1;

        $stack40 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readFrameType(java.lang.Object[],int,int,char[],jdk.internal.org.objectweb.asm.Label[])>($stack39, $stack38, stackMap#1, c, labels);

        stackMap#1 = $stack40;

        $b1 = -1;

        $i1 = (int) $b1;

        i#6 = i#6 + $i1;

        goto label10;

     label11:
        frame.<jdk.internal.org.objectweb.asm.Context: int mode> = 1;

        $stack27 = tag#2 - 251;

        frame.<jdk.internal.org.objectweb.asm.Context: int localDiff> = $stack27;

        $stack29 = frame.<jdk.internal.org.objectweb.asm.Context: int localCount>;

        $stack28 = frame.<jdk.internal.org.objectweb.asm.Context: int localDiff>;

        $stack30 = $stack29 + $stack28;

        frame.<jdk.internal.org.objectweb.asm.Context: int localCount> = $stack30;

        frame.<jdk.internal.org.objectweb.asm.Context: int stackCount> = 0;

        goto label16;

     label12:
        frame.<jdk.internal.org.objectweb.asm.Context: int mode> = 0;

        $stack12 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(stackMap#1);

        local#9 = $stack12;

        stackMap#10 = stackMap#1 + 2;

        frame.<jdk.internal.org.objectweb.asm.Context: int localDiff> = local#9;

        frame.<jdk.internal.org.objectweb.asm.Context: int localCount> = local#9;

        i#11 = 0;

     label13:
        $stack26 = local#9;

        if $stack26 <= 0 goto label14;

        $stack24 = frame.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] local>;

        $stack23 = i#11;

        i#11 = i#11 + 1;

        $stack25 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readFrameType(java.lang.Object[],int,int,char[],jdk.internal.org.objectweb.asm.Label[])>($stack24, $stack23, stackMap#10, c, labels);

        stackMap#10 = $stack25;

        $b2 = -1;

        $i2 = (int) $b2;

        local#9 = local#9 + $i2;

        goto label13;

     label14:
        $stack13 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(stackMap#10);

        local#12 = $stack13;

        stackMap#1 = stackMap#10 + 2;

        frame.<jdk.internal.org.objectweb.asm.Context: int stackCount> = local#12;

        i#13 = 0;

     label15:
        $stack22 = local#12;

        if $stack22 <= 0 goto label16;

        $stack20 = frame.<jdk.internal.org.objectweb.asm.Context: java.lang.Object[] stack>;

        $stack19 = i#13;

        i#13 = i#13 + 1;

        $stack21 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readFrameType(java.lang.Object[],int,int,char[],jdk.internal.org.objectweb.asm.Label[])>($stack20, $stack19, stackMap#1, c, labels);

        stackMap#1 = $stack21;

        $b3 = -1;

        $i3 = (int) $b3;

        local#12 = local#12 + $i3;

        goto label15;

     label16:
        $stack31#14 = frame;

        $stack31#15 = $stack31#14;

        $stack15#16 = $stack31#15.<jdk.internal.org.objectweb.asm.Context: int offset>;

        $stack15#17 = $stack15#16;

        $stack33#18 = delta#3;

        $stack33#19 = $stack33#18;

        $stack32#20 = 1;

        $stack32#21 = $stack32#20;

        $stack14#22 = $stack33#19 + $stack32#21;

        $stack14#23 = $stack14#22;

        $stack16#24 = $stack15#17 + $stack14#23;

        $stack16#25 = $stack16#24;

        $stack31#15.<jdk.internal.org.objectweb.asm.Context: int offset> = $stack16#25;

        $stack36#26 = this;

        $stack36#27 = $stack36#26;

        $stack34#28 = frame;

        $stack34#29 = $stack34#28;

        $stack17#30 = $stack34#29.<jdk.internal.org.objectweb.asm.Context: int offset>;

        $stack17#31 = $stack17#30;

        $stack35#32 = labels;

        $stack35#33 = $stack35#32;

        $stack18 = virtualinvoke $stack36#27.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label createLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack17#31, $stack35#33);

        $stack37#34 = stackMap#1;

        $stack37#35 = $stack37#34;

        return $stack37#35;

        nop;
    }

    private int readFrameType(java.lang.Object[], int, int, char[], jdk.internal.org.objectweb.asm.Label[])
    {
        byte[] $stack8;
        java.lang.Object[] frame;
        java.lang.Integer $stack11, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18;
        short type, $s0;
        byte $stack9;
        bottom_type v, $stack12;
        int $stack7, index, $stack19, v#1, v#2, $stack12#3, $stack12#4, $i0;
        java.lang.String $stack10;
        jdk.internal.org.objectweb.asm.Label[] labels;
        jdk.internal.org.objectweb.asm.ClassReader this;
        jdk.internal.org.objectweb.asm.Label $stack20;
        char[] buf;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        frame := @parameter0: java.lang.Object[];

        index := @parameter1: int;

        v#1 := @parameter2: int;

        buf := @parameter3: char[];

        labels := @parameter4: jdk.internal.org.objectweb.asm.Label[];

        $stack8 = this.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack7 = v#1;

        v#2 = v#1 + 1;

        $stack9 = $stack8[$stack7];

        $s0 = (short) $stack9;

        type = $s0 & 255;

        $i0 = (int) type;

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            default: goto label09;
        };

     label01:
        $stack18 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer TOP>;

        frame[index] = $stack18;

        goto label10;

     label02:
        $stack17 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer INTEGER>;

        frame[index] = $stack17;

        goto label10;

     label03:
        $stack16 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer FLOAT>;

        frame[index] = $stack16;

        goto label10;

     label04:
        $stack15 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer DOUBLE>;

        frame[index] = $stack15;

        goto label10;

     label05:
        $stack14 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer LONG>;

        frame[index] = $stack14;

        goto label10;

     label06:
        $stack13 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer NULL>;

        frame[index] = $stack13;

        goto label10;

     label07:
        $stack11 = <jdk.internal.org.objectweb.asm.Opcodes: java.lang.Integer UNINITIALIZED_THIS>;

        frame[index] = $stack11;

        goto label10;

     label08:
        $stack10 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>(v#2, buf);

        frame[index] = $stack10;

        v#2 = v#2 + 2;

        goto label10;

     label09:
        $stack19 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(v#2);

        $stack20 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label createLabel(int,jdk.internal.org.objectweb.asm.Label[])>($stack19, labels);

        frame[index] = $stack20;

        v#2 = v#2 + 2;

     label10:
        $stack12#3 = v#2;

        $stack12#4 = $stack12#3;

        return $stack12#4;

        nop;
    }

    protected jdk.internal.org.objectweb.asm.Label readLabel(int, jdk.internal.org.objectweb.asm.Label[])
    {
        jdk.internal.org.objectweb.asm.Label[] labels, $stack7;
        jdk.internal.org.objectweb.asm.ClassReader this;
        jdk.internal.org.objectweb.asm.Label $stack3, $stack4, $stack5;
        int offset, $stack6;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        offset := @parameter0: int;

        labels := @parameter1: jdk.internal.org.objectweb.asm.Label[];

        $stack3 = labels[offset];

        if $stack3 != null goto label1;

        $stack5 = new jdk.internal.org.objectweb.asm.Label;

        specialinvoke $stack5.<jdk.internal.org.objectweb.asm.Label: void <init>()>();

        labels[offset] = $stack5;

     label1:
        $stack7 = labels;

        $stack6 = offset;

        $stack4 = $stack7[$stack6];

        return $stack4;

        nop;
    }

    private jdk.internal.org.objectweb.asm.Label createLabel(int, jdk.internal.org.objectweb.asm.Label[])
    {
        jdk.internal.org.objectweb.asm.Label[] labels;
        jdk.internal.org.objectweb.asm.ClassReader this;
        jdk.internal.org.objectweb.asm.Label $stack4, label;
        byte $b0;
        int offset, $stack5, $stack6, $i0;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        offset := @parameter0: int;

        labels := @parameter1: jdk.internal.org.objectweb.asm.Label[];

        $stack4 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>(offset, labels);

        label = $stack4;

        $stack5 = label.<jdk.internal.org.objectweb.asm.Label: int status>;

        $b0 = -2;

        $i0 = (int) $b0;

        $stack6 = $stack5 & $i0;

        label.<jdk.internal.org.objectweb.asm.Label: int status> = $stack6;

        return label;

        nop;
    }

    private void createDebugLabel(int, jdk.internal.org.objectweb.asm.Label[])
    {
        jdk.internal.org.objectweb.asm.Label $stack3, $stack4;
        int offset, $stack5, $stack6;
        jdk.internal.org.objectweb.asm.Label[] labels;
        jdk.internal.org.objectweb.asm.ClassReader this;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        offset := @parameter0: int;

        labels := @parameter1: jdk.internal.org.objectweb.asm.Label[];

        $stack3 = labels[offset];

        if $stack3 != null goto label1;

        $stack4 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: jdk.internal.org.objectweb.asm.Label readLabel(int,jdk.internal.org.objectweb.asm.Label[])>(offset, labels);

        $stack5 = $stack4.<jdk.internal.org.objectweb.asm.Label: int status>;

        $stack6 = $stack5 | 1;

        $stack4.<jdk.internal.org.objectweb.asm.Label: int status> = $stack6;

     label1:
        return;

        nop;
    }

    private int getAttributes()
    {
        byte $stack17, $stack25, $b0, $b1, $b2, $b3;
        bottom_type u, i, j;
        int $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14, $stack15, $stack16, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack26, $stack27, $stack28, u#1, i#2, j#3, u#4, i#5, j#6, $i0, $i1, $i2, $i3;
        jdk.internal.org.objectweb.asm.ClassReader this;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        $stack4 = this.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack7 = $stack4 + 8;

        $stack5 = this.<jdk.internal.org.objectweb.asm.ClassReader: int header>;

        $stack6 = $stack5 + 6;

        $stack8 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack6);

        $stack9 = $stack8 * 2;

        u#1 = $stack7 + $stack9;

        $stack10 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(u#1);

        i#2 = $stack10;

     label1:
        $stack23 = i#2;

        if $stack23 <= 0 goto label4;

        $stack21 = u#1 + 8;

        $stack22 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack21);

        j#3 = $stack22;

     label2:
        $stack28 = j#3;

        if $stack28 <= 0 goto label3;

        $stack25 = 6;

        $stack24 = u#1 + 12;

        $stack26 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack24);

        $stack27 = $stack25 + $stack26;

        u#1 = u#1 + $stack27;

        $b0 = -1;

        $i0 = (int) $b0;

        j#3 = j#3 + $i0;

        goto label2;

     label3:
        u#1 = u#1 + 8;

        $b1 = -1;

        $i1 = (int) $b1;

        i#2 = i#2 + $i1;

        goto label1;

     label4:
        u#4 = u#1 + 2;

        $stack11 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(u#4);

        i#5 = $stack11;

     label5:
        $stack15 = i#5;

        if $stack15 <= 0 goto label8;

        $stack13 = u#4 + 8;

        $stack14 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack13);

        j#6 = $stack14;

     label6:
        $stack20 = j#6;

        if $stack20 <= 0 goto label7;

        $stack17 = 6;

        $stack16 = u#4 + 12;

        $stack18 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack16);

        $stack19 = $stack17 + $stack18;

        u#4 = u#4 + $stack19;

        $b2 = -1;

        $i2 = (int) $b2;

        j#6 = j#6 + $i2;

        goto label6;

     label7:
        u#4 = u#4 + 8;

        $b3 = -1;

        $i3 = (int) $b3;

        i#5 = i#5 + $i3;

        goto label5;

     label8:
        $stack12 = u#4 + 2;

        return $stack12;

        nop;
    }

    private jdk.internal.org.objectweb.asm.Attribute readAttribute(jdk.internal.org.objectweb.asm.Attribute[], java.lang.String, int, int, char[], int, jdk.internal.org.objectweb.asm.Label[])
    {
        byte $b0;
        bottom_type i;
        int $stack9, off, len, $stack16, codeOff, i#1, $i0;
        java.lang.String type, $stack13;
        boolean $stack14;
        jdk.internal.org.objectweb.asm.Attribute $stack10, $stack11, $stack12, $stack17, $stack18, $u0;
        jdk.internal.org.objectweb.asm.Label[] labels;
        jdk.internal.org.objectweb.asm.ClassReader this;
        char[] buf;
        jdk.internal.org.objectweb.asm.Attribute[] attrs, $stack15;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        attrs := @parameter0: jdk.internal.org.objectweb.asm.Attribute[];

        type := @parameter1: java.lang.String;

        off := @parameter2: int;

        len := @parameter3: int;

        buf := @parameter4: char[];

        codeOff := @parameter5: int;

        labels := @parameter6: jdk.internal.org.objectweb.asm.Label[];

        i#1 = 0;

     label1:
        $stack16 = i#1;

        $stack15 = attrs;

        $stack9 = lengthof $stack15;

        if $stack16 >= $stack9 goto label3;

        $stack12 = attrs[i#1];

        $stack13 = $stack12.<jdk.internal.org.objectweb.asm.Attribute: java.lang.String type>;

        $stack14 = virtualinvoke $stack13.<java.lang.String: boolean equals(java.lang.Object)>(type);

        if $stack14 == 0 goto label2;

        $stack17 = attrs[i#1];

        $stack18 = virtualinvoke $stack17.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute read(jdk.internal.org.objectweb.asm.ClassReader,int,int,char[],int,jdk.internal.org.objectweb.asm.Label[])>(this, off, len, buf, codeOff, labels);

        return $stack18;

     label2:
        i#1 = i#1 + 1;

        goto label1;

     label3:
        $u0 = new jdk.internal.org.objectweb.asm.Attribute;

        $stack10 = $u0;

        specialinvoke $u0.<jdk.internal.org.objectweb.asm.Attribute: void <init>(java.lang.String)>(type);

        $b0 = -1;

        $i0 = (int) $b0;

        $stack11 = virtualinvoke $stack10.<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute read(jdk.internal.org.objectweb.asm.ClassReader,int,int,char[],int,jdk.internal.org.objectweb.asm.Label[])>(this, off, len, null, $i0, null);

        return $stack11;

        nop;
    }

    public int getItemCount()
    {
        int $stack2;
        int[] $stack1;
        jdk.internal.org.objectweb.asm.ClassReader this;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        $stack1 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack2 = lengthof $stack1;

        return $stack2;

        nop;
    }

    public int getItem(int)
    {
        int[] $stack2;
        int item, $stack3;
        jdk.internal.org.objectweb.asm.ClassReader this;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        item := @parameter0: int;

        $stack2 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack3 = $stack2[item];

        return $stack3;

        nop;
    }

    public int getMaxStringLength()
    {
        int $stack1;
        jdk.internal.org.objectweb.asm.ClassReader this;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        $stack1 = this.<jdk.internal.org.objectweb.asm.ClassReader: int maxStringLength>;

        return $stack1;

        nop;
    }

    public int readByte(int)
    {
        byte[] $stack2;
        short $stack4, $s0;
        byte $stack3;
        int index, $i0;
        jdk.internal.org.objectweb.asm.ClassReader this;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        index := @parameter0: int;

        $stack2 = this.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack3 = $stack2[index];

        $s0 = (short) $stack3;

        $stack4 = $s0 & 255;

        $i0 = (int) $stack4;

        return $i0;

        nop;
    }

    public int readUnsignedShort(int)
    {
        byte[] b;
        jdk.internal.org.objectweb.asm.ClassReader this;
        short $stack4, $stack7, $s0, $s1;
        byte $stack3, $stack6;
        int index, $stack5, $stack8, $stack9, $i0, $i1;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        index := @parameter0: int;

        b = this.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack3 = b[index];

        $s0 = (short) $stack3;

        $stack4 = $s0 & 255;

        $i0 = (int) $stack4;

        $stack8 = $i0 << 8;

        $stack5 = index + 1;

        $stack6 = b[$stack5];

        $s1 = (short) $stack6;

        $stack7 = $s1 & 255;

        $i1 = (int) $stack7;

        $stack9 = $stack8 | $i1;

        return $stack9;

        nop;
    }

    public short readShort(int)
    {
        byte[] b;
        jdk.internal.org.objectweb.asm.ClassReader this;
        short $stack4, $stack7, $stack10, $s0, $s1;
        byte $stack3, $stack6;
        int index, $stack5, $stack8, $stack9, $i0, $i1;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        index := @parameter0: int;

        b = this.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack3 = b[index];

        $s0 = (short) $stack3;

        $stack4 = $s0 & 255;

        $i0 = (int) $stack4;

        $stack8 = $i0 << 8;

        $stack5 = index + 1;

        $stack6 = b[$stack5];

        $s1 = (short) $stack6;

        $stack7 = $s1 & 255;

        $i1 = (int) $stack7;

        $stack9 = $stack8 | $i1;

        $stack10 = (short) $stack9;

        return $stack10;

        nop;
    }

    public int readInt(int)
    {
        byte[] b;
        short $stack4, $stack7, $stack12, $stack17, $s0, $s1, $s2, $s3;
        byte $stack3, $stack6, $stack11, $stack16;
        int index, $stack5, $stack8, $stack9, $stack10, $stack13, $stack14, $stack15, $stack18, $stack19, $i0, $i1, $i2, $i3;
        jdk.internal.org.objectweb.asm.ClassReader this;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        index := @parameter0: int;

        b = this.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack3 = b[index];

        $s0 = (short) $stack3;

        $stack4 = $s0 & 255;

        $i0 = (int) $stack4;

        $stack9 = $i0 << 24;

        $stack5 = index + 1;

        $stack6 = b[$stack5];

        $s1 = (short) $stack6;

        $stack7 = $s1 & 255;

        $i1 = (int) $stack7;

        $stack8 = $i1 << 16;

        $stack14 = $stack9 | $stack8;

        $stack10 = index + 2;

        $stack11 = b[$stack10];

        $s2 = (short) $stack11;

        $stack12 = $s2 & 255;

        $i2 = (int) $stack12;

        $stack13 = $i2 << 8;

        $stack18 = $stack14 | $stack13;

        $stack15 = index + 3;

        $stack16 = b[$stack15];

        $s3 = (short) $stack16;

        $stack17 = $s3 & 255;

        $i3 = (int) $stack17;

        $stack19 = $stack18 | $i3;

        return $stack19;

        nop;
    }

    public long readLong(int)
    {
        long l1, $stack9, l0, $stack10, $stack11;
        jdk.internal.org.objectweb.asm.ClassReader this;
        int index, $stack6, $stack7, $stack8;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        index := @parameter0: int;

        $stack6 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(index);

        l1 = (long) $stack6;

        $stack7 = index + 4;

        $stack8 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>($stack7);

        $stack9 = (long) $stack8;

        l0 = $stack9 & 4294967295L;

        $stack10 = l1 << 32;

        $stack11 = $stack10 | l0;

        return $stack11;

        nop;
    }

    public java.lang.String readUTF8(int, char[])
    {
        java.lang.String[] $stack6, $stack8;
        jdk.internal.org.objectweb.asm.ClassReader this;
        int[] $stack7;
        int $stack5, item, $stack9, $stack10, index#1, index#2;
        char[] buf;
        java.lang.String s, $stack11;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        index#1 := @parameter0: int;

        buf := @parameter1: char[];

        $stack5 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(index#1);

        item = $stack5;

        if index#1 == 0 goto label1;

        if item != 0 goto label2;

     label1:
        return null;

     label2:
        $stack6 = this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String[] strings>;

        s = $stack6[item];

        if s == null goto label3;

        return s;

     label3:
        $stack7 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        index#2 = $stack7[item];

        $stack8 = this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String[] strings>;

        $stack9 = index#2 + 2;

        $stack10 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(index#2);

        $stack11 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF(int,int,char[])>($stack9, $stack10, buf);

        $stack8[item] = $stack11;

        return $stack11;
    }

    private java.lang.String readUTF(int, int, char[])
    {
        byte[] b;
        byte $stack12, $stack18, $stack23, $stack26, st#3, c#5;
        bottom_type index, strLen, st, cc, c;
        short $stack22, $stack24, $stack27, c#6, $s0;
        int utfLen, endIndex, $stack11, $stack13, $stack14, $stack15, $stack16, $stack17, $stack19, $stack20, $stack28, index#1, strLen#2, cc#4, $i0, $i1, $i2, $i3, $i4;
        java.lang.String $stack10, $u0;
        char $stack21, $stack25, $stack29;
        jdk.internal.org.objectweb.asm.ClassReader this;
        char[] buf;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        index#1 := @parameter0: int;

        utfLen := @parameter1: int;

        buf := @parameter2: char[];

        endIndex = index#1 + utfLen;

        b = this.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        strLen#2 = 0;

        st#3 = 0;

        cc#4 = 0;

     label1:
        $stack16 = index#1;

        $stack15 = endIndex;

        if $stack16 >= $stack15 goto label8;

        $stack11 = index#1;

        index#1 = index#1 + 1;

        c#5 = b[$stack11];

        tableswitch(st#3)
        {
            case 0: goto label2;
            case 1: goto label5;
            case 2: goto label6;
            default: goto label7;
        };

     label2:
        $s0 = (short) c#5;

        c#6 = $s0 & 255;

        $i0 = (int) c#6;

        if $i0 >= 128 goto label3;

        $stack28 = strLen#2;

        strLen#2 = strLen#2 + 1;

        $stack29 = (char) c#6;

        buf[$stack28] = $stack29;

        goto label7;

     label3:
        $i1 = (int) c#6;

        if $i1 >= 224 goto label4;

        $i2 = (int) c#6;

        if $i2 <= 191 goto label4;

        $stack27 = c#6 & 31;

        cc#4 = (char) $stack27;

        st#3 = 1;

        goto label7;

     label4:
        $stack24 = c#6;

        $stack23 = 15;

        $stack22 = $stack24 & $stack23;

        $stack25 = (char) $stack22;

        cc#4 = $stack25;

        $stack26 = 2;

        st#3 = $stack26;

        goto label7;

     label5:
        $stack17 = strLen#2;

        strLen#2 = strLen#2 + 1;

        $stack19 = cc#4 << 6;

        $stack18 = c#5 & 63;

        $i3 = (int) $stack18;

        $stack20 = $stack19 | $i3;

        $stack21 = (char) $stack20;

        buf[$stack17] = $stack21;

        st#3 = 0;

        goto label7;

     label6:
        $stack13 = cc#4 << 6;

        $stack12 = c#5 & 63;

        $i4 = (int) $stack12;

        $stack14 = $stack13 | $i4;

        cc#4 = (char) $stack14;

        st#3 = 1;

     label7:
        goto label1;

     label8:
        $u0 = new java.lang.String;

        $stack10 = $u0;

        specialinvoke $u0.<java.lang.String: void <init>(char[],int,int)>(buf, 0, strLen#2);

        return $stack10;

        nop;
    }

    private java.lang.String readStringish(int, char[])
    {
        int[] $stack3;
        int index, $stack4, $stack5;
        char[] buf;
        java.lang.String $stack6;
        jdk.internal.org.objectweb.asm.ClassReader this;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        index := @parameter0: int;

        buf := @parameter1: char[];

        $stack3 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack4 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(index);

        $stack5 = $stack3[$stack4];

        $stack6 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack5, buf);

        return $stack6;

        nop;
    }

    public java.lang.String readClass(int, char[])
    {
        int index;
        char[] buf;
        java.lang.String $stack3;
        jdk.internal.org.objectweb.asm.ClassReader this;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        index := @parameter0: int;

        buf := @parameter1: char[];

        $stack3 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readStringish(int,char[])>(index, buf);

        return $stack3;

        nop;
    }

    public java.lang.String readModule(int, char[])
    {
        int index;
        char[] buf;
        java.lang.String $stack3;
        jdk.internal.org.objectweb.asm.ClassReader this;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        index := @parameter0: int;

        buf := @parameter1: char[];

        $stack3 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readStringish(int,char[])>(index, buf);

        return $stack3;

        nop;
    }

    public java.lang.String readPackage(int, char[])
    {
        int index;
        char[] buf;
        java.lang.String $stack3;
        jdk.internal.org.objectweb.asm.ClassReader this;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        index := @parameter0: int;

        buf := @parameter1: char[];

        $stack3 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readStringish(int,char[])>(index, buf);

        return $stack3;

        nop;
    }

    public java.lang.Object readConst(int, char[])
    {
        byte[] $stack13, $stack34;
        java.lang.Float $stack27;
        jdk.internal.org.objectweb.asm.Handle $stack42, $u0;
        java.lang.Integer $stack29;
        byte $stack14, $stack35, $stack47, $stack55;
        java.lang.Long $stack24;
        bottom_type cpIndex, $stack43;
        java.lang.Double $stack22;
        long $stack20, $stack23;
        java.lang.String $stack15, $stack17, $stack18, $stack36, owner, $stack39, name, $stack41, desc, $stack60, $stack61, $stack62;
        char[] buf, $stack45, $stack53, $stack57;
        int[] $stack11, items, $stack50;
        boolean itf, $stack63, $stack43#2;
        jdk.internal.org.objectweb.asm.Type $stack16, $stack19;
        float $stack26;
        int item, index, $stack12, $stack25, $stack28, $stack30, tag, $stack31, $stack32, $stack33, $stack37, $stack38, $stack40, $stack44, $stack48, $stack51, $stack52, $stack56, $stack59, cpIndex#1, cpIndex#3, $i0, $i1;
        double $stack21;
        jdk.internal.org.objectweb.asm.ClassReader this, $stack46, $stack49, $stack54, $stack58;

        this := @this: jdk.internal.org.objectweb.asm.ClassReader;

        item := @parameter0: int;

        buf := @parameter1: char[];

        $stack11 = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        index = $stack11[item];

        $stack13 = this.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack12 = index - 1;

        $stack14 = $stack13[$stack12];

        $i0 = (int) $stack14;

        tableswitch($i0)
        {
            case 3: goto label01;
            case 4: goto label02;
            case 5: goto label03;
            case 6: goto label04;
            case 7: goto label05;
            case 8: goto label06;
            case 9: goto label08;
            case 10: goto label08;
            case 11: goto label08;
            case 12: goto label08;
            case 13: goto label08;
            case 14: goto label08;
            case 15: goto label08;
            case 16: goto label07;
            default: goto label08;
        };

     label01:
        $stack28 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(index);

        $stack29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack28);

        return $stack29;

     label02:
        $stack25 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readInt(int)>(index);

        $stack26 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($stack25);

        $stack27 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($stack26);

        return $stack27;

     label03:
        $stack23 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: long readLong(int)>(index);

        $stack24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack23);

        return $stack24;

     label04:
        $stack20 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: long readLong(int)>(index);

        $stack21 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($stack20);

        $stack22 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack21);

        return $stack22;

     label05:
        $stack18 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(index, buf);

        $stack19 = staticinvoke <jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type getObjectType(java.lang.String)>($stack18);

        return $stack19;

     label06:
        $stack17 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(index, buf);

        return $stack17;

     label07:
        $stack15 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>(index, buf);

        $stack16 = staticinvoke <jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type getMethodType(java.lang.String)>($stack15);

        return $stack16;

     label08:
        $stack30 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readByte(int)>(index);

        tag = $stack30;

        items = this.<jdk.internal.org.objectweb.asm.ClassReader: int[] items>;

        $stack31 = index + 1;

        $stack32 = virtualinvoke this.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack31);

        cpIndex#1 = items[$stack32];

        $stack34 = this.<jdk.internal.org.objectweb.asm.ClassReader: byte[] b>;

        $stack33 = cpIndex#1 - 1;

        $stack35 = $stack34[$stack33];

        $i1 = (int) $stack35;

        if $i1 != 11 goto label09;

        $stack43#2 = 1;

        goto label10;

     label09:
        $stack43#2 = 0;

     label10:
        itf = $stack43#2;

        $stack46 = this;

        $stack44 = cpIndex#1;

        $stack45 = buf;

        $stack36 = virtualinvoke $stack46.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>($stack44, $stack45);

        owner = $stack36;

        $stack50 = items;

        $stack49 = this;

        $stack48 = cpIndex#1;

        $stack47 = 2;

        $stack37 = $stack48 + $stack47;

        $stack38 = virtualinvoke $stack49.<jdk.internal.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>($stack37);

        $stack51 = $stack50[$stack38];

        cpIndex#3 = $stack51;

        $stack54 = this;

        $stack52 = cpIndex#3;

        $stack53 = buf;

        $stack39 = virtualinvoke $stack54.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack52, $stack53);

        name = $stack39;

        $stack58 = this;

        $stack56 = cpIndex#3;

        $stack55 = 2;

        $stack40 = $stack56 + $stack55;

        $stack57 = buf;

        $stack41 = virtualinvoke $stack58.<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>($stack40, $stack57);

        desc = $stack41;

        $u0 = new jdk.internal.org.objectweb.asm.Handle;

        $stack42 = $u0;

        $stack59 = tag;

        $stack60 = owner;

        $stack61 = name;

        $stack62 = desc;

        $stack63 = itf;

        specialinvoke $u0.<jdk.internal.org.objectweb.asm.Handle: void <init>(int,java.lang.String,java.lang.String,java.lang.String,boolean)>($stack59, $stack60, $stack61, $stack62, $stack63);

        return $stack42;

        nop;
    }

    public static void <clinit>()
    {
        <jdk.internal.org.objectweb.asm.ClassReader: int EXPAND_ASM_INSNS> = 256;

        <jdk.internal.org.objectweb.asm.ClassReader: int EXPAND_FRAMES> = 8;

        <jdk.internal.org.objectweb.asm.ClassReader: int SKIP_FRAMES> = 4;

        <jdk.internal.org.objectweb.asm.ClassReader: int SKIP_DEBUG> = 2;

        <jdk.internal.org.objectweb.asm.ClassReader: int SKIP_CODE> = 1;

        return;
    }
}
